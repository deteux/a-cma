====== Run Result ======

* Name: Mango|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 82.75 seconds
  * Quality Gain: 0.649951
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.379076
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 2.2784
    * numOps: 4.3402
    * iFImpl: 0.4433
    * Dep_In: 2.4227
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 1.1649
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.4043
    * NumDesc: 0.0000

* Final Design:
  * Score: -1.029028
  * Possible Actions: 106
  * Applied Actions: 2804
  * Num Types: 96
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 0.5104
    * numOps: 0.4583
    * iFImpl: 0.4479
    * Dep_In: 0.5417
    * nesting: 0.1250
    * numCls: 11.2500
    * numFields: 0.4583
    * abstractness: 0.0278
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.5625
    * NumDesc: 0.0000

* Applied Actions:
  - [-0.378458][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to static 
  - [-0.378458][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.378458][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to static 
  - [-0.378458][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.379489][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.379489][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.378871][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.379902][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.379902][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.380933][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.380007][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.381038][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.380420][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.381451][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.381451][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.381451][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.381451][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.381451][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.381451][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.381451][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.381451][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.382482][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.382482][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.381863][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.381863][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.382894][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.383925][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.383925][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.383925][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.383925][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.383306][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.383306][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.383306][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.384337][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.385368][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.385831][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.385831][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.385831][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.385831][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.386862][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.386244][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to static 
  - [-0.386244][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.385781][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.385781][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.386812][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.386812][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.386812][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.386812][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.386812][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.387842][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.388873][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.389904][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.389904][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.389287][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.389287][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.389287][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.388668][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.389699][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.389699][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.389699][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.390730][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.391761][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.391761][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.391761][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.391761][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to static 
  - [-0.392792][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.392175][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.393206][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.393206][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.393206][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.394237][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.394237][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.395268][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.396299][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.397330][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.393206][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.393206][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.391556][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-0.392587][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.392587][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.391969][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to static 
  - [-0.391969][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.391350][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.391967][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.391349][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to static 
  - [-0.391349][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.392380][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.391454][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.390837][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.390837][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.394342][Inline Method] uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xor.createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.395373][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.395373][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.395373][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.395373][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.396404][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.396404][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.397435][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.test(java.lang.Object)
  - [-0.398465][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.398465][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.399496][Remove Method] 'unique(java.util.Collection,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.398570][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.399601][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.399601][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.398983][Freeze Method] Convert 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.397333][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.397333][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.397333][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.396407][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.397438][Remove Method] 'unique(java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.396820][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.396820][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.397283][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.397283][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.397283][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.397283][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.397283][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.397283][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.398314][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.398314][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.398314][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.398314][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.398314][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.398314][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.399345][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.399345][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.398726][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.398726][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.398726][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.398107][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.398107][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.398107][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.400994][Remove Method] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.400994][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.400994][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.400994][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.400994][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402644][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.402644][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402644][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402644][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402644][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402644][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.404912][Remove Method] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404912][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404912][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.405943][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.405943][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.405943][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.405943][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.406973][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.406973][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.406973][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.406973][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.406973][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.408004][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.408004][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.407386][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.407386][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.408417][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.408417][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.408417][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.409034][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.409034][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.409034][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.409034][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.409034][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.409034][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.409034][Increase Method Security] 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.409034][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.410065][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.410065][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.410065][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.410065][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.410065][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.410065][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.410065][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.411714][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.412745][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.413776][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.414807][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.415838][Remove Method] 'remove(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.416869][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.416869][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.417332][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.417332][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.418363][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.418363][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.420012][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.420012][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.420012][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.420012][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.419087][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.419087][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.419087][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.419087][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.420117][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.419499][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to static 
  - [-0.419499][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.419499][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.419499][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.421767][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.421304][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.421304][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.421304][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.421304][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.422230][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.422230][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.422230][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.422230][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.423156][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.424082][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.424082][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.424082][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.425008][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.425934][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.426860][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.426860][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.427785][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.428711][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.428711][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.428711][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.428711][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.430979][Remove Method] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.430361][Freeze Method] Convert 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.430361][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.431392][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.432009][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.432009][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.432009][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.432009][Decrease Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.432626][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.433244][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.433244][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.433244][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.433861][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.433861][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.433242][Freeze Method] Convert 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.433242][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.433242][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.433242][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.433242][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.433242][Decrease Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.433242][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.434892][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.435923][Remove Method] 'remove(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.436540][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.436077][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.436694][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.436694][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.436694][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.436694][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.436694][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.436694][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.438962][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.438962][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.440612][Remove Method] 'IntegerSequence(java.lang.Integer)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.441229][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.441847][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.442464][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.443081][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.443081][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.443081][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.443081][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.442463][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to static 
  - [-0.442925][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.443388][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.443388][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.443388][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.443388][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.443388][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.443851][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.443851][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.443851][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.443851][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.444314][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.444314][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.444314][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.445345][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.445808][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.445808][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.445808][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.445808][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.445808][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.443956][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.443956][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.445808][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.446271][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.446271][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.446734][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.446734][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.446734][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.446734][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.449002][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.449002][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.450033][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.450496][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.450496][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.450496][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.450496][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.452146][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.452609][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.452609][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.452609][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.452609][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.452609][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.452609][Increase Method Security] 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.452609][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.452609][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.452609][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.451991][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.453641][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.453641][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.453641][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.453641][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.453641][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.453641][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.453641][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.453641][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.453641][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.453641][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.453641][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.453641][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.453641][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.455909][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.456940][Remove Method] 'putAll(java.util.Map)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.456940][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.456940][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.457971][Remove Method] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.457971][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.460239][Remove Method] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.461270][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.462301][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.462301][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.462301][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.463331][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.463331][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.463949][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.464412][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.464412][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.464412][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.464412][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.464412][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.464412][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.465443][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.465443][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.465443][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.463793][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.463175][Freeze Method] Convert 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.464206][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.464206][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.464206][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.464206][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.464206][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.464206][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.464206][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.464206][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.464206][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.465236][Remove Method] 'put(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.464774][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.464774][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.464774][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.464774][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.464774][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.465804][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.465804][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.466835][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.466835][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.466835][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.467866][Inline Method] uk.co.jezuk.mango.Predicates.Any(java.util.Iterator) into uk.co.jezuk.mango.Predicates.Any(java.lang.Object[])
  - [-0.468329][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.468329][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.469979][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.469979][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.469979][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.469361][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.469361][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.469361][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.468436][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.468436][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.468436][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.468436][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.468436][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.469466][Remove Method] 'findPosition(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.470392][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.470392][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.470392][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.470392][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.470392][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.470392][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.473279][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.473279][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.475547][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.474928][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to static 
  - [-0.474928][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.474928][Decrease Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.474928][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.474928][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.474928][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.474311][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.474311][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.474311][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.474311][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.474311][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.475961][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.475961][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.476992][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.476374][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.475756][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.475756][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.475137][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to static 
  - [-0.475137][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.475137][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.475137][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to static 
  - [-0.475137][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.475137][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.476168][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.476785][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.477403][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.478020][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.478020][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.478020][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.478020][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.478020][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.479051][Remove Method] 'values()' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.479051][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.479051][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.483175][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.483175][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.484824][Remove Method] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.484206][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to static 
  - [-0.484206][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.483280][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.484206][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.484206][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.484206][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.485236][Remove Method] 'unique(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.485236][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.485236][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.483587][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.483587][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.483587][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to static 
  - [-0.482661][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.485548][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.485548][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.484622][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.484003][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to static 
  - [-0.486271][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.486271][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.488539][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.488539][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.488539][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.488539][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.488539][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.490189][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.489263][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.489263][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.489263][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.490294][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.489368][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.488749][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to static 
  - [-0.488749][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.488749][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.489780][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.Object)
  - [-0.489780][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.489780][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.489780][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.490706][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.490706][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.490706][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.491632][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.491632][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.495756][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.496682][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.496682][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.496682][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.496682][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.497608][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.497608][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.497608][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.496682][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.496063][Freeze Method] Convert 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.496063][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.496063][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.496063][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.496063][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.497094][Remove Method] 'Method(java.lang.Object,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.497094][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.497094][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.498020][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.498020][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.498020][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.498020][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to static 
  - [-0.498020][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.498020][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.498020][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.498020][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.497557][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.497557][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.497557][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.497557][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.497557][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.501681][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.503949][Remove Method] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.505598][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.505598][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.505598][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.505598][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.505598][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.506629][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.506629][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.506629][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.507092][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.506475][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.504623][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.504623][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.504623][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.504623][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.504623][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.504623][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.504623][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.504623][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.504623][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.506475][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.506475][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.506475][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.506475][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.507092][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.506166][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.507092][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.507092][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.507092][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.507092][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.507092][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.507092][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.507092][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.507092][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.507092][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.506474][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.506474][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.506474][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.505548][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.505548][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.507197][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.509465][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.508847][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.508847][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.508847][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.508847][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.507197][Introduce Factory] for uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object)
  - [-0.507197][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.507197][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.507197][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.507197][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.507197][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.507197][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.509465][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.509465][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.511115][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.511115][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.512217][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.513248][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.513248][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.513248][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.513248][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.513248][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.514897][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.515928][Inline Method] uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object) into uk.co.jezuk.mango.generators.ConstantSequence.createuk.co.jezuk.mango.generators.ConstantSequence()
  - [-0.516871][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.516243][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.514593][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-0.514593][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.514121][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.514121][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.514121][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.516389][Remove Method] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.514740][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.515771][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.516802][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-0.516330][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.516330][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.516959][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.516959][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.516959][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.516959][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.516959][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.516959][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.516959][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.517990][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.517990][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.519021][Remove Method] 'remove(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.519021][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.519493][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.519964][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.519964][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.519964][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.522851][Remove Method] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.522851][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.521907][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.522938][Remove Method] 'count(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.522309][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.522309][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.522309][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.523253][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.522781][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.522781][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.522781][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.522781][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.523812][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.523183][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.521296][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.521296][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.523183][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.523183][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.523812][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.523812][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.523812][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.523812][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.523812][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.524843][Remove Method] 'values()' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.525472][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.525944][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.525944][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.525944][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.526975][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.526975][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.526975][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.526975][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.526975][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.526975][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.526975][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.526975][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.526975][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.526975][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.526975][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.526975][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.526975][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.526975][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.526975][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.526975][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.529243][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.528771][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.529243][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.529243][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.528624][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.528624][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.528624][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.530892][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.530892][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.530892][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.533160][Remove Method] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.532531][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.533160][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.533160][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.533160][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.533160][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.533160][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.533160][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.533160][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.533160][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.533160][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.533160][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.533160][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.533160][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.535428][Remove Method] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.535428][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.535428][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.535428][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.535428][Decrease Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.535428][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.535428][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.537078][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.537078][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.537078][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.537078][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.537078][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.537078][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to static 
  - [-0.538727][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.538727][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.538727][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.538727][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.538727][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.538727][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.538109][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to static 
  - [-0.538109][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.540377][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.540377][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.540377][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.542645][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.544913][Remove Method] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.544913][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.544913][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.544913][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.544913][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.544913][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.544913][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.544913][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.544284][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.544284][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.544284][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.544284][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.544284][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.545933][Remove Field] 'lastClass_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.545933][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.545933][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.545933][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.545933][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.545933][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.545933][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.545933][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.545933][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.545933][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.545933][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.545933][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.545933][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.545933][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.545933][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.547583][Remove Method] 'ArrayIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.547583][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.547583][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.549232][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.550263][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.551294][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.552325][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.552325][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.553356][Inline Method] uk.co.jezuk.mango.Adapt.wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)
  - [-0.553356][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.554387][Remove Method] 'Method(java.lang.Class,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.554387][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.554387][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.554387][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.554387][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.554387][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.554387][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.554387][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.556655][Remove Method] 'Any(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.557686][Remove Method] 'unique(java.util.Collection,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.558717][Remove Method] 'True()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.559346][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.559346][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.559346][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.559346][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.560377][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.560377][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.560377][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.563263][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.563263][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.563263][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.563263][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.565531][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.567799][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.570067][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.570067][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.571717][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.571717][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.573366][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.573366][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.573366][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.573366][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.573366][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.572895][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.572895][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.572895][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.575163][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.576253][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.576253][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.577284][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.578315][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.578315][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.578315][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.579346][Remove Method] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.579346][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.579826][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.579826][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.579826][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.579826][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.579826][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.579826][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.579826][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.579826][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.579826][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.579826][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.579826][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.579826][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.579826][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.579826][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.579826][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.579826][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.579826][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.579826][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.579826][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.579826][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.579826][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.579826][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.579826][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.579826][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.579826][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.579826][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.582094][Remove Method] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.582094][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.583744][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.583744][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.583744][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.584775][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.584775][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.585806][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.585806][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.586837][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.586218][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.586218][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.586218][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.586218][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.586218][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.586218][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.586218][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.586218][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.586218][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.587249][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.588280][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.588280][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.588280][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.589311][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.589311][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.588830][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.589311][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.589311][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.589311][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.589311][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.589311][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.589311][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.589311][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.589311][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.592197][Remove Method] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.594466][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.593985][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.594466][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.594466][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.594466][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.594466][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.594466][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.594466][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.594466][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.594466][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.594466][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.594466][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.594466][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.594466][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.595496][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.595496][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.595496][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.595496][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.596527][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.596527][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.596527][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.596527][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.596527][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.596527][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.596527][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.598795][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.598795][Decrease Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.598795][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.598177][Freeze Method] Convert 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.598177][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.597558][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.599208][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.next(uk.co.jezuk.mango.iterators.ZipIterator) into uk.co.jezuk.mango.iterators.ZipIterator.next()
  - [-0.599208][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.599208][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.598567][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.598567][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.597948][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.597948][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.600216][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.600216][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.601247][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.601888][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.601888][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.601888][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.602919][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.602919][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.602919][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.602919][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.603950][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.603950][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.603950][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.603950][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.606218][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.606218][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.606218][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.606218][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.607249][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.607249][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.607249][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.607249][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.607249][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.608280][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.608280][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.608280][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.608280][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.608280][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.608280][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.608280][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.608280][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.608280][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.608280][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.610548][Remove Method] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.610548][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.610548][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.610548][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.612197][Remove Method] 'GreaterThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.612197][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.612197][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.612197][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.612197][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.612197][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.613228][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.613228][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.613228][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.613228][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.613228][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.613228][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.613228][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.613228][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.615496][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.616527][Remove Method] 'entrySet()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.617558][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.617558][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.619826][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.619826][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.619826][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.619826][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.619208][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.619208][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.619208][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.619208][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.619208][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.619208][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.619208][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.619208][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.619208][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.619208][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.619208][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.619208][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.620857][Remove Method] 'ChainIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.620857][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.620857][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.620857][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.620857][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.622507][Remove Method] 'ZipIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.623538][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.623538][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.623538][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.624569][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.625600][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.626630][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.626630][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.626630][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.626630][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.626150][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.625669][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.625669][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.625669][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.625669][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.625669][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.625669][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.625669][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.625669][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.625669][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.627937][Remove Method] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.627937][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.627937][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.629586][Remove Method] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.629586][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.629586][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.629586][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.629586][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.629586][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.631236][Remove Method] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.631236][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.631236][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.632295][Remove Field] 'seed_' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.633326][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.634357][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.634357][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.636006][Remove Method] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.636006][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.636006][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.637037][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.637037][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.636547][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.636547][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.636547][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.636057][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.636057][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.638943][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.638943][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.638943][Increase Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.641211][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.641211][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.641211][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.641211][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.643479][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.643479][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.643479][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.643479][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.645747][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.647397][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.646778][Freeze Method] Convert 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.646778][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.646778][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.646778][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.646778][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.645798][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.645179][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to static 
  - [-0.645179][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.645179][Decrease Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.646829][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.646829][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.647860][Remove Method] 'find(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.647860][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.647860][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.647860][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.647860][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.647860][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.647860][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.647860][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.647860][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.650128][Remove Method] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.650618][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.650618][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.651624][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.651624][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.651624][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.651624][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.651624][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.652624][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.652624][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.653124][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.653624][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.653624][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.654124][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.654124][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.654124][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.654124][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.652474][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.652474][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.652474][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.652474][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.652474][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.652474][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.652474][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.652474][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.653505][Remove Method] 'count(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.654536][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.655567][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.656598][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.656598][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.656598][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.656598][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.658247][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.next(uk.co.jezuk.mango.iterators.StringIterator) into uk.co.jezuk.mango.iterators.StringIterator.next()
  - [-0.658247][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.658247][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.658247][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.658247][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.658247][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.658247][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.658247][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.658247][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.658247][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.660515][Remove Method] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.660515][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.660515][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.660515][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.660515][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.660015][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.660515][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.658866][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object)
  - [-0.658866][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.658866][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.658866][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.659897][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()
  - [-0.659897][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.659278][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.659278][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.659278][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.659278][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.660928][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.660928][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.665051][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.665051][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.665051][Decrease Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.665051][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.665051][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.665051][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.665051][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.664551][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.664551][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.665582][Remove Method] 'True()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.665582][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.666082][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.666082][Decrease Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.666082][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.666082][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.666082][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.666082][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.666082][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.666082][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.666082][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.667113][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.667113][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.667113][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.668144][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.668144][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.667478][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.668144][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.668144][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.668144][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.668144][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.668144][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.668144][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.668144][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.668144][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.668144][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.667526][Freeze Method] Convert 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.667526][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.667526][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.667526][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.667526][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.667526][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.667526][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.667526][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.669794][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.669794][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.669794][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.671443][Remove Method] 'EqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.670777][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.670277][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.670277][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.670943][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.671443][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.671443][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.673093][Remove Method] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.673093][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.672426][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.671426][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.671426][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.671426][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.669777][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.668777][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.671045][Remove Method] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.671045][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.672075][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.673075][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.674075][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.674075][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.674075][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.674075][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.675725][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.675725][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.675725][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.675725][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.675725][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.675725][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.675725][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.677374][Remove Method] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.678405][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.678405][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.678405][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.678405][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.679436][Remove Method] 'findPosition(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.679436][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.680103][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.680103][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.680103][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.680103][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.679603][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.679603][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.680103][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.680103][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.680103][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.681134][Remove Method] 'isEmpty()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.681134][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.681134][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.682165][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.681665][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.681665][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.681665][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.680015][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>()
  - [-0.681046][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThan.createuk.co.jezuk.mango.binarypredicates.GreaterThan()
  - [-0.681546][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.681546][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.681546][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.682577][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.Generator'
  - [-0.682577][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.682077][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.682077][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.682077][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.682077][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.683108][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.683608][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.683608][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.683608][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.683608][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.683608][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.685258][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.685258][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.685258][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.685258][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.685258][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.685258][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.685258][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.685258][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.685258][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.686289][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.686289][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.686289][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.686289][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.686289][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.686289][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.686289][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.686289][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.686289][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.686289][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.686289][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.686289][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.686289][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.686289][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.686289][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.686289][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.686289][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.686289][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.686289][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.686289][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.687319][Remove Method] 'OneOf(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.687319][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.687319][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.684433][Introduce Factory] for uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.686701][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.687732][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.687732][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.687732][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.687732][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.689381][Remove Method] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.688381][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.689412][Remove Method] 'findPosition(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.689412][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.690422][Remove Field] 'zip_' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.691443][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.691443][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.691443][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.691443][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.691443][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.691443][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.691443][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.691443][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.691443][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.691443][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.691443][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.691443][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.691443][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.691443][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.691443][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.690824][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.692474][Remove Method] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.692474][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.692474][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.694123][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.694123][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.694123][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.694123][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.695773][Remove Method] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.696804][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunction'
  - [-0.696804][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.697834][Inline Method] uk.co.jezuk.mango.Predicates.All(java.util.Iterator) into uk.co.jezuk.mango.Predicates.All(java.util.Collection)
  - [-0.697834][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.697834][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.697834][Decrease Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.697834][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.697834][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.697834][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.697834][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.698865][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.698865][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.698865][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.698865][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.698865][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.698865][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.701133][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.701133][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.701133][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.701133][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.701133][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.701133][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.701133][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.701133][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.701133][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.701133][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.701133][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.701133][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.701133][Decrease Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.705257][Remove Method] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.708762][Remove Method] '<init>(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.708762][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.710412][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.710412][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.710412][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.710412][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.710412][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.710412][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.711443][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.711443][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.711443][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.710762][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.711443][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.710824][Freeze Method] Convert 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.709804][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.709804][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.711453][Remove Method] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.711453][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.711453][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.712474][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.712474][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.712474][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.713505][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.713505][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.713505][Decrease Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.713505][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.713505][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.713505][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.714535][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections$MapBuilder'
  - [-0.715566][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.715566][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.715566][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.715566][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.716597][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.716597][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.716597][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.715979][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to static 
  - [-0.715979][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.715979][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.715979][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.715979][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.717628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.717118][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.717628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.717628][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.716608][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.717628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.717628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.716608][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.715928][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.715928][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.715417][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.715417][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.715417][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.715417][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.715417][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.719541][Remove Method] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.721191][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.722211][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.722211][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.722211][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.722211][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.722891][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.722891][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.723401][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.723401][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.722721][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.722721][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.722721][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.723401][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.722381][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.721361][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.722381][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.722381][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.724649][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.724649][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.723000][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.723000][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.723000][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.723000][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.724649][Remove Method] 'LessThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.725680][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.725680][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.727329][Remove Method] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.728350][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.728350][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.728350][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.728350][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.728350][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.728350][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.729381][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.729381][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.729381][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.729381][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.729381][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.731030][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.731030][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.730010][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.730010][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-0.729391][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.729391][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.728711][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.728031][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.728031][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.728031][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.728031][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.729051][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.729051][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.729051][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.730701][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.730701][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.730701][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.730701][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.730701][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.730701][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.730701][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.732350][Remove Method] 'OneOf(java.util.Iterator)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.733030][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.733711][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.733711][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.733711][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.737834][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.737834][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.737834][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.737834][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-0.739484][Remove Method] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.741133][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.findNext(uk.co.jezuk.mango.iterators.SkippingIterator) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.740113][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.739603][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.738582][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.738582][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.738582][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.738582][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.738582][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.738582][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.738582][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.739613][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.740644][Inline Method] uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.Method(java.lang.Class,java.lang.String,java.lang.Class)
  - [-0.739624][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.739624][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.740655][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.740655][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.740655][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.739974][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.739974][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.741005][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.742026][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.743046][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.743046][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.744067][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.744747][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.744747][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.744747][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.745257][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.744577][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.745257][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.745257][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.746288][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.746288][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.746288][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.746288][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.746288][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.746288][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.746288][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.746288][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.746288][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.746288][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-0.746288][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.747938][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.750206][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.750206][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.750206][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.751829][Remove Field] 'val$g' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.751829][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.751829][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.752860][Remove Method] 'values()' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.752860][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.752860][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.752860][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.753891][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.753891][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.753891][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.753272][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.752230][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.753880][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.754922][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.754922][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.757190][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.756571][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.756571][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.758221][Remove Method] 'Constant(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.758221][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.757179][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.758221][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.758221][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.758221][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.758221][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.758221][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.758221][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.758221][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.759870][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.759870][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.759870][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.759870][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.759870][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.760901][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.760901][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.760901][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.760901][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.760901][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.760901][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.760901][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.760901][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.760901][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.760901][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.760901][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.760901][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.760901][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.761932][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.761932][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.761932][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.762963][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.762963][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PUBLIC'
  - [-0.762442][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.762442][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.762963][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.762963][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.762963][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.762963][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.762963][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.762268][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.761227][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.762268][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.762268][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.762963][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.762268][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.762268][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.761227][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.761227][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.760185][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.760185][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.761227][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.760185][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.760185][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.761227][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.762268][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.762963][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.762963][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.762963][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.763994][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.762344][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.762344][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.762344][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.761303][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.761303][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.761303][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.759219][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.761303][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.760608][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.762258][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.764526][Remove Method] '<init>(uk.co.jezuk.mango.collections.MapFactory$1)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.764526][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PACKAGE'
  - [-0.764526][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.764526][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.763484][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.763484][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.763484][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.765752][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.767402][Remove Method] 'StringIterator(java.lang.String)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.767402][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.767402][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.768443][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.768443][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.768443][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.769485][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.770516][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.770516][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.771210][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.771210][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.771210][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.771210][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.772241][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.772241][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.772241][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.771720][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.771720][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.772241][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.772241][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.773272][Remove Method] 'find(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.773272][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.773272][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.773272][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.773272][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.773272][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.773272][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.773272][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.773272][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.773272][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.773272][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.774303][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.775334][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.775334][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.775334][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.775334][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.776365][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.776365][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.777396][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.777396][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.777396][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.776875][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.776875][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.776875][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.776875][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.779143][Remove Method] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.779837][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.779837][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.780532][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.780532][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-0.781226][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.781226][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.781226][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.781921][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.782615][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.783136][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.783136][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.783136][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.783136][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.783136][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.781487][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.779837][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.779837][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.779837][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PUBLIC'
  - [-0.779837][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.779837][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.779837][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.779316][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.779316][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.780966][Remove Method] 'SingletonIterator(java.lang.Object)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.780966][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.780966][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.783234][Remove Method] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.783234][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.783234][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.783234][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.784265][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.784265][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.784265][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.788388][Remove Method] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.789419][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.790450][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.790450][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.789929][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.790450][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.790971][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.790971][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.790450][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.790450][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.789929][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.789235][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.789235][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.789929][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.790450][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.789409][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.789409][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PACKAGE'
  - [-0.789409][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.789409][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.788790][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.789832][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.790863][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryPredicate'
  - [-0.791894][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.791894][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.792414][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.792414][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.791373][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.792414][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.792414][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.792414][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.792414][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.792414][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.792414][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.792414][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.793445][Remove Method] 'intersection(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.793445][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PACKAGE'
  - [-0.796332][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.796332][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.796332][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.796332][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.796332][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.796332][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.796332][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PACKAGE'
  - [-0.798600][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.798600][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.798600][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.798600][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.798600][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.800868][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.800868][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.800347][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.803234][Remove Method] 'Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.803234][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.804265][Remove Method] '<init>(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.804265][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.804265][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.805914][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.806954][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.806954][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.806336][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.807367][Inline Method] uk.co.jezuk.mango.Adapt.verifyReturnType(java.lang.reflect.Method,java.lang.Class) into uk.co.jezuk.mango.Adapt.Method(java.lang.Class,java.lang.String,java.lang.Class)
  - [-0.807367][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.807367][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.809016][Remove Method] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.809016][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.808307][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.808307][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.809338][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.810369][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.810369][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.811367][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.811367][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.810280][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.811367][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.812091][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.812635][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.812635][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.812635][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.812635][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.812091][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.812635][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.812635][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.812016][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.810367][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.809280][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.810929][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.fn(uk.co.jezuk.mango.generators.IntegerSequence) into uk.co.jezuk.mango.generators.IntegerSequence.fn()
  - [-0.812016][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.812016][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.812016][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.812016][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.813047][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.813047][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.814697][Remove Method] 'createuk.co.jezuk.mango.Generators()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.814697][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.813610][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.813610][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.815259][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.815259][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.816346][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.816346][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.816346][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.817996][Remove Method] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.817996][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.817996][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.819027][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.818302][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.819027][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.819027][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-0.817940][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.816853][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.817940][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.817396][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.818483][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.818483][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.819027][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.819027][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.819027][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.819027][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.819027][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.819027][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.820676][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.819951][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.820676][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.820676][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.820676][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.820676][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.819951][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.819951][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.820676][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.820676][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.820133][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.820676][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.820133][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.820676][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.820676][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.820676][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.822944][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.823975][Remove Method] 'find(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.823250][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.821601][Introduce Factory] for uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class)
  - [-0.822632][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()
  - [-0.823357][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.823357][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.823357][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.823357][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.823357][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PUBLIC'
  - [-0.823357][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.823357][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.823357][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.822813][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.822813][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.822813][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.822813][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.822813][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.823357][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.822813][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.823357][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.823357][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.823357][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.823357][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.823357][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.823357][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.822270][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.822270][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.822270][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.822270][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.823357][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.822632][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.822632][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.823357][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.823357][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.822270][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.823357][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.823357][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.823357][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.823357][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.823357][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.823357][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.823357][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.823357][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.825625][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.825625][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.825625][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.825625][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.827274][Remove Method] 'createuk.co.jezuk.mango.iterators.StringIterator()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.827274][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.827274][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.827274][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.827274][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.826187][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.827274][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.826549][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.827274][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.826187][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.826187][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.827274][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.827274][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.827274][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.827274][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.827274][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.828305][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.828305][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.829954][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.All()' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.830952][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.830211][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.830211][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.830952][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.830396][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.830396][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.830396][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.828747][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory.<init>()
  - [-0.828747][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.828747][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.828747][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.831015][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.832046][Inline Method] uk.co.jezuk.mango.collections.MapFactory.<init>() into uk.co.jezuk.mango.collections.MapFactory.createuk.co.jezuk.mango.collections.MapFactory()
  - [-0.831305][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.831305][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.832046][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.832601][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.832601][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.830952][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.829841][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.829841][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.833964][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.836232][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.836232][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PUBLIC'
  - [-0.836232][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.836232][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.836232][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.837882][Remove Method] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.839443][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.839443][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.840579][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.841610][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.841610][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.841610][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.840474][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.840474][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.840474][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.840474][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.839906][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.839906][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.839906][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.839906][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.841555][Remove Method] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.842691][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.843260][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.843260][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.843260][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.843260][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.843260][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.843260][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.843260][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.840987][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.839851][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.842123][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.843260][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.842691][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.842691][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.843260][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.843260][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.843260][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.843260][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.842123][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.843260][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.843260][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.843260][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.844909][Remove Method] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.844909][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.844909][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.844152][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.843394][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.845043][Remove Method] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.846693][Remove Field] 's_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.847594][Remove Field] 'pos_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.848369][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.849144][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.848369][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.849144][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.849144][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.848369][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.849144][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.849144][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.849144][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.851412][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.851412][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.851412][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.851412][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.851412][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.851412][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.851412][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.851412][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.851412][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.851412][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.851412][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.853062][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.854093][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.854994][Remove Field] 'val$methodName' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.854994][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.853804][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.854994][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.854994][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.853804][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.852155][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer)
  - [-0.853345][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.854376][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.854376][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.854376][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.856644][Remove Method] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.856644][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.856644][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.856644][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.856644][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PACKAGE'
  - [-0.857675][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.857080][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.857675][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.857675][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PACKAGE'
  - [-0.856484][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.858752][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.859943][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.859348][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.858157][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.858157][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.856967][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.858157][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.859348][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.859943][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.859943][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-0.859943][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.859348][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.859348][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.858157][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.858157][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PACKAGE'
  - [-0.858157][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.858157][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.859348][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.860379][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Function'
  - [-0.860379][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.860974][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.860974][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.860974][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.862005][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.862005][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.862005][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.862005][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.862005][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.862005][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.863036][Remove Method] 'unique(java.util.Collection,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.862242][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.861647][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.862440][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.863036][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.863036][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.863036][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.863036][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.862242][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.863036][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.863036][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.863036][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.863036][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.862440][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.861845][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.862876][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.862281][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.862876][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.863471][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.862281][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.862281][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.861487][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.862678][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.863471][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.864067][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.864067][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PACKAGE'
  - [-0.865098][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.865098][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.865098][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.865098][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.865098][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.865098][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.865098][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.865098][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.865098][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.865098][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.863448][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.863448][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.864479][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.864479][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.863289][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.864479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.863289][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.864479][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.864479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.864479][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.864479][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.863884][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.863884][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.864479][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.863289][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.863289][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.862693][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.863884][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.863090][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.858966][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.862472][Inline Method] uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Or.createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.863265][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.863860][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.862211][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.863242][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.863242][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.862448][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.862448][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.862448][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.864716][Remove Method] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.864716][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.864716][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.864716][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.864716][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.867603][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.867603][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.870489][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.872758][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.872162][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.874430][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.874430][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.874430][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.876698][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.876698][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.878348][Remove Method] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.879379][Remove Method] '<init>(java.lang.Object,java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.881624][Remove Field] 'obj_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.881624][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.883273][Remove Field] 'argType_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.884922][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.886572][Remove Field] 'val$obj' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.886572][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.886572][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.888221][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.889252][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.889252][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.890283][Remove Method] 'unique(java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.890283][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.891129][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.891129][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.891129][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.891942][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.891942][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.892769][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.893553][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.894291][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.894291][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.894291][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.894291][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.894291][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.894291][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.893634][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.894291][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.894291][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.894291][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.894291][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.895941][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.895941][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.895941][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.895941][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.895941][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.895941][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.895941][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.895941][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.895941][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.895941][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.897590][Remove Method] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.897590][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.898621][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.898621][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.897963][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.898621][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.898621][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.898621][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.897744][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.897086][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.897086][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.897086][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-0.897963][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.898621][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.897306][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.898621][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.897744][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.898621][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.897306][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.897306][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.898621][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.898621][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.898621][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.900271][Remove Method] 'NotEqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.900271][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.900271][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.900271][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.901920][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.903570][Remove Field] 'item' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.903570][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.903570][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.905219][Remove Field] 'index' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.905219][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.905909][Remove Field] 'useCount' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.905909][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.905909][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.905909][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.907558][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.906882][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.907558][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.907558][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.907558][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.907558][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.905909][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.906940][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.906940][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.906940][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.906940][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PACKAGE'
  - [-0.906940][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.909826][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.908475][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.908475][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.909826][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.910857][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.908154][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.910857][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.910857][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.909506][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.910857][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.910857][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.910857][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.911888][Remove Method] 'remove(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.911888][Decrease Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PUBLIC'
  - [-0.910537][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.910537][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.910537][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.911888][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.911888][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.911888][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.911888][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.911888][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.914156][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.913255][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.914286][Remove Method] 'remove(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.915187][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.914286][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.914286][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.914286][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.915317][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.916218][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.913515][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.916218][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.916218][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.916218][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.916218][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.916218][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.916218][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.914867][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.916218][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.916218][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.916218][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.915317][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.916218][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.916218][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.915317][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.916218][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.914568][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.914568][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.914568][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.914568][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.916218][Remove Method] 'createuk.co.jezuk.mango.collections.MapFactory()' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.917249][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.917249][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.917249][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.917249][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.917249][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.917249][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.917249][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.917249][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.917249][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.918898][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.918898][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.918898][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.918898][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.918898][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.919929][Remove Method] 'TeeIterator(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.919254][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.919929][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.919929][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.919929][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.919929][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.919254][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.919254][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PACKAGE'
  - [-0.921522][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.922197][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.920846][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.922197][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.922197][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.922197][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.922197][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.922197][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.921296][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.919945][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.921296][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.921296][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.922197][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.922197][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.922197][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.925084][Remove Method] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.925084][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.925084][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.924183][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.924183][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.924183][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.926451][Remove Method] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.927352][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.927352][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.927352][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.928383][Inline Method] uk.co.jezuk.mango.algorithms.Unique.match(java.util.Comparator,java.lang.Object,java.lang.Object) into uk.co.jezuk.mango.algorithms.Unique.execute(java.util.Iterator,java.util.Comparator)
  - [-0.927707][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.928383][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.928383][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.928383][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.927707][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.927031][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.926131][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.926131][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.925455][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.926356][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.926356][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.927031][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.927707][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.927707][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.931831][Remove Method] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.930930][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.931831][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.932507][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.931155][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.932507][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.932507][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.931606][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.932507][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.932507][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.932507][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.931155][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.932507][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.932507][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.931155][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.932507][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.932507][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.931831][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.931831][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.931831][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.932507][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.932507][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.932507][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.932507][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PUBLIC'
  - [-0.932507][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.932507][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.934156][Remove Method] 'createuk.co.jezuk.mango.functions.Constant()' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.934792][Remove Field] 'value_' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.934792][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.934792][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.934792][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.934792][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.936441][Remove Method] 'BoundedIterator(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.935053][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.936441][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.935747][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.935053][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.935053][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.935053][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.935053][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.935747][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.936441][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.936441][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.936441][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.936441][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.936441][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.936441][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.936441][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.937472][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.936778][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.937472][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.937472][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.937472][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.937472][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.937472][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.937472][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.937472][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.937472][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.937472][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PACKAGE'
  - [-0.937472][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.938503][Remove Method] 'execute(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.938503][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.937577][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.937577][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.938503][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.938503][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.938503][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.938503][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.938503][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.938503][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.938503][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.938503][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.938503][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.938503][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.938503][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.938503][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.938503][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.937809][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.937809][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.938503][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.938503][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.935726][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.938503][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.938503][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.938503][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.938503][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.938503][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.938503][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.938503][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.938503][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.937114][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.938503][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.938503][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.942627][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.942627][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.942627][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.944895][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.946092][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.946092][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.946092][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.947741][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.947741][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PACKAGE'
  - [-0.950009][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.950009][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.950009][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.948581][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.950009][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.950009][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.951659][Remove Method] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.953308][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.952356][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.954005][Remove Field] 'valid_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.954005][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.954958][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.954958][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PUBLIC'
  - [-0.952101][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.952101][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.954958][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.952071][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.952071][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.954339][Inline Method] uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Not.createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.953387][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.953387][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.951737][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator)
  - [-0.950309][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.949356][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.950785][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.950785][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.951816][Inline Method] uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.Any.createuk.co.jezuk.mango.unarypredicates.Any()
  - [-0.951816][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.951816][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.952768][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.952768][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.951816][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.952768][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.951816][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.952768][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.952768][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PACKAGE'
  - [-0.955036][Remove Method] 'wrap(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.955989][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.955989][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.958257][Remove Method] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.958257][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.957542][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.958257][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.958257][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PUBLIC'
  - [-0.958257][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.959906][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.959906][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.959906][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.959906][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.962793][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.963824][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.963824][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.963824][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.962871][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.963824][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.963824][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.965473][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.965473][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.968360][Remove Method] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.967407][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.967407][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to 'PROTECTED'
  - [-0.967407][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.969675][Remove Field] 'pred_' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.968247][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.969896][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.969896][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to 'PACKAGE'
  - [-0.971325][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.972356][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Predicate'
  - [-0.972356][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.971642][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.972594][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.973308][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.973823][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.973823][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.973823][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.973823][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PUBLIC'
  - [-0.972843][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.971372][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.972843][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.973823][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.972353][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.973823][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.973823][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.973823][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.974854][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.974119][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.974119][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.974854][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.974854][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.974854][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.974854][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.975885][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.975885][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.977535][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.979184][Remove Field] 'useCount_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.980834][Remove Field] 'iterator_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.982483][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.982929][Remove Field] 'buffer_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.982929][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.981919][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.982929][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.981919][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.982929][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.982929][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.982929][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.982929][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.982929][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.982929][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.982929][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.982929][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.984579][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.986228][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.987878][Remove Field] 'list_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.988249][Remove Field] 'end_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.988249][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.988249][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.988249][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.988249][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.988249][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.989280][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.989280][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.989280][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.990929][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Any()' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.990929][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.991218][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.991218][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.991218][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.991218][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.991218][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PUBLIC'
  - [-0.991218][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.991218][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.991218][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.996579][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-1.001321][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-1.001321][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.003589][Remove Field] 'val$g2' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-1.005857][Remove Field] 'val$g1' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-1.006673][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-1.006673][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.006673][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.006673][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-1.005024][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-1.006055][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-1.006055][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.006055][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-1.004944][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.003833][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.004944][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.006055][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-1.006055][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-1.006055][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-1.006055][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-1.004388][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.006055][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.006055][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-1.006055][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-1.006055][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.006055][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.006055][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.006055][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-1.007704][Remove Method] 'ReverseIterator(java.util.List)' of type 'uk.co.jezuk.mango.Iterators'
  - [-1.007704][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.007704][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PUBLIC'
  - [-1.007704][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.007704][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-1.007704][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-1.009354][Remove Method] 'BoundedIterator(java.util.Iterator,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-1.009354][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PACKAGE'
  - [-1.010385][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-1.010385][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.996319][Remove Class] uk.co.jezuk.mango.Bind
  - [-0.996319][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.996319][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PUBLIC'
  - [-0.994653][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.996319][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.996319][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.996319][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.996319][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.996319][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.994653][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.996319][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.996319][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.996319][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.996319][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.996319][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.996319][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.996319][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PACKAGE'
  - [-0.999236][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.999236][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.997569][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.995903][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.995903][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.997569][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.999236][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.999236][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.999236][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.999236][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.997569][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.999236][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.999236][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.999236][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.999236][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.997569][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.999236][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.999236][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.999236][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.999236][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.999236][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.997569][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.999236][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.999236][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.999236][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.997569][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.999236][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.999236][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-1.000903][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-1.001018][Remove Field] 'seed_' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-1.001018][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.001018][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.001018][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-1.001018][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.996851][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-1.000393][Inline Method] uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xnor.createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.998726][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.999768][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.999768][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.999768][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.999768][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.999768][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.999768][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.999768][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.999768][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.999768][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.999768][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.999768][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.999768][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PACKAGE'
  - [-1.000809][Remove Method] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-1.000809][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-1.000809][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.999085][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.999085][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.000809][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-1.000809][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-1.000809][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-1.003726][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-1.004355][Remove Field] 'p_' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-1.004355][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.004355][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.004355][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.004355][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-1.005397][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-1.005397][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-1.006438][Inline Method] uk.co.jezuk.mango.algorithms.SymmetricDifference.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.SymmetricDifference.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-1.006438][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.006438][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.006438][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-1.006438][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.006438][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-1.008105][Remove Method] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-1.008105][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.006319][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-1.008105][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-1.008105][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-1.007986][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-1.007986][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.007986][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-1.007986][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PACKAGE'
  - [-1.010903][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-1.010903][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-1.010903][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PUBLIC'
  - [-1.010903][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.010903][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-1.010903][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-1.010903][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.010903][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-1.010903][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.010903][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.010903][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.010903][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.010903][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.010903][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.010903][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-1.013194][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-1.014861][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.016528][Remove Field] 'end_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.018194][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.018194][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.017938][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-1.017938][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.017938][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.017938][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.017938][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.017938][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-1.017938][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.017938][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.017938][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.017938][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.017938][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PUBLIC'
  - [-1.017938][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.017938][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.017938][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.017938][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.017938][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.017938][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.017938][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-1.017938][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.015021][Introduce Factory] for uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator)
  - [-1.017313][Inline Method] uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator) into uk.co.jezuk.mango.iterators.GeneratorIterator.createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)
  - [-1.017313][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.017313][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.017313][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.017313][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-1.017313][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.017313][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.017313][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.017313][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.017313][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.017313][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.017313][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-1.017313][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-1.017313][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.017313][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.017313][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.017313][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.017313][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-1.017313][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.017313][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-1.017313][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.017313][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-1.017313][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.017313][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PACKAGE'
  - [-1.018355][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-1.018355][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.018355][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.018355][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-1.018355][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-1.022521][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-1.024813][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-1.025028][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-1.025028][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-1.025028][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.025028][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.025028][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.025028][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.025028][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.025028][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-1.027944][Remove Method] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-1.027986][Remove Field] 'generator_' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-1.027986][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.027986][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.027986][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.027986][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.027986][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-1.027986][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.027986][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-1.027986][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.027986][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-1.027986][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.027986][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.027986][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.027986][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.027986][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.027986][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-1.027986][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-1.027986][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.027986][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.027986][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.027986][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.025903][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-1.025903][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.027986][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-1.027986][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.027986][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.027986][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.027986][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.027986][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.027986][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.027986][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.027986][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.027986][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.027986][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.027986][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.027986][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.027986][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.027986][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.027986][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-1.027986][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-1.027986][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-1.027986][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.027986][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.027986][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.027986][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.027986][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-1.027986][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.027986][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.027986][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.027986][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.027986][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.027986][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.027986][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-1.027986][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.027986][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.027986][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-1.027986][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-1.027986][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.027986][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.027986][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.027986][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.027986][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.027986][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.027986][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.027986][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.027986][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.027986][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-1.027986][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.027986][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.027986][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.027986][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.027986][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.027986][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-1.029028][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-1.029028][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item

====== Run Result ======

* Name: Mango|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 82.37 seconds
  * Quality Gain: 0.677584
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.379076
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 2.2784
    * numOps: 4.3402
    * iFImpl: 0.4433
    * Dep_In: 2.4227
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 1.1649
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.4043
    * NumDesc: 0.0000

* Final Design:
  * Score: -1.056661
  * Possible Actions: 105
  * Applied Actions: 2848
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 0.4948
    * numOps: 0.3608
    * iFImpl: 0.4433
    * Dep_In: 0.4845
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 0.4433
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.5625
    * NumDesc: 0.0000

* Applied Actions:
  - [-0.380107][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.381138][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.381138][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.381138][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.382169][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.381243][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.382274][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.383305][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.383305][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.383305][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.383305][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.383305][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.384336][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.384336][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.382687][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator)
  - [-0.383717][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.383717][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.383717][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.383717][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.384180][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.384180][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.383562][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.383562][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.383562][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.383562][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.383562][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.383562][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.384593][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.384593][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.384593][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.385624][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.386087][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.386704][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.386704][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.387321][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.387321][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.386703][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.386703][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.386703][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.387734][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.388765][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.388765][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.388146][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to static 
  - [-0.388146][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.388146][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.389177][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.389177][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.388558][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.389589][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.389589][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.389589][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to static 
  - [-0.390620][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.390620][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.390620][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.391651][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.391651][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.391651][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.391651][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.391651][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.391651][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.391651][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.391651][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.391651][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.392682][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.392682][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.392682][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.392682][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.393713][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.393713][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to static 
  - [-0.394744][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.394744][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.395775][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.396806][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.396187][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to static 
  - [-0.397218][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.397218][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.397218][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.398249][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.test(java.lang.Object)
  - [-0.398249][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.398249][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.399280][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.400311][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.400311][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.400311][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400311][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.400311][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400311][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.400311][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.401342][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.401342][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.401342][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402373][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.402373][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402373][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.402373][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402373][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402373][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.401447][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.401447][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.401447][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.401447][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402478][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.403509][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.404540][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.404540][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.404540][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404540][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405571][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.405571][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.405571][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.405571][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.404952][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to static 
  - [-0.403100][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.403100][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.403100][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.403100][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403100][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.403100][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403100][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.403100][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.404952][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.404952][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.405983][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.407014][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.407014][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.408045][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.408045][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.408045][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.408045][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.409076][Remove Method] 'findPosition(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.409076][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.409076][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.410107][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections$MapBuilder'
  - [-0.410107][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.410107][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.410107][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.412375][Remove Method] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.412375][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.412375][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.413406][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.413406][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.413406][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.413406][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.415674][Remove Method] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.415055][Freeze Method] Convert 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.415055][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.415055][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.415055][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.415055][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.414437][Freeze Method] Convert 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.414437][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.415054][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.419178][Remove Method] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.418252][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.418252][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.418252][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.418252][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.418252][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.418252][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.418252][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.418252][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.418252][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.418252][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.421757][Remove Method] '<init>(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.421294][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.421294][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.421294][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.421294][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.421294][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.423562][Remove Method] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.423562][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.423562][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.423562][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.423562][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.423562][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.426448][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.428716][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.431293][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.433561][Remove Method] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.433561][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.435828][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.435828][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.435828][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.437477][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.438508][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.438508][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.438508][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.437891][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.437891][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.437891][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.438922][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.438922][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.438922][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.438922][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.438922][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.438922][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.438922][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.438459][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.439490][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.439490][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.439490][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.441758][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.441758][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.441758][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.441758][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.441758][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.442789][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.442789][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.443820][Inline Method] uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.Any.createuk.co.jezuk.mango.unarypredicates.Any()
  - [-0.443820][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.443820][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.443820][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.443820][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.443820][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.443820][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.443820][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.443820][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.445469][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.445469][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.446810][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.447841][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.448872][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.449903][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.450934][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.451965][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.452996][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.454027][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.454027][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.453408][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to static 
  - [-0.453408][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.453408][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.453408][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.455676][Remove Method] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.455676][Decrease Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.455676][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.457326][Remove Method] 'NotEqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.456400][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.456400][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.456400][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.457431][Remove Method] 'remove(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.457431][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.457431][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.459699][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.459699][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.459080][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to static 
  - [-0.459080][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.459080][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.459080][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.459080][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.459080][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.460111][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.460111][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.460111][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.460111][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.461142][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.461142][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.461142][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.461142][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.461142][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.462068][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.462068][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.460418][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.460418][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.461449][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.460986][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.460368][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to static 
  - [-0.460368][Increase Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.461399][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.461399][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.461399][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.461399][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.461399][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.461399][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.462430][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.462430][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.460780][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-0.459131][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.459131][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.459131][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.458513][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.458513][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.459544][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.459544][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.459544][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.460575][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.460575][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.460575][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.460575][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.459649][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.460267][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.460267][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.461916][Remove Field] 'lastClass_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.462947][Remove Method] 'find(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.462021][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.462021][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.463873][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.463873][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.465523][Remove Method] 'LessThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.465523][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.465523][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.465523][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.465523][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.463671][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.463671][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.463208][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.465060][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.464442][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.463979][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.463979][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.465010][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.465010][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.465010][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.465010][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.465010][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.465936][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.465936][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.465936][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.465936][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.465936][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.466399][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.466862][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.466862][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.466862][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.469749][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.469749][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to static 
  - [-0.472017][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.474130][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.476397][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.477428][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-0.478354][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.479280][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.478817][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.479743][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.480669][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.481595][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.481132][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.481132][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.480513][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.481544][Remove Method] 'find(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.481544][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.481544][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.481544][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.482575][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.Object)
  - [-0.482575][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.482575][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.482575][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.482575][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.483501][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.483501][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.483501][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.484118][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.484736][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.484736][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.484736][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.487004][Remove Method] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.487621][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.487621][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.488238][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.488238][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.488238][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.489269][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.489886][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.490504][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.491121][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.486997][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.490502][Inline Method] uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xor.createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.490502][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.490502][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.491533][Remove Method] 'containsKey(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.490607][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.489989][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to static 
  - [-0.488339][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-0.488339][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.488339][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.488339][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.489265][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.489265][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.489265][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.489265][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.489265][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.489265][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.489883][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.489420][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.489883][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.489883][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.489264][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.489264][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.489264][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.488646][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.488646][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.488646][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.488646][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.488646][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.488646][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.489109][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.489109][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.491377][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.491377][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.491377][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.493026][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.next(uk.co.jezuk.mango.iterators.ZipIterator) into uk.co.jezuk.mango.iterators.ZipIterator.next()
  - [-0.494057][Inline Method] uk.co.jezuk.mango.Predicates.Any(java.util.Iterator) into uk.co.jezuk.mango.Predicates.Any(java.lang.Object[])
  - [-0.494057][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.495088][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.496119][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.496119][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.497150][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.497613][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.497613][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.497613][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.497613][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.497613][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.497613][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.497613][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.497613][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.497613][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.497613][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.497613][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.497613][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.497613][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.498644][Remove Method] 'values()' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.499107][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.499107][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.500138][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.500138][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.500600][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.500600][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.500600][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.501063][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.501063][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.501526][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.501526][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.501526][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.502557][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.502557][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.504207][Remove Method] 'GreaterThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.504670][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.504670][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.504670][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.505133][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.504515][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.504978][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.504978][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.505441][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.505441][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.505441][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.504824][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.504824][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.507092][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.507092][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.507709][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.507709][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.507091][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.508740][Remove Method] 'Constant(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.508740][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.508740][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.508740][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.506889][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.506889][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.506270][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to static 
  - [-0.506270][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.506270][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.508122][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.508122][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.507503][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.507503][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.507503][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.507503][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.507503][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.509771][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.510802][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.510802][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.511833][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.511833][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.511833][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.511215][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.511215][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.511215][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.511215][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.512246][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.512246][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.512246][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.510596][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory.<init>()
  - [-0.510596][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.510596][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.510596][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.510596][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.510596][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.510133][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.510133][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.510133][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.510596][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.510596][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.510596][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.512864][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.512864][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.512864][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.512864][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.515132][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.514515][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.514515][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.516164][Remove Method] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.517195][Inline Method] uk.co.jezuk.mango.collections.MapFactory.<init>() into uk.co.jezuk.mango.collections.MapFactory.createuk.co.jezuk.mango.collections.MapFactory()
  - [-0.517813][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.517813][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.517813][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.517813][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.517350][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.517350][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.517350][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.517813][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.517813][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.518843][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.518225][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to static 
  - [-0.518225][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.516373][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.516373][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.516373][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.518225][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.518225][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.518225][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.518225][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.518225][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.517762][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.516836][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.516836][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.516836][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.516836][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.516836][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.516836][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.517867][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.517867][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.517867][Decrease Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.517404][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.517404][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.517404][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.516787][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.516787][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.516787][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.516787][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.516787][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.517713][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.517713][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.517713][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.517713][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.518330][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.518793][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.518793][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.518793][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.519824][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.520287][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.520287][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.520287][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.519668][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to static 
  - [-0.518742][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.518742][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.518742][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.520392][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.520392][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.519773][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.520804][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.has(int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.520804][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.520804][Decrease Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.521835][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.522866][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.522866][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.522866][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.523897][Inline Method] uk.co.jezuk.mango.Adapt.wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.ArgumentMethod(java.lang.String,java.lang.Class)
  - [-0.523897][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.523897][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.524823][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.524823][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.524823][Decrease Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.524823][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.524823][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.524823][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.524823][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.524823][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.524823][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.524823][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.527091][Remove Method] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.528740][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.529771][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.529308][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.529308][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.529308][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.531576][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.531576][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.531576][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.531576][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.531576][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.531576][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.531576][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.531576][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.531576][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.533317][Remove Field] 'val$g' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.533317][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.533317][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.533317][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.533317][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.534967][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.535439][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.535439][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.535439][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.535439][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.535439][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.535439][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.535439][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.535439][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.537088][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.537088][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.539356][Remove Method] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.538884][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.538884][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.538884][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.537941][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.537941][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.537941][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.537941][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.537941][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.537941][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.537941][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.538972][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.539915][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.540387][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.539444][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.539444][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.539444][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.539444][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.538500][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.537882][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.538825][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.538825][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.538825][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.539856][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.539856][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.539856][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.539856][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.537969][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.537969][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.537969][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.539856][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.539237][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.539237][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.540268][Remove Method] 'count(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.540268][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.541212][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.541212][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.541212][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.540593][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to static 
  - [-0.540593][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.539650][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.539650][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.539650][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.539650][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.541918][Remove Method] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.542861][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.542861][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.542861][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.542861][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.543892][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.543892][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.543892][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.543892][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.543892][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.543892][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.543892][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.543892][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.543892][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.543892][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.543892][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.544923][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.545954][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.545954][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.545954][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.547604][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.548634][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.548634][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.548634][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.548634][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.548634][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.548634][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.548634][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.548634][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.550902][Remove Method] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.550902][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.550902][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.550902][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.553171][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.554820][Remove Method] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.554820][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.554820][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.554820][Decrease Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.554820][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.554820][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.555851][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.Object)
  - [-0.555851][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.555851][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.556882][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.556882][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.556882][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.556882][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.556882][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.556882][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.556882][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.556410][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.556410][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.555792][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.555792][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.555792][Decrease Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.556263][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.556263][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.556263][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.556263][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.556263][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.558531][Remove Method] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.558531][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.559562][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.559562][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.559562][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.559562][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.559562][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.559091][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.559562][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.559562][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.559562][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.558619][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.558619][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.558619][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.558619][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.560268][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.561299][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.561299][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.562243][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.561624][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.561624][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.561624][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.561624][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to static 
  - [-0.560681][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.561624][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.560681][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.560209][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.560209][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.561152][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.561152][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.561152][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.561624][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.561624][Decrease Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.561624][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.561624][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.561624][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.561624][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.561624][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.561624][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.561624][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.561624][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.562655][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.562655][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.562655][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.563686][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.563686][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.563686][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.563686][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.563686][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.563686][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.563686][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.565954][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.565954][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.565954][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.565954][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.565954][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.565954][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.568222][Remove Method] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.568222][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.569253][Remove Method] '<init>(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.569253][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.569253][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to static 
  - [-0.569253][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.570902][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.570902][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.570902][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.571933][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.571933][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.573045][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.574076][Inline Method] uk.co.jezuk.mango.Adapt.verifyReturnType(java.lang.reflect.Method,java.lang.Class) into uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)
  - [-0.574076][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.574076][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.574076][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.574076][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.574076][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.578199][Remove Method] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.578199][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.578199][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.578199][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.580467][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.581498][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.581498][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.581018][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.580537][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.580537][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.579918][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.581568][Remove Method] 'IntegerSequence(java.lang.Integer)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.582048][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.582048][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.582048][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.583079][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.583560][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.582919][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.581958][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.581958][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.581958][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.581958][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.581958][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.582989][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.582989][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.582989][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.582989][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.588349][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.593092][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.593092][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.596001][Remove Field] 'val$g2' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.598269][Remove Field] 'val$g1' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.598269][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.598269][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.599959][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.600990][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.600990][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.600990][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.600990][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.602020][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.602020][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.602020][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.602020][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.603051][Remove Method] 'unique(java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.603051][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.603051][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.605319][Remove Method] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.605319][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.606300][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.606300][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.605681][Freeze Method] Convert 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.605681][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.605681][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.605681][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.605063][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to static 
  - [-0.605063][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.605063][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.605063][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.605063][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.607331][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.607331][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.607331][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.607331][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.605681][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.606712][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.606712][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.606712][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.606712][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.606712][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.607743][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.607743][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.607743][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.607743][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.607743][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.607743][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.607743][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.607743][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.607743][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.611867][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.612898][Remove Method] 'findPosition(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.612244][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.612244][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.612244][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.612244][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.612244][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.612898][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.612898][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.612898][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.612898][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.612898][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.617021][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.617021][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.617021][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.617021][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.617021][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.617021][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.617021][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.617021][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.617021][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.617021][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.617021][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.617021][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.621145][Remove Method] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.621145][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.621145][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.622176][Remove Method] 'unique(java.util.Collection,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.622176][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.622176][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.622176][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.623207][Remove Method] 'intersection(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.623207][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.621246][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.623207][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.623207][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.623207][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.623207][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.625475][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.625475][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.626506][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.626506][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.626506][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.627537][Remove Method] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.627537][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.628568][Remove Method] 'values()' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.628568][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.628568][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.628568][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.626918][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.626428][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.626428][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.628078][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.629109][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.630139][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.Generator'
  - [-0.629521][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.629521][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.628902][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.628902][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.629393][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.629393][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.629393][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.629393][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.629393][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.629393][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.629393][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.629393][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to static 
  - [-0.629393][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.629393][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.629393][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.629393][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.630424][Remove Method] 'unique(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.630424][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.630424][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.630424][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.630424][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.630424][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.629805][Freeze Method] Convert 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.628155][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.628155][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.628155][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.628155][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.627665][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.628696][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.627047][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.627047][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.628078][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.628078][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.629109][Inline Method] uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ChainIterator.createuk.co.jezuk.mango.iterators.ChainIterator()
  - [-0.629109][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.629109][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.629109][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.629109][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.629109][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.629109][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.630758][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.630758][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.630758][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.630139][Freeze Method] Convert 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.630139][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.630139][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.631170][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.632201][Inline Method] uk.co.jezuk.mango.Predicates.OneOf(java.util.Iterator) into uk.co.jezuk.mango.Predicates.OneOf(java.util.Collection)
  - [-0.632201][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.632201][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.632201][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.632201][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.633232][Remove Method] 'values()' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.633232][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.633722][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.633722][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.633722][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.637846][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.637228][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to static 
  - [-0.637228][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.637228][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.636609][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.636609][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.640733][Remove Method] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.640733][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.640733][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.640733][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.640733][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.642382][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.642382][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.642382][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.642382][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.642382][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.642382][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.642382][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.642382][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.642382][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.642382][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.642382][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.642382][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.642382][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.642382][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.644032][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.645063][Remove Method] 'count(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.646094][Remove Method] 'clear()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.646094][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.646094][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.646094][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.647125][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.647125][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.647125][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.647125][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.646506][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to static 
  - [-0.646506][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.648774][Remove Method] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.648774][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.648774][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.648774][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.649805][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.649805][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.649805][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.649805][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.649805][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.649805][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.650836][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.650836][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.650836][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.650836][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.650836][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.650836][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.650836][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.650836][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.650836][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.650836][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.650836][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.650836][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.650836][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.650836][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.650836][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.650836][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.653104][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.653104][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.653104][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.653104][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.653104][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.654753][Remove Method] 'createuk.co.jezuk.mango.functions.Constant()' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.654753][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.654753][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.654753][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.656403][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.655913][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.656403][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.656403][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.656403][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.655422][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.655422][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.654932][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.655913][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.656403][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.655784][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.655784][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.655784][Decrease Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.655784][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.655784][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.655784][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.655784][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.655784][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.655784][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.655784][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.655784][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.655784][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.655784][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.655784][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.655784][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.655784][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.655784][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.655784][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.655784][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.655784][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.655784][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.655784][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.655784][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.658052][Remove Method] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.659083][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.659083][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.660733][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.660733][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.660733][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.660733][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.660733][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.660733][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.660733][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.660733][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.660733][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.660733][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.660733][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.662382][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.662382][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.662382][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.662382][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.662382][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.662382][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.663413][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.664444][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.664444][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.664444][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.663954][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.664444][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.663954][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.664444][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.664444][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.664444][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.664444][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.664444][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.665475][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.665475][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.665475][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.665475][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.664985][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.664004][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.664004][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.664004][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.664004][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.664004][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.664985][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.665475][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.665475][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.665475][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.665475][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.665475][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.665475][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.664985][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.664985][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.664985][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.664985][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.665475][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.664985][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.664985][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.664985][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.665475][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.665475][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.665475][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.667125][Remove Method] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.667125][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.667125][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.669393][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.669393][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.669393][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.669393][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.669393][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.671042][Remove Method] 'OneOf(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.671042][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.672073][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.672073][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.672073][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.672073][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.672073][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.672073][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.672073][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.672073][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.672073][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.673104][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.673104][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.674135][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.674135][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.674135][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.674135][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.674135][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.674135][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.674135][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.674135][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.674135][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.675784][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.674804][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.675835][Remove Method] 'size()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.676815][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.676815][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.676815][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.676815][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.679083][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.679083][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.679083][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.679083][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.680114][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.680114][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.680114][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.680114][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.681145][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.681145][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.681145][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.681145][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.681145][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.681145][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.681145][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.682176][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.682176][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.682176][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.682176][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.682176][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.682176][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.682176][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.682176][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.683207][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.683207][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.683207][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.683207][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.684238][Remove Method] 'get(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.684238][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.684238][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.684238][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.685887][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.685887][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.688774][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.688120][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.688120][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.688120][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.688120][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.688120][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.688120][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.688120][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.688120][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.690388][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.690388][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.692657][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.692657][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.692657][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.692657][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.694306][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.694306][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.694306][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.695955][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.698224][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.698224][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.698224][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.699873][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.699873][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.699873][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.699873][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.699873][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.702141][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.703196][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.703196][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.704227][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.704227][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.705258][Remove Method] 'Method(java.lang.Object,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.706289][Inline Method] uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.Method(java.lang.Class,java.lang.String)
  - [-0.707319][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.708350][Remove Field] 'val$methodName' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.708350][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.709355][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.709355][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.709355][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.707705][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.707705][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.707705][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.707705][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.709355][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.711623][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.711623][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.711623][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.712654][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.713631][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.713631][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.713631][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.714662][Remove Method] 'unique(java.util.Collection,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.714662][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.714662][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.714662][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.714662][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.714662][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.714662][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.714662][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.714662][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.714662][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.716930][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.717961][Remove Method] 'True()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.717961][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.720847][Remove Method] 'Method(java.lang.Class,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.721878][Remove Method] '<init>(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.721878][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.721878][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.721878][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.721878][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.721878][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.721878][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.723528][Remove Field] 'argType_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.724559][Remove Method] '<init>(java.lang.Object,java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.724559][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.724559][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.725589][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.727239][Remove Field] 'val$obj' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.727239][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.727239][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.729507][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.729507][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.731156][Remove Field] 'obj_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.731156][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.732806][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.732806][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.734455][Remove Method] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.736105][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.736105][Decrease Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.737136][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.findNext() into uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.737136][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.738167][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.739115][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.739115][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.738390][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.737847][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.736197][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.737847][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.738878][Inline Method] uk.co.jezuk.mango.Predicates.All(java.util.Iterator) into uk.co.jezuk.mango.Predicates.All(java.util.Collection)
  - [-0.738259][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.738259][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.737172][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.737172][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.738822][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.fn(uk.co.jezuk.mango.generators.IntegerSequence) into uk.co.jezuk.mango.generators.IntegerSequence.fn()
  - [-0.740471][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.739384][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.738841][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.741109][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.742196][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.742196][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.742196][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.742196][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.742196][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.743845][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.743845][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.744932][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.744932][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.745963][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.745963][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.745963][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.745963][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.746994][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.746994][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.748025][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.748025][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.748901][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.749743][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.750547][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.751322][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.751322][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.751322][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.751322][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.752353][Remove Method] 'remove(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.752353][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PUBLIC'
  - [-0.752934][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.752934][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.753516][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.753516][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.753516][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.753516][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.753516][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.755165][Remove Method] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.755165][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.755165][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.755165][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.756196][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.756196][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.757227][Remove Method] 'findPosition(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.757227][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.757227][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.757227][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.757227][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.761351][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.763619][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.765047][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.765047][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.766078][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.766078][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.766078][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.766078][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.766078][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.766078][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.766078][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.766078][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.766078][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.764428][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.764428][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.767315][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.767315][Decrease Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.769583][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.771851][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.771851][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.774119][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.774119][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.774119][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.775768][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.775768][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.775768][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.775768][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.775768][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.775768][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.776799][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.777830][Remove Method] 'unique(java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.777830][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.777830][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.777830][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.777830][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.777830][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.778599][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.778599][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.778599][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.780249][Remove Method] 'StringIterator(java.lang.String)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.780249][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.780249][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.780249][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.780249][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.780249][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.780249][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.780249][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.780249][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.780249][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.780249][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.782517][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.782517][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.784166][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.784166][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.784166][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.785197][Remove Method] 'unique(java.util.Collection,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.785197][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.785197][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.785197][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.785197][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.785197][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.785197][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.785197][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.785197][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.785197][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.785197][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.785197][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.785197][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.785197][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.785197][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.785197][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.786228][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.786228][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.786228][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.786228][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.787259][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.785609][Introduce Factory] for uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object)
  - [-0.785609][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.784390][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.785609][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.785609][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.783960][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>()
  - [-0.783147][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.782528][Freeze Method] Convert 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.782528][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.783559][Inline Method] uk.co.jezuk.mango.algorithms.Unique.match(java.util.Comparator,java.lang.Object,java.lang.Object) into uk.co.jezuk.mango.algorithms.Unique.execute(java.util.Iterator,java.util.Comparator)
  - [-0.781120][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.783559][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.783559][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.783559][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.782950][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.783980][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThan.createuk.co.jezuk.mango.binarypredicates.GreaterThan()
  - [-0.785011][Inline Method] uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object) into uk.co.jezuk.mango.generators.ConstantSequence.createuk.co.jezuk.mango.generators.ConstantSequence()
  - [-0.785824][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.785824][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.786434][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.786434][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.786434][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.786434][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.785215][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.786434][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.786434][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.786434][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.785215][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.787483][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.787483][Decrease Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.786864][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.786864][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.786864][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.786864][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.788514][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.788514][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.788514][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.788514][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PUBLIC'
  - [-0.790163][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.790163][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.790163][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.791383][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.791383][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.792414][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.792414][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.792414][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.792414][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.792414][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.792414][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.792414][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.792414][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.792414][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.793444][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.793444][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.793444][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.793444][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.793444][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.793444][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.793444][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.793444][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.793444][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.793444][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.792835][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.792835][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.793444][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.793444][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.793444][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.793444][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.793444][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.793444][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.793444][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.794475][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.794475][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.794475][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.794475][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.793662][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.793662][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.792849][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.792036][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.792849][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.793662][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.792443][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.792443][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.792443][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.793662][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.794475][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.794475][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.794475][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.794475][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.795506][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.794888][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.794888][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.792449][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.792449][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.792449][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.792449][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.792449][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.791229][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.791229][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.791229][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.791229][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.791229][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.791229][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.793668][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.793668][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.795318][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.796537][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.796537][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.798805][Remove Method] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.798805][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.798805][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.798805][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.798805][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.799836][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.798187][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-0.799218][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.799218][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PACKAGE'
  - [-0.801486][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.801486][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.801486][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.801486][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.801486][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.803135][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.803135][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.803135][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.803135][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.803135][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.803135][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.803135][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.803135][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.804785][Remove Method] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.802346][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.804785][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.804785][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.805816][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.803377][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.803377][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.805816][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.805003][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.805003][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.804384][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.806033][Remove Method] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.806846][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.806033][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.806846][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.806846][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.807660][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.808473][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.808473][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.808473][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.808473][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.808473][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.808473][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.808473][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.808473][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.808473][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.808473][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.808473][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.809503][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.809503][Decrease Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PUBLIC'
  - [-0.809503][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.809503][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.812390][Remove Method] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.812390][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.812390][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.812390][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.812390][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.811577][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.811577][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.811577][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.809928][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.809928][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.811577][Remove Method] 'ReverseIterator(java.util.List)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.811577][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.811577][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.809138][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.807489][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.809928][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.809928][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.809928][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.809928][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.814051][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.814051][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.816319][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.816319][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.816319][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PUBLIC'
  - [-0.816319][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.815100][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.815100][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.815100][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.816319][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.816319][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.816319][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.816319][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.816319][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.817350][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.818381][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.818381][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.818381][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.819194][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.819194][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.819194][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.819194][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.819194][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.821462][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.821462][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.821462][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.821462][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.821462][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.821462][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.821462][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.821462][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.821462][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.821462][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.821462][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.823112][Remove Method] 'EqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.823112][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.823112][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.823112][Decrease Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PUBLIC'
  - [-0.823112][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.823112][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.823112][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.823112][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.821892][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.823112][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.823112][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.821892][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.821892][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.823112][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.823112][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.823112][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.824761][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.824761][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.824761][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.824761][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.824761][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.824761][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.824761][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.826411][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.next(uk.co.jezuk.mango.iterators.StringIterator) into uk.co.jezuk.mango.iterators.StringIterator.next()
  - [-0.825801][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.825801][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.825801][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.825801][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.826832][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.826832][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.827442][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.827442][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.827442][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.827442][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.827442][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.827442][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.827442][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.828473][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.829238][Remove Field] 'value_' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.829238][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.829238][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.829238][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.829238][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.829238][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.829238][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.829238][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.829238][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.829238][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.829238][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.829238][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.829238][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.829238][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.829238][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.831506][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.833155][Remove Method] 'createuk.co.jezuk.mango.collections.MapFactory()' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.833155][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.833155][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.833155][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.833155][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.834805][Remove Method] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.834805][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.834180][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.834180][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.834805][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.834805][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.834805][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.834805][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.834186][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.834186][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PACKAGE'
  - [-0.834186][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.834186][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.834186][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.837073][Remove Method] 'Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.838104][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.838104][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.838104][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.838104][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.838104][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.838104][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.838104][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.838104][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.838104][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.838104][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.838104][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.839753][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.838503][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.838503][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.839753][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.839753][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.839135][Freeze Method] Convert 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.839135][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.839135][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.839135][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.839135][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.839135][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.843258][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.843258][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.843258][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.843258][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.843258][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.843258][Decrease Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.843258][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.843258][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.843258][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.843258][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.843258][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.843258][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.843258][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.843258][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.843258][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.844908][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.844908][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.845939][Remove Method] 'True()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.845939][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.845939][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.845939][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.845939][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.846970][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.846970][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.846970][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.846970][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.846970][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.848001][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.848001][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.848001][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.848001][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.848001][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.848001][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.848001][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.848001][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.849650][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.All()' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.849650][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.849650][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.850370][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.850370][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.850370][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.850370][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.852020][Remove Method] 'createuk.co.jezuk.mango.iterators.StringIterator()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.852020][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.853669][Remove Field] 's_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.852387][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.853669][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.853669][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.852387][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.853669][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.853669][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.851105][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.851105][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.853669][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.853669][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.852020][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.852020][Decrease Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PUBLIC'
  - [-0.853051][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.852196][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.850914][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.850914][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.852196][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.852196][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.853051][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.853051][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.848927][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.848927][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.848927][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.848927][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.848927][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.848927][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.848927][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.852432][Inline Method] uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.And.createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.852432][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.852432][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.852432][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.852432][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.852432][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.852432][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.852432][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.854700][Remove Method] 'Any(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.854700][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.854700][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.854700][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.854700][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.854700][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.854700][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.854700][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.854700][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.854700][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.854700][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.854700][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.855731][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunction'
  - [-0.857999][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.857999][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PUBLIC'
  - [-0.857999][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.857999][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.859649][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.859649][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.859649][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.859649][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.859649][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.859649][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.858367][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.857084][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.857084][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.857084][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.857084][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.858734][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.858734][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.858734][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.860016][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.861298][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.861298][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.861298][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.861298][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.861298][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.861298][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.861298][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.861298][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.862329][Remove Method] 'TeeIterator(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.862329][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.862329][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.862329][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.862329][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.861710][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.861710][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.860428][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.860428][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.860428][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.861710][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.861710][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.861710][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.861710][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.863978][Remove Method] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.863978][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.863978][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.863978][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.863978][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.863978][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.863978][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.863978][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.863978][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.863978][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.863978][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.865009][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.866040][Remove Method] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.866040][Decrease Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PUBLIC'
  - [-0.866040][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.865186][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.865186][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.863536][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.863536][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.866423][Remove Method] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.866423][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.868072][Remove Method] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.867431][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.867431][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.868462][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.868462][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.868462][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.868462][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.870730][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.870730][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.870730][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.871761][Inline Method] uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.872616][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.873270][Remove Field] 'seed_' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.873928][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.873928][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.873928][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.872612][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.873928][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.873928][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.873928][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.873928][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.872612][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.871296][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.871296][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.871296][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.872612][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.872612][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.872612][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.873643][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.874959][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.874959][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.875990][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.875990][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.875990][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.877021][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.877021][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.877021][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.877021][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.875705][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.875705][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.877021][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.877021][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.877021][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.876363][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.877021][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.877021][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.877021][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.877021][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.877021][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.877021][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.878052][Remove Method] 'find(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.878052][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.878052][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.878052][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.879083][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.879083][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.879083][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.877767][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.877767][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.877767][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.877767][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.877767][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.879083][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.879083][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.879083][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.879083][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.879083][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.879083][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.880113][Remove Method] 'remove(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.880113][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.880113][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.880113][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.880113][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.880113][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PUBLIC'
  - [-0.880113][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.880113][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.880113][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.880113][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.880113][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.880113][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.880113][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.880113][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.880113][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.880113][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.880113][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.881763][Remove Method] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.881763][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.881763][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.881763][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.881763][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PUBLIC'
  - [-0.881763][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.881763][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.881763][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.880447][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.881763][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.881763][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.884031][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.884031][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.883154][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.883154][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.883154][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.884031][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.884031][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PACKAGE'
  - [-0.884031][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.886299][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.886299][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.886299][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PACKAGE'
  - [-0.888567][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.887909][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.887909][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.887909][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.888567][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.888567][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.887251][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.886633][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.887949][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.887949][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.887949][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PACKAGE'
  - [-0.887949][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.888979][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.890010][Remove Method] 'remove(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.890010][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.890010][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.890010][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.891041][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.891041][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.889392][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.889392][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.890423][Inline Method] uk.co.jezuk.mango.algorithms.SymmetricDifference.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.SymmetricDifference.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.890423][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.890423][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.890423][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.891454][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.891454][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.891454][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.890576][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.890576][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PACKAGE'
  - [-0.892845][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.893722][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.893722][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.893722][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.893722][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.893722][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.895371][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.894494][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.894494][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.894494][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.894494][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.893836][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.894494][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.894494][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.893836][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.894494][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.893617][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.892959][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.892959][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PACKAGE'
  - [-0.892959][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PRIVATE'
  - [-0.891643][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.891643][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.891643][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.891643][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.893911][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.895227][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.896104][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.896104][Decrease Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.896104][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.896104][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.896104][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.897754][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.898412][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.898412][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.898412][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.895525][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate)
  - [-0.894209][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.891578][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.891578][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.890920][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.893551][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.893551][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.895819][Inline Method] uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Not.createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)
  - [-0.897135][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.897793][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.897793][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.897793][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.899442][Remove Method] 'SingletonIterator(java.lang.Object)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.899442][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PACKAGE'
  - [-0.898127][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.897469][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.900355][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.900355][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.901671][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.902702][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.902044][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.901386][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.900509][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.901386][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.902044][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.902702][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.902702][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.903360][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.901710][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.902741][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.902741][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.902741][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.901426][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.901426][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.903075][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.903075][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.904391][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.904391][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.904391][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.904391][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PACKAGE'
  - [-0.904391][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PACKAGE'
  - [-0.904391][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-0.907278][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.905628][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.906659][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.906659][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.907690][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.906374][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.906374][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.907690][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.907690][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.907032][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.906374][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.907032][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.907690][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.907690][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.907690][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.909339][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.909339][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.909339][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.909339][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.909339][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.908681][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.908681][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.909339][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.909339][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.908462][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.908462][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.908462][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.908462][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.910112][Remove Method] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.910112][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.912998][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.914188][Remove Field] 'p_' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.914188][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.914188][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.914188][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.912836][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.912836][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PUBLIC'
  - [-0.912836][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.912836][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.912836][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.912836][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.915104][Remove Method] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.915104][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.913753][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.915104][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.916456][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.916456][Decrease Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PUBLIC'
  - [-0.916456][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.916456][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.916456][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.916456][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.916456][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.916456][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.915104][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.916754][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.918105][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.918105][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.918105][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.918105][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.918105][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.920992][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.922641][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.922641][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.924909][Remove Method] '<init>(uk.co.jezuk.mango.collections.MapFactory$1)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.924909][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.926559][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.926559][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.928208][Remove Method] 'ZipIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.928208][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.928208][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.928208][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PUBLIC'
  - [-0.928208][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.928208][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.928208][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.928208][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.929239][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.928338][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.929239][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.927590][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer)
  - [-0.927590][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.927590][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-0.927590][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.928621][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.928621][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.928621][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.927945][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.927945][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.927945][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.927945][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.927945][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.928621][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.927945][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.928621][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.928621][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.927945][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.926594][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.927945][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.927269][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.927269][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.927945][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.927945][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.927945][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.928621][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.928621][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.928621][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.930270][Remove Method] 'BoundedIterator(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.930270][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.930270][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.930270][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.928919][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.928919][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-0.928243][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.929594][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.929594][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.929594][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.931244][Remove Method] 'BoundedIterator(java.util.Iterator,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.931244][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.931244][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.932893][Remove Method] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.932893][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.933924][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.932573][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.932573][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.932573][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PUBLIC'
  - [-0.932573][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.932573][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PUBLIC'
  - [-0.932573][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.933924][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.933924][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.933924][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.934600][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.935111][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.935111][Decrease Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PUBLIC'
  - [-0.935111][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.935111][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.934416][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.935447][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.936142][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.934753][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.936142][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.936142][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.936142][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.933364][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.933364][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.933364][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.936142][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.935447][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.935447][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.937097][Remove Method] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.937791][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.937791][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.937097][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.937791][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.937791][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.937791][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.937791][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.937791][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.937791][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.936402][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.936402][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.936402][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.937791][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.937791][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.937791][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.937791][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.937791][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.937791][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.939441][Remove Method] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.939441][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.939441][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.939441][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.939441][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.938746][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.939441][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.939441][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.939441][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.937791][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.937791][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.937791][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.936402][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.937791][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.938822][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.937896][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.938822][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.938822][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.938822][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.938822][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.938822][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-0.938822][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.938822][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.938822][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.938822][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.941709][Remove Method] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.941709][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.941709][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.941709][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.941709][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.941709][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.941709][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.941709][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.943358][Remove Method] 'createuk.co.jezuk.mango.Generators()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.943358][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.943358][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.942432][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.943358][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.943358][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.943358][Decrease Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.943358][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.943358][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.945008][Remove Method] 'ArrayIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.945008][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-0.945008][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PACKAGE'
  - [-0.947894][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.946505][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.947894][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.947276][Freeze Method] Convert 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.947276][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.947276][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.946581][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.949468][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.948773][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.948773][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.949804][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.950499][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.950499][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.951193][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.949544][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object)
  - [-0.948155][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.949544][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.950575][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()
  - [-0.950575][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.949880][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.950575][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.949186][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.949186][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.950575][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.950575][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.950575][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PUBLIC'
  - [-0.950575][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.950575][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.950575][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.950575][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.950575][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.953461][Remove Method] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.953461][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.953461][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-0.953461][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.953461][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.953461][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.953461][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.953461][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.953461][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.953461][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.953461][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.953461][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.953461][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.953461][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.953461][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.953461][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.955111][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Any()' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.955111][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.955557][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.955557][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.955557][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.955557][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.955557][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.955557][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.955557][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.957206][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.957206][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.957206][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.957206][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PACKAGE'
  - [-0.958237][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryPredicate'
  - [-0.958612][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.958612][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.958612][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PACKAGE'
  - [-0.959643][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Function'
  - [-0.959643][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.959643][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.959643][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.959643][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.959643][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.958172][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.959643][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.959643][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.961292][Remove Method] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.961590][Remove Field] 'zip_' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.960833][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.961590][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.961590][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.961590][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.963858][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.963858][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.964071][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.964071][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.964071][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.964071][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.964071][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.959948][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.959948][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.959948][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.959948][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.963453][Inline Method] uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xnor.createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.963453][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.963453][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.963453][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.963453][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.963453][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.961890][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.961890][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.961890][Decrease Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.961890][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.963453][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.963453][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.962411][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.963453][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.962411][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.963453][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.963453][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.965102][Remove Method] 'ChainIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.965102][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.964321][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.965102][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.965102][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.965102][Decrease Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PUBLIC'
  - [-0.963540][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.963540][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.965102][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.965102][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.963540][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.965102][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.965102][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.963540][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.963540][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.965102][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.965102][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.966752][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.966752][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.965189][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.966752][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.966752][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.966872][Remove Field] 'pos_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.966872][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.965797][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.966872][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.966872][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.966872][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.967903][Inline Method] uk.co.jezuk.mango.Collections.list(java.util.Iterator) into uk.co.jezuk.mango.Collections.list(java.util.Collection)
  - [-0.966828][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.967903][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.966290][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.966290][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.966290][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.966290][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.966290][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.967903][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.967903][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.967903][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.967903][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PACKAGE'
  - [-0.968934][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.967285][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.968316][Inline Method] uk.co.jezuk.mango.binarypredicates.EqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.EqualTo.createuk.co.jezuk.mango.binarypredicates.EqualTo()
  - [-0.967509][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.968316][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.964192][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.967697][Inline Method] uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nand.createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.964471][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.964471][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.967697][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.967697][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.969347][Remove Method] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.969347][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.969347][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PACKAGE'
  - [-0.970378][Remove Method] 'execute(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.969302][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.969302][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.969302][Decrease Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.969302][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.970378][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.972027][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.973677][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.973677][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.975326][Remove Field] 'end_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.975326][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.975326][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.975326][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.975345][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.975345][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.975345][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.979468][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.981736][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.984004][Remove Method] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.984004][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.984529][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.984529][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.983667][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.984529][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.984529][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.988653][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.990921][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.990921][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.991321][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.991321][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.991321][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.991321][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.991321][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.989535][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.991321][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.991321][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.991321][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.991321][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.989535][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.991321][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.990428][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.990428][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.991321][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.991321][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.991321][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.991321][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.991321][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.992971][Remove Method] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.992078][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.992971][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.992971][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.992971][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.992971][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.992971][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.994620][Remove Method] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.994620][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PACKAGE'
  - [-0.994620][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.996888][Remove Method] 'wrap(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.997919][Remove Method] 'list(java.util.Collection)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.997919][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.997919][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.997919][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.997919][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.997919][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.997919][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.997919][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.997919][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.997919][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.997919][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.997919][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.997919][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.997919][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.996133][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.997919][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.997026][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.995241][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.997026][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.997919][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.997919][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PACKAGE'
  - [-1.000806][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-1.000806][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.000806][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-1.002455][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-1.002455][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.002455][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-1.002455][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-1.002455][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-1.004105][Remove Method] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-1.005136][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-1.005136][Increase Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.005136][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-1.005136][Decrease Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-1.005136][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.004243][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-1.004243][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.004243][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-1.005136][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-1.005136][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-1.004243][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-1.002457][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-1.004243][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-1.004243][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-1.004243][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.005136][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-1.005136][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-1.006785][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-1.008435][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-1.010084][Remove Field] 'valid_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-1.010084][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-1.012352][Remove Method] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.013543][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-1.014733][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-1.015924][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-1.017114][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-1.018304][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-1.018304][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.019954][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.021603][Remove Field] 'end_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.023253][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.021467][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-1.021467][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.023253][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-1.023253][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-1.024902][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.026552][Remove Field] 'buffer_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.026552][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-1.028201][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.027011][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-1.027011][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.028660][Remove Field] 'iterator_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.026875][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-1.028660][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-1.028660][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.028660][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.029851][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-1.029851][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.029851][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.029851][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.029851][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.029851][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.029851][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-1.031500][Remove Method] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-1.031500][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-1.032531][Remove Method] 'list(java.util.Iterator)' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-1.032531][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.032531][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.030882][Introduce Factory] for uk.co.jezuk.mango.Functions.<init>()
  - [-1.031913][Inline Method] uk.co.jezuk.mango.Functions.<init>() into uk.co.jezuk.mango.Functions.createuk.co.jezuk.mango.Functions()
  - [-1.031913][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.031913][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.031913][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.031913][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-1.031913][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-1.031913][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-1.030127][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-1.031913][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-1.031913][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.031913][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.031913][Increase Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.031913][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-1.031913][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-1.031913][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-1.033562][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-1.033426][Remove Field] 'list_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.033426][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-1.033426][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.033426][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-1.033426][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.033426][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.033426][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-1.035075][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-1.036725][Remove Field] 'index' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-1.036725][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.038374][Remove Field] 'useCount' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-1.038374][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.038374][Remove Class] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.036523][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-1.038374][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-1.038374][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-1.038374][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.038374][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.038374][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-1.040642][Remove Method] 'toIterators(java.lang.Object[])' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-1.040642][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.040642][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.040642][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.040642][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.040642][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.040642][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.040642][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.040642][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.040642][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.040642][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-1.039408][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-1.039408][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.043532][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-1.045800][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-1.047034][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-1.047379][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-1.047379][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-1.047379][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.047379][Decrease Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-1.045730][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-1.046761][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-1.046761][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.045111][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-1.046142][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-1.046142][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.046142][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.046142][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.046142][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.046142][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-1.044219][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.044219][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.046142][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.047792][Remove Method] 'createuk.co.jezuk.mango.Functions()' of type 'uk.co.jezuk.mango.Functions'
  - [-1.047792][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.047792][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.047792][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.047792][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.047792][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.047792][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.047792][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.047792][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-1.049441][Remove Method] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.049441][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.051091][Remove Field] 'array_' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.051091][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.051091][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.049808][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-1.051091][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-1.051091][Remove Class] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.051091][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.051091][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.051091][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.051091][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.051091][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.049167][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-1.049167][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.051091][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-1.051091][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.051091][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.051091][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.051091][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.051091][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.051091][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.051091][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.051091][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-1.051091][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-1.051091][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.051091][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.051091][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.049167][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.049167][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.051091][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.051091][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.051091][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.051091][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.051091][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.050663][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.050663][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.050663][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.050663][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.050663][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.050663][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.050663][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.050663][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.050663][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.050663][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.050663][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.050663][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.050663][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.050663][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.050663][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.050663][Increase Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.050663][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.050663][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.050663][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.050663][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.050663][Increase Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-1.052313][Remove Method] 'createuk.co.jezuk.mango.collections.ListFactory()' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-1.052313][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.052313][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.052313][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.052313][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.052313][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-1.050313][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-1.052313][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-1.052313][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-1.053962][Remove Method] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.055612][Remove Field] 'spent_' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.055612][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.055612][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.055612][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.055612][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.055612][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.055612][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.055612][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.055612][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.055612][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.055612][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.055612][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.055612][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-1.055612][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.055612][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.055612][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.055612][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.055612][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.055612][Remove Class] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.055612][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.055612][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.055612][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.055612][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.055612][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.055612][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-1.055612][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.055612][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.055612][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.055612][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.055612][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.055612][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.055612][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.055612][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.055612][Remove Class] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.055612][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.055612][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.055612][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.055612][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.055612][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.055612][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.055011][Remove Field] 'item' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-1.055011][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.055011][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.055011][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.055011][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.055011][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.055011][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-1.055011][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-1.055011][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.055011][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.055011][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.055011][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.055011][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-1.055011][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.055011][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.055011][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.055011][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.055011][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.055011][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.055011][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-1.055011][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.056661][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-1.056661][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed

====== Run Result ======

* Name: Mango|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 94.47 seconds
  * Quality Gain: 0.656135
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.379076
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 2.2784
    * numOps: 4.3402
    * iFImpl: 0.4433
    * Dep_In: 2.4227
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 1.1649
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.4043
    * NumDesc: 0.0000

* Final Design:
  * Score: -1.035212
  * Possible Actions: 112
  * Applied Actions: 2790
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 0.6186
    * numOps: 0.4433
    * iFImpl: 0.4433
    * Dep_In: 0.5773
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 0.5258
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.4821
    * NumDesc: 0.0000

* Applied Actions:
  - [-0.380107][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.381138][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.381138][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.381138][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.382169][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.382169][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.382169][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.383200][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.384231][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.385262][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.386293][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.386293][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.387324][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.387324][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.387324][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.387324][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.388355][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.388355][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.389281][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.388662][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.387736][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.387736][Increase Method Security] 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.387736][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.388767][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.389798][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.389179][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.390210][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.390210][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.390210][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.390210][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.391241][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.392272][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.393303][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.393303][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.393303][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.393303][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.393303][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.394334][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.395365][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.396396][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.397427][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.396501][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.396964][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.396964][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.396964][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.396964][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.396038][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.396038][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.396038][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.396038][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.397069][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.397069][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.397069][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.398100][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.398100][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.399131][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.398513][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.398513][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.398513][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.399544][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400575][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.400575][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400575][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.399649][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.400680][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.400680][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.400680][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400217][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400217][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.399599][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to static 
  - [-0.400630][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.400630][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.400630][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.401661][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.402692][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.402692][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403723][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.404753][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.404753][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404753][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.405679][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.405679][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.405679][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.405679][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to static 
  - [-0.406710][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.407741][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.408772][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.408772][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.408772][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.409803][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.410834][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.411865][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)
  - [-0.411865][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.411865][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.412896][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.413927][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.413927][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.413001][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.413001][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.414032][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.414649][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.414649][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.415680][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.415680][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.416711][Remove Method] 'findPosition(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.416248][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.416248][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.416248][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.416248][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.416248][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.416248][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.416248][Decrease Method Security] 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.416248][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.415785][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.415785][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.416816][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.417742][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.418668][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.419594][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.418975][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to static 
  - [-0.418975][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.418512][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.418512][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.419438][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.419438][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to static 
  - [-0.420364][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.420364][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.420364][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.420364][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.420364][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.420364][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.420364][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.419438][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.420055][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.420981][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.420981][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.420981][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.420981][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.420981][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.420981][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.423249][Remove Method] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.423249][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.424175][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.424175][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.424175][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.424175][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.424175][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.424175][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.424175][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.424175][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.424175][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.424175][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.424793][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.425410][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.425410][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.426027][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.426644][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.427262][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.427725][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.427725][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.427725][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.427725][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.427725][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.427725][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.427725][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.427725][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.428756][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.Object)
  - [-0.428756][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.428756][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.428756][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.429787][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.430404][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.430404][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.431021][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.431484][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.431947][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.431947][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.431947][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.434215][Remove Method] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.434215][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.434215][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.434215][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.434215][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.434678][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.435141][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.435604][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.435604][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.436067][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.436067][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.436530][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.436530][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.436530][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.436530][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.436067][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.436530][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.436993][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.437456][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.436837][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to static 
  - [-0.437300][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.437300][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.436837][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.436837][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.436837][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.436219][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.436219][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.436219][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.435600][Freeze Method] Convert 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.435600][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.435600][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.435600][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.436063][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.436063][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.436063][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.436063][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.436063][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.436063][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.436063][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.436063][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.436063][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.436063][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.436063][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.438950][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.438950][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.438950][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.438950][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.441218][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.441218][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.441218][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.441218][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.441218][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.441218][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.443486][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.443486][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.443486][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.443486][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.445135][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.445135][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.446166][Remove Method] 'containsValue(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.446166][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.446166][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.446166][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.446166][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.446166][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.446166][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.447197][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.test(java.lang.Object)
  - [-0.447197][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.447197][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.447197][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.447197][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.449465][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.449465][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.449465][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to static 
  - [-0.448848][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.448848][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.448848][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.447922][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.447922][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.447922][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.448953][Remove Method] 'findPosition(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.448953][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.448953][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.448953][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.449984][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.451015][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.451015][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.451015][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.451015][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.451015][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.451015][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.453283][Remove Method] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.453283][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.453283][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.453283][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.453283][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.453283][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.453283][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.454932][Remove Method] 'LessThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.454932][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.454932][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.454932][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.455963][Remove Method] 'isEmpty()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.455963][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.456994][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.456994][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.458025][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.458025][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.458025][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.460293][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.460293][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.460293][Decrease Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.460293][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.460293][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.460293][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.460293][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.462561][Remove Method] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.462561][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.463592][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.463592][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.463592][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.464623][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.464623][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.464623][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.464623][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.464623][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.464623][Decrease Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.464623][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.464623][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.464623][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.465654][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.467303][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.467303][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.467303][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.467303][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.467303][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.467303][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.467303][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.468334][Remove Method] 'clear()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.468334][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.469365][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.470291][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.470291][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.470291][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.470908][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.470908][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.471371][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.471371][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.471371][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.471371][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.471834][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.471834][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to static 
  - [-0.471834][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.471834][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.471834][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.471834][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.471834][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.471834][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.471834][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.471216][Freeze Method] Convert 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.472247][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.472247][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.472247][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.472247][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.472247][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.472247][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.471628][Freeze Method] Convert 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.472659][Remove Method] 'entrySet()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.472659][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.472659][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.472659][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.472659][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.472041][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to static 
  - [-0.472041][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.472041][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.471422][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.471422][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.471422][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.471422][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PRIVATE'
  - [-0.474309][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.474309][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.474309][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.474309][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.474309][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.474309][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.476577][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.476577][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.478845][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.478845][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.478845][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.478845][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.478845][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.478845][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.478382][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.478382][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.478382][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.482505][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.484774][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.484774][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.484774][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.485236][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.485236][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.485236][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.485236][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.486886][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.487917][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.487917][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to static 
  - [-0.487917][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.488948][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.488948][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.488329][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to static 
  - [-0.489360][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.489360][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.489360][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.489360][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.491628][Remove Method] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.491628][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.491628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.491628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.491628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.491628][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.491628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.492659][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.492041][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.492041][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.492041][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.493072][Remove Method] 'OneOf(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.493072][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.493072][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.493072][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.493072][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.492146][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.492146][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.492146][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.493795][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.493795][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.493795][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.494721][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.494721][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.494104][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.494721][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.494721][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.494721][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.494721][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.494721][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.494721][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.494721][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.494721][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.494721][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.494721][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.494721][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.495752][Remove Method] 'find(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.495752][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.495752][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.495752][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.495135][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.494672][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.495289][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.494363][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.494363][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.492511][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.494363][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.494363][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.494363][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.494363][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.494363][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.498487][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.498487][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.498487][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.498487][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.498487][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.499518][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.500444][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.500907][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.500907][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.500907][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.503175][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.503175][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.503175][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.504206][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.504206][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.504206][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.504206][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.504206][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.504206][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.504206][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.504206][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.504206][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.504206][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.504206][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.504206][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.504206][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.503280][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.503280][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.504311][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.503848][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.504774][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.505236][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.505236][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.505236][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.505236][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.505236][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.505236][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.506886][Remove Method] 'IntegerSequence(java.lang.Integer)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.506886][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.506267][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.506267][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.506267][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.506267][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.506267][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.508535][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.508535][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.508535][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.508535][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.510803][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.510803][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.510803][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.510803][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.510185][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.512453][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.512453][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.511836][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.511217][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.512248][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.511785][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.511785][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.512816][Remove Method] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.512816][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.512816][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.512816][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.512816][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.513433][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.513896][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.513896][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.513896][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.513433][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.512815][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.512815][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.515083][Remove Method] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.515083][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.515083][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.515083][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.515083][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.515083][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.515083][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.515546][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.514927][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.514927][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.514927][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.516577][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.fn(uk.co.jezuk.mango.generators.IntegerSequence) into uk.co.jezuk.mango.generators.IntegerSequence.fn()
  - [-0.516577][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.516577][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.516577][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.516577][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.516577][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.516577][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.517608][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.517608][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.517608][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.517608][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.518639][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.518020][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.518020][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.516371][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.516371][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.518020][Remove Method] 'GreaterThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.519051][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.519051][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.518432][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.518432][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.518432][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.518432][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.518432][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.518432][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.518432][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.518432][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.518432][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.518432][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.517815][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.517815][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.517815][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.517815][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.520083][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.521114][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.521731][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.521731][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.521731][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.521731][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.521731][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.521731][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.521731][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.521731][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.521731][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.521731][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.521731][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.520805][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.520805][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.520805][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.520805][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.520805][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.521836][Remove Method] 'findPosition(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.522762][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.522762][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.522762][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.522762][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.522762][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.522762][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.522762][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.524412][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.524412][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.524412][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.524412][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.524412][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.524412][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.525443][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.525443][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.525443][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.527092][Remove Method] 'Any(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.527092][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.527092][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.527092][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.527092][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.527092][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.526474][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.526474][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.526474][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.526474][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.526474][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.528123][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.528123][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.528123][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.528123][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.528123][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.528123][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.528123][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.528123][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.529154][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.529154][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.529154][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.529154][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.531422][Remove Method] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.531422][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.536783][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.536783][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.541525][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.543175][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.542556][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to static 
  - [-0.541938][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.541938][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.541938][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.541938][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.541938][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.546061][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.547711][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.548742][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.549773][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.549773][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.549773][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.549773][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.549773][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.549773][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.549773][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.549773][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.549773][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.550803][Inline Method] uk.co.jezuk.mango.Predicates.All(java.util.Iterator) into uk.co.jezuk.mango.Predicates.All(java.util.Collection)
  - [-0.550803][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.550803][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.551834][Remove Method] 'True()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.551834][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.551834][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.551834][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.551834][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.551834][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.551834][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.551834][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.551834][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.551834][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.551834][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.551834][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.551834][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.552865][Remove Method] 'find(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.552248][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.552865][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.552865][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.552865][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.552865][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.552865][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.552865][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.555752][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.555289][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.555752][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.553900][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.553900][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.553900][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.553900][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.553900][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.552974][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.554826][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.555752][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.555752][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.555752][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.555752][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.554826][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.557713][Remove Method] 'Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.557713][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.557713][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.558639][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.558639][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.558639][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.559669][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.559207][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.559207][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.559207][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.559207][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.559207][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.558589][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.559207][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.559207][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.559669][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.559669][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.559051][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to static 
  - [-0.559051][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.559051][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.559051][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.559051][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.559051][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.559051][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.559051][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.559051][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.559051][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.559051][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.559051][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.559051][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.559051][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.559051][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.560082][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.560082][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.560082][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.560082][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.562350][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.562350][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.563469][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.563469][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.563469][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.565737][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.565737][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.566768][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections$MapBuilder'
  - [-0.566768][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.566768][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.565825][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.565825][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.565825][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.567474][Remove Method] 'Constant(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.568505][Remove Method] 'size()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.569449][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.569449][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.569449][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.571717][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.573366][Remove Field] 'lastClass_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.575016][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.575016][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.575016][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.574072][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.574072][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.574072][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.573601][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.573601][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.573601][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.574632][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.574632][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.575663][Remove Method] 'values()' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.575663][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.575663][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.575663][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.575663][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.576694][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.576694][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.577637][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.577637][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.578109][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.578109][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.577480][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.576536][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.576065][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.576065][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.576065][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.576065][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.575446][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.577096][Remove Method] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.577096][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.577096][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.578126][Remove Method] 'unique(java.util.Collection,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.578126][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.579157][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.579157][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.579157][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.580807][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.580807][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.581838][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.582869][Remove Method] 'unique(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.581925][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.581296][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.581296][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.580678][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.580678][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.580678][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.580678][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.579734][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.579734][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.580765][Remove Method] 'remove(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.581709][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.581709][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.581709][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.581709][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.583977][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.583977][Decrease Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.583977][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.585626][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.585626][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.585626][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.585626][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.585626][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.585626][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.585626][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.585626][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.587894][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.588925][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.588925][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.589956][Inline Method] uk.co.jezuk.mango.Adapt.wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.ArgumentMethod(java.lang.String,java.lang.Class)
  - [-0.589956][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.589956][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.589956][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.589956][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.589956][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.589338][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.590369][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.590369][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.590369][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.591399][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.592343][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.592343][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.592343][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.592343][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.592343][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.593286][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.593286][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.593915][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.594544][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.594544][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.594544][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.594544][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.595016][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.595016][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.595016][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.595016][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.595016][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.596047][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.596047][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.596047][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.596047][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.596047][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.595575][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.596606][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.596606][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.596606][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.596606][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.598255][Remove Method] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.598255][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.599286][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.599286][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.599286][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.599286][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.599286][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.599758][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.599758][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.599758][Decrease Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.599758][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.600789][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.600789][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.600789][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.599140][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.599140][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.599140][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.599140][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.599140][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.599140][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.599140][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.601408][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.601408][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.601408][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.601408][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.601408][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.603057][Remove Method] 'EqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.604088][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.604088][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.604088][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.605119][Remove Method] 'True()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.605119][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.605119][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.605119][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.603232][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.603232][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.603232][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.603232][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.602614][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.604882][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.604882][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.604882][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.604882][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.604882][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to static 
  - [-0.604882][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.604882][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.606768][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.606768][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.606768][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.607799][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.607799][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.607799][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.607799][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.607328][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.607328][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.607328][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.609596][Remove Method] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.610627][Inline Method] uk.co.jezuk.mango.Predicates.OneOf(java.util.Iterator) into uk.co.jezuk.mango.Predicates.OneOf(java.lang.Object[])
  - [-0.610627][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.611098][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.611098][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.611098][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.611098][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.611098][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.615222][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.615222][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.615222][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.615222][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.615222][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.615222][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.615222][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.615222][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.615222][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.615222][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.616253][Remove Method] 'values()' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.616253][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.616253][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.616253][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.616253][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.616253][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.617284][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.618315][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.618315][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.618315][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.618315][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.618315][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.618315][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.618315][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.619346][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.619346][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.618874][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.618874][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.618245][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.618245][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.618874][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.618874][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.619346][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.619346][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.618717][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.619346][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.619346][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.618874][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.616987][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.618874][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.618874][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.618874][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.618874][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.619346][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.619346][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.618402][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.617784][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.617784][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.617784][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.617784][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.617784][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.617784][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.620670][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.620670][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.620670][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.620670][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.620670][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.620670][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.622938][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.625206][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.625206][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.625206][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.625206][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.625206][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.625206][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.626237][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.627887][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.628830][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.628830][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.628830][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.628830][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.628830][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.628830][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.628830][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.628212][Freeze Method] Convert 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.628212][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.628212][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.628212][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.628212][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.628212][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.628212][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.628212][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.628212][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.628212][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.628212][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.628212][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.628212][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.628212][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.629861][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.629861][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.629861][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.629861][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.629861][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.629861][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.629861][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.629861][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.629861][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.630892][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.630892][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.630892][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.630892][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.630892][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.630274][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.630274][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.630274][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.630274][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.630274][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.630274][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.634397][Remove Method] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.634397][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.634397][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.634397][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.634397][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.634397][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.634397][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.634397][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.634397][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.634397][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.634397][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.633926][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.633926][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.633926][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.633926][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.633926][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.634957][Remove Method] 'values()' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.634957][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.634957][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.635987][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.637018][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.637490][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.637490][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.637490][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.637490][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.637490][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.637490][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.636871][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to static 
  - [-0.636871][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.636871][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.636871][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.636871][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.636871][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.636871][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.637902][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.637902][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.637902][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.637902][Increase Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.637902][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.637902][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.637902][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.638933][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.638933][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.638933][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.637990][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.637990][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.637990][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.639639][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.641289][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.get(int)
  - [-0.642320][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.642320][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.642320][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.644588][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.645531][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.644913][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.644913][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.644913][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.644913][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.644913][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.644913][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.644913][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.645944][Remove Method] 'count(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.646975][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.646975][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.646975][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.646975][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.646975][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.646975][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.646975][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.646975][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.648006][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.647062][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.647062][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.648006][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.648006][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.648006][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.648006][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.648006][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.648006][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.648006][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.648006][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.648006][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.648006][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.648006][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.648006][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.648006][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.648006][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.648006][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.648006][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.647387][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.647387][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.647387][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.647387][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.648418][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.648418][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.650686][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.650686][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.650686][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.650686][Increase Method Security] 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.651785][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.651304][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.652335][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.652335][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.652816][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.652816][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.652816][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.652816][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.652816][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.652816][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.652816][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.652816][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.655084][Remove Method] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.656115][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.657146][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.657146][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.657146][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.658795][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.658795][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.658795][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.658795][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.658315][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.658315][Increase Method Security] 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.658315][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.658315][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.658315][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.662438][Remove Method] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.662438][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.662438][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.662438][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.662438][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.662438][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.663469][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.663469][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.665737][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.665737][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.666768][Remove Method] 'putAll(java.util.Map)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.666768][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.667799][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.668280][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.668280][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.668280][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.668280][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.668280][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.668280][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.667318][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.668280][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.668280][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.668280][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.667639][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.667639][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.667639][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.668280][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.668280][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.668280][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.668280][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.668280][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.668280][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.667799][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.667799][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.668280][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.668280][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.668280][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.667639][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.667639][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.669288][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.670319][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.671384][Remove Field] 'val$methodName' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.670894][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.668933][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.668933][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.668933][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.670894][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.670894][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.670894][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.673162][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.673162][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.673816][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.673816][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.676084][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.676574][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.676574][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.675920][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.675920][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.675920][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.676574][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.676574][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.676574][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.676574][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.675594][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.675594][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.675594][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.675594][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.675594][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.676574][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.676574][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.676574][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.676574][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.676574][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.676574][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.676574][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.676574][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.678842][Remove Method] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.678842][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.678842][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.680492][Remove Method] 'Any(java.util.Iterator)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.680492][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.681522][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.681522][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.681522][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.681522][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.680904][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.679924][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.679924][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.679924][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.681573][Remove Method] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.681573][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.683841][Remove Method] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.683841][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.684821][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.684821][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.684821][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.683172][Introduce Factory] for uk.co.jezuk.mango.Functions.<init>()
  - [-0.683172][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.683172][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.683172][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.683172][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.684203][Inline Method] uk.co.jezuk.mango.Functions.<init>() into uk.co.jezuk.mango.Functions.createuk.co.jezuk.mango.Functions()
  - [-0.684203][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.684203][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.684203][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.684203][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.684203][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.684203][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.684203][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.684203][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.684203][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.683584][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.683584][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.683584][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.683584][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.685852][Remove Method] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.685852][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.685199][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.686230][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.686230][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.686883][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.686883][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.686883][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.686883][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.686883][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.686883][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.686883][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.686883][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.686883][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.687914][Remove Method] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.687914][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.687914][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.688945][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.688945][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.688945][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.688945][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.688945][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.688945][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.688945][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.688945][Increase Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.688945][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.689976][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.689976][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.689976][Decrease Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.689976][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.689976][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.689976][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.689976][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.689976][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.689976][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.691007][Remove Method] 'remove(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.691007][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.691007][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.691007][Increase Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.691007][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.691007][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.691007][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.691007][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.691007][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.691007][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.691007][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.691007][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.692038][Remove Method] 'count(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.692038][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.692038][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.693069][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.693069][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.694100][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.findNext() into uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.694100][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.692450][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.693481][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.692863][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.692863][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.692863][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.692863][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.692863][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.693894][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.696162][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.696162][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.698430][Remove Field] 'val$g1' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.698430][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.698430][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.698430][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.700103][Remove Field] 'val$g2' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.700103][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.700103][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.700103][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.699436][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.700103][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.700103][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.700103][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.699436][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.699436][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.699436][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.699436][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.699436][Decrease Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.699436][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.699436][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.700103][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.700103][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.700103][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.700103][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.701134][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.702165][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.702165][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.702165][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.702165][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.702165][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.702165][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.702165][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.702165][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.702165][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.702165][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.702165][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.704433][Remove Method] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.705464][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.705464][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.705464][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.705464][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.705464][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.705464][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.705464][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.705464][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.705464][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.705464][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.705464][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.705464][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.705464][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.705464][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.706495][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.706495][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.706495][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.706495][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.706495][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.706495][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.706495][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.706495][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.706495][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.706495][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.706495][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.706495][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.706495][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.706495][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.707526][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.Generator'
  - [-0.707526][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.707526][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.707526][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.708557][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.708557][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.710206][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.710206][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.710206][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.711856][Remove Field] 'valid_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.712886][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.712886][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.712886][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.715155][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.714655][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.714655][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.714655][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.715155][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.715155][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.715155][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.714155][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.714155][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.714155][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.715155][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.715155][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.716804][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.716804][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.716804][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-0.716804][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.716804][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.716804][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.716804][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.716804][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.719072][Remove Method] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.719072][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.719072][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.719072][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.719072][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.719072][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.719072][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.720103][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.720103][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.720103][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.720103][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.719603][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.719603][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.719603][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.720103][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.719484][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to static 
  - [-0.719484][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.719484][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.721752][Remove Method] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.721752][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.722783][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.722783][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.722783][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.722165][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to static 
  - [-0.722165][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.722165][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.722165][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.722165][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.722165][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.722165][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.722165][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.722165][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.722165][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.722165][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.722165][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.722165][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.723814][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.723814][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.723814][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.723814][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.723148][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.723148][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.723148][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.722148][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.722148][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.722148][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.723797][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.724797][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.725464][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.725464][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.725464][Decrease Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.725464][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.725464][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.725464][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.725464][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.725464][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.724797][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.725828][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.725828][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.726495][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.725995][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.725995][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.724995][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.724995][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.724995][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.724995][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.726026][Remove Method] 'unique(java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.727026][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.726359][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.727026][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.727526][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.727526][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.727526][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.729794][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.729794][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.731443][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.731443][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.731443][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.731443][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.731443][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.733093][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.733093][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.733093][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.733093][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.733093][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.733093][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.733093][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.733093][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.734124][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.733457][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.733457][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.734124][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.734124][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.734124][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.734124][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.735773][Remove Method] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.735773][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.735773][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.735773][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.737423][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.next(uk.co.jezuk.mango.iterators.StringIterator) into uk.co.jezuk.mango.iterators.StringIterator.next()
  - [-0.737423][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.737423][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.737423][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.737423][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.738453][Remove Method] 'Method(java.lang.Class,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.739484][Inline Method] uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.Method(java.lang.Object,java.lang.String)
  - [-0.739484][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.739484][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.739484][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.739484][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.739484][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.739484][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.739484][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.739484][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.740515][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.740515][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.740515][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.742165][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.742165][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.742165][Decrease Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.742165][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.742165][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.742165][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.743814][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.743814][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.742814][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.745082][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.746113][Remove Method] 'unique(java.util.Collection,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.746113][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.746113][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.747123][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.747123][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.748144][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.748144][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.748144][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.749793][Remove Method] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.749793][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.749793][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.748144][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>()
  - [-0.749175][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThan.createuk.co.jezuk.mango.binarypredicates.GreaterThan()
  - [-0.749175][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.749175][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.749175][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.749175][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.750824][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.750824][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.750824][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.750824][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.750824][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.750824][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.750824][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.750824][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.750824][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.750824][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.750824][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.750824][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.750824][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.750824][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.750206][Freeze Method] Convert 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.750206][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.750206][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.750206][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.750206][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.750206][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.750206][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.750206][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PACKAGE'
  - [-0.753092][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.753092][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.753092][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.752582][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.754850][Remove Method] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.754850][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.755881][Remove Method] 'remove(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.754861][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.755881][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.755881][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.755881][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.755881][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.755881][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.755881][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.756912][Remove Method] 'intersection(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.757422][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.757422][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.757422][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.759072][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.759072][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.760102][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunction'
  - [-0.761133][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.761133][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.761133][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.761133][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.763401][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.763401][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.763401][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.766288][Remove Method] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.765778][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.765778][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.765778][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.765778][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.768046][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.770314][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.770824][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.770824][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.770824][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.770824][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.770824][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.772474][Remove Method] 'ArrayIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.773505][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.772824][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.772824][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.772824][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.772314][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.772314][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.772314][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.772314][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.772824][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.772314][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.772314][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.773345][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.773855][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.773855][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.773855][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.773855][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.773855][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.773175][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.773855][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.773855][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.773855][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.773855][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.773855][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.774886][Inline Method] uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.774886][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.774886][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.774886][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.774886][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.774886][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.774886][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.774886][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.774886][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.774376][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.774376][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.774376][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.774886][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.774886][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.777154][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.777154][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.777154][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.777154][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.778185][Remove Method] '<init>(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.779835][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.778814][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.778196][Freeze Method] Convert 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.778196][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.779227][Inline Method] uk.co.jezuk.mango.Adapt.verifyReturnType(java.lang.reflect.Method,java.lang.Class) into uk.co.jezuk.mango.Adapt.Method(java.lang.Object,java.lang.String)
  - [-0.779227][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.779227][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.780257][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.780257][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.780257][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.781278][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.781278][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.782268][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.781748][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.781748][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.781748][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.781748][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.783397][Remove Method] 'ChainIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.783918][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.783918][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.783918][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.783918][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.783918][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.783918][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.783918][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.783918][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.783918][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.784949][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.784949][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.784949][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.784949][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.784949][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.784949][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.784428][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.784949][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.784949][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.786598][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.786598][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.785904][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.788172][Remove Method] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.788866][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.788866][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.790516][Remove Method] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.791210][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.791210][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.792241][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.792241][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.792241][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.792241][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.795128][Remove Method] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.795822][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.795822][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.795822][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.796517][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.796517][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.796517][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.797211][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.797906][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.798600][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.794476][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.794476][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.793782][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.792740][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.792740][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.792740][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.791091][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.791091][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.794596][Inline Method] uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.And.createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.794596][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.794596][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.796245][Remove Method] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.796245][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.796245][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.797287][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.797287][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.797287][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.797287][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.798936][Remove Method] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.799967][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.799967][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.800662][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.800662][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.800662][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.800662][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.800662][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.800662][Decrease Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.799012][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.800043][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.800043][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.800043][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.800043][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.800043][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.800043][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.800043][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.800043][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.800043][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.797960][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.800043][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.800043][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.800043][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.800043][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.800043][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.801074][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.801074][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.801074][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.801074][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.801074][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.801074][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.803961][Remove Method] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.803961][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.803961][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.803961][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.803961][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.803961][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.803961][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.802311][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.803342][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.803342][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.802301][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.803342][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.803342][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.802648][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.802648][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.803342][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.803342][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.803342][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.803342][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.803342][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.803342][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.804992][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.804992][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.804992][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.804992][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.804992][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.804992][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.804992][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.804992][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.804471][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.804471][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PUBLIC'
  - [-0.804992][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.804992][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.804992][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.804992][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.804992][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.807878][Remove Method] 'Method(java.lang.Object,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.808909][Remove Method] '<init>(java.lang.Object,java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.811177][Remove Method] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.811177][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.812827][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.814476][Remove Field] 'val$obj' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.816126][Remove Field] 'obj_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.817177][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.817177][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.818208][Remove Method] '<init>(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.818208][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PACKAGE'
  - [-0.818208][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.819239][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.819239][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.820270][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryPredicate'
  - [-0.820270][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.820270][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.820270][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.820270][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.824393][Remove Method] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.827898][Remove Method] '<init>(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.830167][Remove Field] 'val$g' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.831810][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.831810][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.832841][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.833838][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.833838][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.833838][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.836106][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.836106][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.836106][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.836106][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.836106][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.837756][Remove Method] 'SingletonIterator(java.lang.Object)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.837756][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.839405][Remove Method] 'StringIterator(java.lang.String)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.839405][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.840436][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.840436][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.840436][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.840436][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PACKAGE'
  - [-0.840436][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.844560][Remove Method] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.846828][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.842704][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.842704][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.842704][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.846209][Inline Method] uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xor.createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.846209][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.846209][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PACKAGE'
  - [-0.848478][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.847366][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.847366][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.848478][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.848478][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.849508][Remove Method] 'TeeIterator(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.849508][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.849508][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.848953][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.849508][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.849508][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.851777][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.851777][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.851777][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.851777][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.851777][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.851777][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.853426][Remove Method] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.853426][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.854457][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.854457][Decrease Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PUBLIC'
  - [-0.854457][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.854457][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.854457][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PUBLIC'
  - [-0.854457][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.854457][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.852807][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-0.852807][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.851696][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.850956][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.850956][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.852067][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.852067][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.852807][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.852807][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.852807][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.852807][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.852807][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.852807][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.852807][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.852067][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.854335][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.854335][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.855075][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.855075][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.855075][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.856106][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.856106][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.856106][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.857756][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.858724][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.857587][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.858724][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.857587][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.857587][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.857587][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.858724][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.858724][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.858724][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.858724][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.858724][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.858724][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.860373][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.860373][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.860373][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.862023][Remove Method] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.862023][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.862023][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.862023][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.862023][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.862023][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.862023][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.863672][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.863672][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.863672][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.863672][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.863672][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.863672][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.867796][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.870064][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.871618][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.871618][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.871618][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.871618][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.871618][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.873268][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.873268][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.872686][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.872686][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.872686][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.873717][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.874299][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.874299][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.873717][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.873717][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.873717][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.873717][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.875367][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.875948][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.875948][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.875948][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.875948][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.875948][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.874785][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.873623][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.874785][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.874785][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.874785][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.875948][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.875948][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.875948][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.875173][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.875948][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.875948][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.875948][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.875948][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.875948][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.875948][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PACKAGE'
  - [-0.876979][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.876979][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.876979][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.876979][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.876979][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PUBLIC'
  - [-0.876979][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.876979][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.876979][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.876979][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.881103][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.881103][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.881103][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PACKAGE'
  - [-0.881103][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.883371][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.883371][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.884402][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.883627][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.883627][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.884402][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.884402][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.884402][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.886051][Remove Method] 'createuk.co.jezuk.mango.Functions()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.886051][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.884888][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.886051][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.886051][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.886051][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.886051][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.886051][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PACKAGE'
  - [-0.886051][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.888938][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.888163][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.888938][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.888938][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.887288][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.888319][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.888319][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.888319][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.889969][Remove Method] 'ReverseIterator(java.util.List)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.889969][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.889969][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.889969][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.889969][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.887643][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.889969][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.889969][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.889969][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PUBLIC'
  - [-0.889387][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.889969][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.889969][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.889969][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.889969][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.889969][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.889969][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.891618][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.891618][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.891618][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.891618][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.890455][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.891618][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.891618][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.891618][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.892649][Remove Method] 'find(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.892649][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.892649][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.892649][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.892649][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.892649][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.892649][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.892649][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.892649][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.892649][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.892649][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.892649][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.894917][Remove Method] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.894917][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.894917][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.894917][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.894917][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.894917][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.895948][Remove Method] 'unique(java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.895948][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.898835][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.901103][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.901103][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.901103][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.903371][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.905639][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.904476][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.906126][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.907288][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.907288][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.908190][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.908190][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.909221][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.909221][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.909221][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.909221][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.913345][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.913345][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.915613][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.917097][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.917097][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.915878][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.915878][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.917527][Remove Method] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.918747][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.918747][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.918747][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PUBLIC'
  - [-0.917097][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.918128][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.918954][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.918954][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.918121][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.918954][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.918954][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.918954][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.918954][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.918954][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.918954][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.918954][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.918954][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.918954][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.920604][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.920604][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.920604][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.921635][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.921635][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PUBLIC'
  - [-0.921635][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.921635][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.923284][Remove Method] 'createuk.co.jezuk.mango.iterators.StringIterator()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.922034][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.923684][Remove Field] 's_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.924934][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.925718][Remove Field] 'pos_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.925718][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.925718][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.925718][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.925718][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.925718][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.925718][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.926749][Remove Method] 'remove(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.925099][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.923450][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.924481][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.925512][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.925512][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.925512][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.927161][Remove Method] 'NotEqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.927161][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.926520][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.927161][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.927161][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.926306][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.926306][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.925024][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.925024][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.924383][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.924383][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.925665][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.925665][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.926696][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.926696][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.927551][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.927551][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.928192][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.928192][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.928192][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.930460][Remove Method] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.932110][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.932110][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.932110][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.932110][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.932110][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.930460][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.929605][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.930636][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.931491][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.931491][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.931491][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.932522][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.932522][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.932522][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.932522][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.932522][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.932522][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.932522][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.931667][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.932522][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.931240][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.932522][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.932522][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.932522][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.932522][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.934171][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.934171][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.934171][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.932522][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.933553][Inline Method] uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ChainIterator.createuk.co.jezuk.mango.iterators.ChainIterator()
  - [-0.932698][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.933553][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.933553][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.932912][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.932912][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.932912][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.933553][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.933553][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.934584][Remove Method] 'remove(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.934584][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.934584][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.933729][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.934584][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.934584][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.934584][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.934584][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.934584][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.934584][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.934584][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.934584][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-0.932934][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.933965][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.933965][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.933965][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.933965][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.933965][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.933965][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.933965][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.933111][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.933111][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.934760][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.935615][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.935615][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.935615][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.935615][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.935615][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.935615][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.935615][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.935615][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.935615][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.935615][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.935615][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.937264][Remove Method] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.937264][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.937264][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.937264][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.937264][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.937264][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PUBLIC'
  - [-0.937264][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.935982][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.937264][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.935982][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.935982][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.937632][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.938914][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.938914][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.938059][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.938914][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.938273][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.938914][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.938914][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.938914][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.938914][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PUBLIC'
  - [-0.938914][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.938914][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.938914][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.938914][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.937632][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.937632][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-0.937632][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PACKAGE'
  - [-0.937632][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.940518][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.940518][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.940518][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.940518][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.940518][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.941800][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.941800][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.941800][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.941800][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.941800][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.941800][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.941800][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PUBLIC'
  - [-0.944687][Remove Method] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.944687][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.944687][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.944687][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.944687][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.944687][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.944687][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.944687][Decrease Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PUBLIC'
  - [-0.944687][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.943832][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.944687][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.944687][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.946336][Remove Method] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.946336][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.946336][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.946336][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.946336][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.946336][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.946336][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.946336][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.947986][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.All()' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.949017][Remove Method] 'unique(java.util.Collection,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.949017][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.949755][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.948106][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.949137][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.949137][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PUBLIC'
  - [-0.949137][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.948260][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.949137][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.949137][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.949137][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.949137][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.949137][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PACKAGE'
  - [-0.949137][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.950168][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.951199][Inline Method] uk.co.jezuk.mango.algorithms.Unique.match(java.util.Comparator,java.lang.Object,java.lang.Object) into uk.co.jezuk.mango.algorithms.Unique.execute(java.util.Iterator,java.util.Comparator)
  - [-0.949883][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.951199][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.951199][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.951199][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.951199][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.951199][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.949883][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.951199][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.951199][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.952848][Remove Method] 'ZipIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.951532][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.952848][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.952848][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-0.952848][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PACKAGE'
  - [-0.955116][Remove Method] 'wrap(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.956766][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.958415][Remove Field] 'iterator_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.958415][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.958415][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.960065][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.961714][Remove Field] 'buffer_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.962403][Remove Field] 'useCount_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.961052][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.962403][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.960754][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.961785][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.961785][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.961785][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.960434][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.961785][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.961785][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.961785][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.960434][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.960434][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.961785][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.961785][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.962816][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.962816][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.961915][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.961014][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.961915][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.962816][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.962816][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.962816][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.961464][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.961464][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.962816][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.962816][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.962816][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.962816][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.962816][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.962816][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.962816][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.963847][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.963847][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.963847][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.963847][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.962495][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.962495][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.963847][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.963847][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.962946][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.964595][Remove Method] 'BoundedIterator(java.util.Iterator,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.964595][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.965496][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.965496][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.965496][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.965496][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.965496][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.965496][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.963847][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.964878][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.964878][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.963526][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.964878][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.964878][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PACKAGE'
  - [-0.964878][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PACKAGE'
  - [-0.967764][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.967764][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PACKAGE'
  - [-0.967764][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.968795][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Function'
  - [-0.969826][Remove Method] 'execute(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.969826][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.969826][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.968177][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.968177][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.968177][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.969208][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.968307][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.969208][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.969208][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.969208][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.969208][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.969208][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.970857][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.970857][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.970857][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.970857][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.969208][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.970238][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.970238][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.970238][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.970238][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.968887][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.970238][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.970238][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.970238][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.970238][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.970238][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.970238][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.970238][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.970238][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.971888][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.971888][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.972524][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.972524][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.972524][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.972524][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.969637][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate)
  - [-0.971905][Inline Method] uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Not.createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)
  - [-0.971905][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.971905][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.971905][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.970256][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-0.970256][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.970256][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.970256][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.970256][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PUBLIC'
  - [-0.970256][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.970256][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.970256][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.971905][Remove Method] 'createuk.co.jezuk.mango.Generators()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.971905][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.971905][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.971905][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.971905][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PACKAGE'
  - [-0.971905][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.972936][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.972936][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.972936][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.972936][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.970159][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.970159][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.972936][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.972936][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.972936][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.972936][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.972936][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.972010][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.972936][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.972936][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.972010][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.970361][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.972010][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.973660][Remove Field] 'argType_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.974586][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.974586][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.975617][Inline Method] uk.co.jezuk.mango.binarypredicates.EqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.EqualTo.createuk.co.jezuk.mango.binarypredicates.EqualTo()
  - [-0.976195][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.976195][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.976195][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.976195][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.976195][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.977844][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.980112][Remove Method] '<init>(uk.co.jezuk.mango.collections.MapFactory$1)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.980112][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.980112][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PACKAGE'
  - [-0.982380][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.980952][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.980952][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.982380][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.982380][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.981428][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.981428][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.979999][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.981428][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.982380][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.982380][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.982380][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.982380][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.982380][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.981428][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.981428][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.982380][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.982380][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.982380][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.982380][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.982380][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.982380][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.982380][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.982380][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.982380][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.982380][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.982380][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.982380][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.982380][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.982380][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.982380][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.982380][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.982380][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.982380][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.984030][Remove Method] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.984030][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.986916][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.988050][Remove Field] 'p_' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.988050][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.987070][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.988050][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.988050][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.988050][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.988050][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.988050][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.990318][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.991968][Remove Method] 'BoundedIterator(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.991968][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.991349][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.991349][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.991349][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.991349][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.991349][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.991349][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.991349][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.991349][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.991349][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.991349][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.991349][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.991349][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.994236][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.994236][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.995267][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.995267][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.995267][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.995267][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.995267][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.995267][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PUBLIC'
  - [-0.995267][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.996297][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.996297][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.996297][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.996297][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.996297][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.996297][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.996297][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.996297][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.996297][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.996297][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.996297][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.996297][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.997328][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.997328][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.997328][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.997328][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.997328][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.997328][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.997328][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.997328][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.997328][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.995858][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.997328][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.997328][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.997328][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PUBLIC'
  - [-0.997328][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.998359][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.998359][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.998359][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.996889][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.998359][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.998359][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.998359][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.998359][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.998359][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-1.000009][Remove Method] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-1.000009][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-1.000009][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-1.002277][Remove Method] 'toIterators(java.lang.Object[])' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-1.002277][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.002277][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.002277][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-1.003926][Remove Method] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.003926][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.005576][Remove Field] 'object_' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.006022][Remove Field] 'zip_' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-1.006022][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.006393][Remove Field] 'spent_' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.006393][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.006393][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.006393][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.006393][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PACKAGE'
  - [-1.008661][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-1.008661][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.008661][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.007012][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-1.008043][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-1.008043][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-1.008043][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.006393][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator)
  - [-1.007424][Inline Method] uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.Any.createuk.co.jezuk.mango.unarypredicates.Any()
  - [-1.007424][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.007424][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-1.007424][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.007424][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.007424][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.007424][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.009074][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.010723][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.010723][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.010723][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.012373][Remove Field] 'end_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.012373][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-1.012661][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.012661][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-1.012661][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-1.012661][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.012661][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.012661][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.012661][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-1.012661][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.012661][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.012661][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.012661][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.012661][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-1.012661][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.012661][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.012661][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.012661][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.012661][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-1.012661][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.012661][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.012661][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.012661][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.012661][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.012661][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.012661][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-1.012661][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.012661][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-1.012661][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.012661][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-1.012661][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.012661][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.012661][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.012661][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.011586][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.012661][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-1.012661][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-1.012661][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.012661][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.012661][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.012661][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.012661][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.012661][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-1.012661][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.012661][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PACKAGE'
  - [-1.013692][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-1.013692][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.013692][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.013692][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.013692][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-1.013692][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.013692][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.013692][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.013692][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-1.013692][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.013692][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-1.015342][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-1.015342][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.015342][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.015342][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-1.016991][Remove Method] 'createuk.co.jezuk.mango.functions.Constant()' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-1.017189][Remove Field] 'value_' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-1.017189][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.017189][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.017189][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-1.017189][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.017189][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.017189][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.017189][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.017189][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.017189][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.017189][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-1.017189][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.017189][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.018838][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-1.018838][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.018838][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.018838][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-1.018838][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-1.020488][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Any()' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-1.020586][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-1.020586][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.020586][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.020586][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.020586][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.020586][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.020586][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-1.020586][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.020586][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.020586][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-1.021617][Remove Method] 'list(java.util.Collection)' of type 'uk.co.jezuk.mango.Collections'
  - [-1.021617][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.021617][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.021617][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.021617][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.021617][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.021617][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.021617][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.021617][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.021617][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.021617][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.021617][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-1.021617][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.021617][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.021617][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-1.023885][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-1.023885][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.023885][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.023885][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.023885][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-1.025534][Remove Method] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.027184][Remove Field] 'array_' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.027184][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.027184][Decrease Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-1.027184][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.027184][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.027184][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.027184][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.027184][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.027184][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.027184][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.027184][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.027184][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.027184][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.027184][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.027184][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.027184][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.027184][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.027184][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-1.027184][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.027184][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.027184][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.028833][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.030483][Remove Field] 'end_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.032132][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.032132][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.032132][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.032132][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-1.033163][Remove Method] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-1.033163][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.033163][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.033163][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.033163][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.033163][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.033163][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.033163][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.033163][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.033150][Remove Field] 'list_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.033150][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.033150][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.033150][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.033150][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.033150][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.033150][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.033150][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.033150][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.033150][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.033150][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.033150][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.033150][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.033150][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.033150][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.033150][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.033150][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.033150][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.033150][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.033150][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.033150][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.033150][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.033150][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.033150][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.033150][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.033150][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-1.033150][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.033150][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.033150][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.033150][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-1.034181][Remove Method] 'list(java.util.Iterator)' of type 'uk.co.jezuk.mango.Collections'
  - [-1.034181][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.034181][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.034181][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.034181][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.034181][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.034181][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-1.035212][Remove Method] 'list(java.util.Iterator)' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-1.035212][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item

====== Run Result ======

* Name: Mango|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 85.89 seconds
  * Quality Gain: 0.660948
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.379076
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 2.2784
    * numOps: 4.3402
    * iFImpl: 0.4433
    * Dep_In: 2.4227
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 1.1649
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.4043
    * NumDesc: 0.0000

* Final Design:
  * Score: -1.040024
  * Possible Actions: 112
  * Applied Actions: 2798
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 0.5876
    * numOps: 0.4227
    * iFImpl: 0.4433
    * Dep_In: 0.5670
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 0.5052
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.5000
    * NumDesc: 0.0000

* Applied Actions:
  - [-0.380107][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.381138][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.381138][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.382169][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.383200][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.382274][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.382274][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.382274][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.381656][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.382687][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.382687][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.383717][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.383717][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.383099][Freeze Method] Convert 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.383099][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.383099][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.383099][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.383099][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.384130][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.385161][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.385161][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.384542][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.384542][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.383924][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to static 
  - [-0.383305][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to static 
  - [-0.383305][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.383305][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.384336][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.384336][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.384336][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.384336][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.384336][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.383873][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.383873][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.383873][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.383873][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.383873][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.384904][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.385935][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.385935][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.385935][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.386966][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.386966][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.387997][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.387997][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.387997][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.387997][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.388923][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.388923][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.388923][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.389954][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.389954][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.389954][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.390985][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.390985][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.390985][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.390985][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.390985][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.390985][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.392015][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.392015][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.393046][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.393046][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.393046][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.393046][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.393046][Increase Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.394077][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.394077][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.394077][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.394077][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.394077][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.394077][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.395108][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.395108][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.396139][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.396139][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.397170][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.397170][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.397170][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.398201][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.399232][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400263][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.401294][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.402325][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402325][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403251][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402325][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402325][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.403356][Remove Method] 'unique(java.util.Collection,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402738][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.403769][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.403769][Decrease Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.403769][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.404800][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.404800][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.405831][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.406862][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.407893][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.407893][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.408924][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.408924][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.408305][Freeze Method] Convert 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.409336][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.409336][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.409336][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.410367][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.410367][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.410367][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.411398][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.411398][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.411398][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.410935][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.410935][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.410935][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.410935][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.410935][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to static 
  - [-0.411966][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.411966][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.412997][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.414028][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.Object)
  - [-0.414028][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.414028][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.414028][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.415059][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.415059][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.415059][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.415059][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.415676][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.415676][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.416707][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.416707][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.415058][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.415058][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.415058][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.417326][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.417326][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.417326][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.417326][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.418357][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.418357][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.418357][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.419388][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.420418][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.421449][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.420523][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.420061][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.420061][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.419442][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.419442][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.419442][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.419442][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.418979][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.418979][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to static 
  - [-0.418979][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.418979][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.418979][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.420010][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.420010][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.420010][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.420010][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.420936][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.420936][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.420936][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.420936][Increase Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.420936][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.420936][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.420936][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.421967][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.422893][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.422893][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.422893][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.422893][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.423819][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.424745][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.424126][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.424126][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.424126][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.424126][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.424126][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.424126][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.424126][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.424743][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.424743][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.425361][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.425361][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.425361][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.425361][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.425361][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.425361][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.425361][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.425978][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.425978][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.426595][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.426595][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.426595][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.427212][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.425563][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.425563][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.426594][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.427211][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.427211][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.427674][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.428291][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.426440][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.426440][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.425821][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.425204][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.425204][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.425204][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.425204][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.425204][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.424585][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.426437][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.427054][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.427054][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.427054][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.427054][Decrease Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.427517][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.427517][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.427517][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.426591][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.428241][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.next(uk.co.jezuk.mango.iterators.ZipIterator) into uk.co.jezuk.mango.iterators.ZipIterator.next()
  - [-0.428704][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.428704][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.429630][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.429630][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.429630][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.429630][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.429630][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.430661][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.430661][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.430043][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.429117][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.429117][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.429117][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.430148][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.431074][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.431074][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.431692][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.431692][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.431073][Freeze Method] Convert 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.431073][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.430610][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.430610][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.430610][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.430610][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.428961][Introduce Factory] for uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class)
  - [-0.428961][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.429991][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()
  - [-0.430609][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.431072][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.431072][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.431072][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.430453][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.430453][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.430916][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.430916][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.431379][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.431379][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.431379][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.431379][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.431379][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.431842][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.432305][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.432768][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.432768][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.432768][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.433231][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.433694][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.433231][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.433694][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.433694][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.433694][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.433231][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.433694][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.433694][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.433075][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.433538][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.433538][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.434001][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.433383][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.433383][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.432457][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.432457][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.432457][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.432457][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.432457][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.432457][Decrease Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.434106][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.435756][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.435756][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.435756][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.435138][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.435138][Decrease Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.435138][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.435138][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.436169][Inline Method] uk.co.jezuk.mango.Predicates.All(java.util.Iterator) into uk.co.jezuk.mango.Predicates.All(java.util.Collection)
  - [-0.437095][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.437713][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.438176][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.438639][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.438639][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.438021][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.438021][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.438021][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.438021][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.437403][Freeze Method] Convert 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.437403][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.437403][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.437403][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.437403][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.438434][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.438434][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.438434][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.439051][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.439051][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.439051][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.439051][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.439051][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.440082][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.440082][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.440082][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.440082][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.440082][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.440082][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.440082][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.442350][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.441731][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.441731][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.441731][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.441731][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.442762][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.442762][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.442762][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.442762][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.442762][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.442762][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.442762][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.442762][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.442762][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.442762][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.442762][Increase Method Security] 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.442762][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.442762][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.442144][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to static 
  - [-0.442144][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.442144][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.442144][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.442144][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.443175][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.443175][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.444206][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.444206][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.444206][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.444206][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.444206][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.444206][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.444206][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.444206][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.444206][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.444206][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.444206][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.444206][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.444206][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.444206][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.444206][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.444206][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.444206][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.445236][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.445236][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.445236][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.445236][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.445236][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.446267][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.Object)
  - [-0.446267][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.446267][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.446267][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.446267][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.446267][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.446267][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.446267][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.446267][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.448535][Remove Method] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.448535][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.448535][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.448535][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.448535][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.452659][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.451733][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.451733][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.451733][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.451733][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.451733][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.451733][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.451733][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.451733][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.451733][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.451733][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.451733][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.451733][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.454001][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.455651][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.455651][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.456682][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.457713][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.458639][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.458020][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.458020][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.458020][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.458020][Decrease Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.457401][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.457401][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.459051][Remove Method] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.458434][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.458434][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.458434][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.459051][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.459051][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.458432][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.458432][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.458432][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.458432][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.458432][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.459463][Remove Method] 'find(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.459463][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.457814][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.458845][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.458845][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.457919][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.458845][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.458845][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.458845][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.458845][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.460494][Remove Method] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.460494][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.460494][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.460494][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.460494][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.459876][Freeze Method] Convert 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.459413][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.459413][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.459413][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.458795][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.458795][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to static 
  - [-0.458795][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.458795][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.458795][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.460445][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.460445][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.460445][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.460445][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.460445][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.461062][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.461062][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.460599][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.461062][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.461525][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.461525][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.461525][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.463793][Remove Method] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.463793][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.463793][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.463793][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.465443][Remove Method] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.466474][Remove Method] 'find(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.466474][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.466474][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.466474][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.466474][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.466474][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.466474][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.468123][Remove Method] 'Constant(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.468123][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.468123][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.468123][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.468123][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.468123][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.468123][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to static 
  - [-0.468123][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.468123][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.468123][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.472247][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.472247][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.472247][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.475133][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.475133][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.475133][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.475133][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.477401][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.477401][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.477401][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.479669][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.479669][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.481938][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.481938][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.484206][Remove Method] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.484206][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.483587][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.483587][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.483587][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.483587][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.485855][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.487505][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.487505][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.487505][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.489154][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.489154][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.490274][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.490274][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.490274][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.490274][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.490274][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.490274][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.491923][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.next(uk.co.jezuk.mango.iterators.StringIterator) into uk.co.jezuk.mango.iterators.StringIterator.next()
  - [-0.491923][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.491923][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.492954][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.492482][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.493513][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.493042][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.493513][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.493513][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.493513][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.493513][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.493513][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.493513][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.492895][Freeze Method] Convert 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.494544][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.494544][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.494544][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.495575][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.495575][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.495575][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.495575][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.495575][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.495575][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.496606][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.496606][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.497637][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.498668][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.498668][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.499140][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.499140][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.499140][Decrease Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.499140][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.499140][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.500170][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.499227][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.499227][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.499227][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.500170][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.500170][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.499552][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.499552][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.499552][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.496665][Introduce Factory] for uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.496665][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.496665][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.496665][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.496665][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.496665][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.496665][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.496665][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.496665][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.496665][Increase Method Security] 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.498933][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.498933][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.498933][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.498933][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.499964][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.499964][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.500995][Remove Method] 'unique(java.util.Collection,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.500995][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.500995][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.500995][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.500995][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.500995][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.500995][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.500995][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.500995][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.502026][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.502026][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.502026][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.502026][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.502026][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.502026][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.503676][Remove Method] 'EqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.504707][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.504707][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.505737][Remove Method] 'putAll(java.util.Map)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.505737][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.505737][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.505737][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.505737][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.506768][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.506768][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.506768][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.509036][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.509036][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.509036][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.510067][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.510067][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.509449][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.509449][Increase Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.509449][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.510480][Remove Method] 'remove(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.510480][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.510480][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.510480][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.510480][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.510480][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.510480][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.512748][Remove Method] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.513779][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.513779][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.513779][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.513307][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.512678][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.513307][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.513307][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.513307][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.517431][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.518462][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.518933][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.518933][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.518315][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.518315][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.518315][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.518315][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.518315][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.518315][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.517696][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.517696][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.517696][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.517078][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.517078][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.517078][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.517078][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.517078][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.518727][Remove Method] 'ChainIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.518727][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.518727][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.518727][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.518727][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.518727][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.518727][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.518727][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.518727][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.520377][Remove Method] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.520377][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.520377][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.520377][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.520377][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.520377][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.523263][Remove Method] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.524913][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.findNext(uk.co.jezuk.mango.iterators.SkippingIterator) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.525944][Remove Method] 'values()' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.525944][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.525315][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.524371][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.525315][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.525315][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.525315][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.525944][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.524057][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.524057][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.524057][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.524057][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.524057][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.525944][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.526975][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.526975][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.526975][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.526975][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.526975][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.528006][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.528006][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.532129][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.531186][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.532129][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.531500][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.531029][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.529379][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.529379][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.530410][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.530410][Decrease Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.531039][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.531039][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.531039][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.531039][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.532070][Remove Method] 'unique(java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.532070][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.533101][Remove Method] 'True()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.533101][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.533101][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.533101][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.533101][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.533101][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.533101][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.533101][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.533101][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.533101][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.533101][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.533101][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.533101][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.533101][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.533101][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.533101][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.533101][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.533101][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.535987][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.535987][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.535987][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.535987][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.535987][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.535987][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.538255][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.540377][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.540377][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.542645][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.544913][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.547181][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.547181][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.547181][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.547181][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.547181][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.547181][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.547181][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.547181][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.548830][Remove Method] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.548830][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.549929][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.550960][Remove Method] 'unique(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.550960][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.551991][Remove Method] 'findPosition(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.551991][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.551991][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.551991][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.551991][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.551991][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.551991][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.551991][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.551991][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.551991][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.551991][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.551991][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.551991][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.551991][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.551991][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.551991][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.554259][Remove Method] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.555290][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections$MapBuilder'
  - [-0.555290][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.555290][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.555290][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.555290][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.555290][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.555290][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.558177][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.558177][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to static 
  - [-0.558177][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.558177][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.558177][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.560445][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.560445][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.562713][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.562713][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.561751][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.561751][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.561751][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.561751][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.561751][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.561751][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.561751][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.564019][Remove Method] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.566287][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.568556][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.568556][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.570205][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.571264][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.570645][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to static 
  - [-0.570645][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.570645][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.571676][Remove Method] 'remove(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.571676][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.571676][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.567552][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.566899][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.570404][Inline Method] uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xnor.createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.570404][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.569914][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.569914][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.572182][Remove Method] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.572182][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.572182][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.572182][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.572182][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.572182][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.572182][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.572182][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.573213][Remove Method] 'unique(java.util.Collection,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.572232][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.573882][Remove Method] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.573882][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.575531][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.577181][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.577181][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.577181][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.578212][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.578212][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.578212][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.578212][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.578212][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.578212][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.578212][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.578212][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.578212][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.578212][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.578212][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.578212][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.579861][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.579861][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.579861][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.580892][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.581923][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.582954][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.583985][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.584965][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.584965][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.585946][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.586599][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.587089][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.587089][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.586109][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.586109][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.585491][Freeze Method] Convert 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.587140][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.587140][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.588120][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.588120][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.588120][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.588120][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.588120][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.588120][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.588120][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.588120][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.589770][Remove Method] 'NotEqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.589770][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.592038][Remove Method] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.592038][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.592038][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.592038][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.592038][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.594306][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.594306][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.595337][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.595337][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.597605][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.597605][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.597115][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.597115][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.597115][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.597605][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.597605][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.597605][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.597605][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.597605][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.597605][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.597605][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.597605][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.597605][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.597605][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.597605][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.596625][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.596625][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.596625][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.596625][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.596625][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.596625][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.598893][Remove Method] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.598893][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.597912][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.599562][Remove Method] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.600593][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.600593][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.601573][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.602553][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.602553][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.602553][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.602553][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.602553][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.602553][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.601935][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to static 
  - [-0.601935][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.601935][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.601935][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.601935][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.601935][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.601935][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.602966][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.603997][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.603997][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.603997][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.603997][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.603997][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.603997][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.603997][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.605028][Remove Method] 'count(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.605028][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.605028][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.605028][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.605028][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.605028][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.605028][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.605028][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.607296][Remove Method] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.607296][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.607296][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.608945][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.608945][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.608327][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to static 
  - [-0.608327][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.608327][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.608327][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.608327][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.608327][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.608327][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.608327][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.607708][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.608739][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.607759][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.608739][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.608739][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.611626][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.611626][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.611626][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.611626][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.611626][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.611626][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.611626][Decrease Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.611626][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.613894][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.613894][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.613894][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.613894][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.613894][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.613894][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.613894][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.613894][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.614925][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.615955][Remove Method] 'keySet()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.616986][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.616986][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.616986][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.616986][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.616986][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.616986][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.618017][Remove Method] 'values()' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.618017][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.618017][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.618017][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.618017][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.618017][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.619048][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.619048][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.619048][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.619048][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.619048][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.620698][Remove Method] 'ReverseIterator(java.util.List)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.620698][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.620698][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.620698][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.620698][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.620698][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.620698][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.622347][Remove Method] 'SingletonIterator(java.lang.Object)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.622347][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.624615][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.624615][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.623997][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.623997][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.623997][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.623997][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.623997][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.625646][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.626677][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.626677][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.626677][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.626059][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to static 
  - [-0.626059][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.626059][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.626059][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.626059][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.627089][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.627089][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.627089][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.627089][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.627089][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.627089][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.628739][Remove Method] 'LessThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.629770][Remove Method] 'values()' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.629770][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.629770][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.629770][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.630801][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.630801][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.631832][Remove Method] 'find(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.631832][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.632863][Remove Method] 'size()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.632372][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.632863][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.632244][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.632244][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.632244][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.632244][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.632244][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.632244][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.633894][Remove Method] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.633894][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.633894][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.633894][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.633894][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.633894][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.633894][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.634925][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.634925][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.634925][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.634925][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.634925][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.634271][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.634925][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.634925][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.634925][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.634925][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.634925][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.634925][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.634925][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.634925][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.634925][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.634925][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.634925][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.636574][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.636574][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.636574][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.636574][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.636574][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.636574][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.636574][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.638224][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.638224][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.638224][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.639254][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.640904][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.642553][Remove Field] 'lastClass_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.642553][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.642553][Increase Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.642553][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.642553][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.644203][Remove Field] 'val$methodName' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.645258][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.646289][Remove Method] 'Method(java.lang.Class,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.646289][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.645622][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.645622][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.646653][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.645003][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.645003][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.644385][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.644385][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.646034][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.fn(uk.co.jezuk.mango.generators.IntegerSequence) into uk.co.jezuk.mango.generators.IntegerSequence.fn()
  - [-0.646034][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.646034][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.646034][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.647684][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.648715][Inline Method] uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ChainIterator.createuk.co.jezuk.mango.iterators.ChainIterator()
  - [-0.648715][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.648715][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.648715][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to static 
  - [-0.648715][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.648715][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.648715][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.648715][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.648715][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.648715][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.649746][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.649746][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.649746][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.649746][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.651395][Remove Method] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.651395][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.651395][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.653663][Remove Method] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.654330][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.654330][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.654330][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.654330][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.654330][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.654330][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.656598][Remove Method] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.655979][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.655979][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.655979][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.657010][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.657010][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.657010][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.657010][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.658041][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.658041][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.658041][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.659072][Inline Method] uk.co.jezuk.mango.Adapt.wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.ArgumentMethod(java.lang.String,java.lang.Class)
  - [-0.659072][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.659072][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.659072][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.663196][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.663196][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.663196][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.662577][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to static 
  - [-0.662577][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.662577][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.663608][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.663608][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.663608][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.663608][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.663608][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.663608][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.663608][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.663608][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.663608][Decrease Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.662608][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.663608][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.663608][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.663608][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.663608][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.663608][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.663608][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.663608][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.662608][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.662608][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.663608][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.663108][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.663608][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.663608][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.663608][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.663608][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.663608][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.666495][Remove Method] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.666495][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.666495][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.666495][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.666495][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.666495][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.668763][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.670412][Remove Method] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.670412][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.670412][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.670412][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.670412][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.670412][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.670412][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.670412][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.670412][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.670412][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.670412][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.670412][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.670412][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.670412][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.672062][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.672062][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.673093][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.673093][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.672474][Freeze Method] Convert 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.672474][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.672474][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.672474][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.671974][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.671974][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.671974][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.671974][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.671974][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.671974][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.674242][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.675273][Remove Method] 'values()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.675273][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.675273][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.675273][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.675773][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.675773][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.675773][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.675773][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.675773][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.675773][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.675773][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.675773][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.677423][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.677423][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.679072][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.679072][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.680103][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.Generator'
  - [-0.679484][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to static 
  - [-0.679484][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.679484][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.680515][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.680515][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.679849][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.679849][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.680515][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.680515][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.680515][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.680515][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.680515][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.681546][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.681546][Decrease Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.681546][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.681546][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.681546][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.681546][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.683814][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.682814][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.682314][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.682314][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.683314][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.683314][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.683314][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.683814][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.683814][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.684845][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.684179][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.684845][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.684845][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.684845][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.684845][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.684845][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.684845][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.684845][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.684845][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.684845][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.684845][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.684845][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.684845][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.684845][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.684845][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.687732][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.690000][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.692268][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.693917][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.694948][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.694948][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.694948][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.693948][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.694979][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.694979][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-0.694979][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.694979][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.696010][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.696010][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.696010][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PUBLIC'
  - [-0.697660][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.get(int)
  - [-0.697660][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.697660][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.699309][Remove Method] 'ArrayIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.700340][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.701340][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.701340][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.700340][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.700340][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.700340][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.701340][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.700340][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.700340][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.700340][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.699673][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.699673][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.699673][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.699673][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.699673][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.700673][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.700673][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.700673][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.700673][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.700673][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.700673][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.700673][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.700673][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.700673][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.700173][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.700673][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.700673][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.700673][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.700673][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.700673][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.700673][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.700673][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.700673][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.700673][Decrease Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.700673][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.700173][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.700673][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.700673][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.700673][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.700673][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.700673][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.702941][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.702941][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.702941][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.704591][Remove Method] 'GreaterThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.704591][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.704591][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.704591][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.704591][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.704591][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-0.704591][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.706859][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.706859][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.706859][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.706859][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.706859][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.706859][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.709127][Remove Method] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.709127][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.711395][Remove Method] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.711395][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.711395][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.710777][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.710777][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.710777][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.710777][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.710777][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.710777][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.710777][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.710777][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.713663][Remove Method] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.715313][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.716344][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.716344][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.716344][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.716344][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.720467][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.722735][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.722735][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.722069][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.722069][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.723718][Remove Method] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.723718][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.723718][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.723718][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.725368][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.727636][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.726636][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.725636][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.727217][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.727217][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.727217][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.729485][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.730516][Inline Method] uk.co.jezuk.mango.Adapt.verifyReturnType(java.lang.reflect.Method,java.lang.Class) into uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)
  - [-0.731546][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.732577][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.732577][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.734845][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.734845][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.734845][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.734845][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.738969][Remove Method] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.738969][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.738351][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.739382][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.740412][Remove Method] '<init>(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.740412][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.740412][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.740412][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.740412][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.742062][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.743093][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.743093][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.743093][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.743093][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.743093][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.743093][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.745361][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.746392][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.746392][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.747423][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.747423][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.747423][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.747423][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.748454][Remove Method] 'remove(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.748454][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.746804][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-0.747835][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.747835][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.748856][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.748856][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.749886][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.749886][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.750907][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.751883][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.751883][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.751883][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.751883][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.752831][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.752831][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.752831][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.753862][Remove Method] 'remove(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.753862][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.754571][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.754571][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.755602][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.755602][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.755602][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.755602][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.757870][Remove Method] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.757870][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.757870][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.757870][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.757870][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.757870][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.761994][Remove Method] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.761994][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.765499][Remove Method] '<init>(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.765499][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.765499][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.766530][Remove Method] 'TeeIterator(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.766530][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.767561][Remove Method] 'findPosition(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.767561][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.767561][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.767561][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.767561][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PUBLIC'
  - [-0.767561][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.767561][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.769829][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.769210][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.769210][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.769210][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.769210][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.770241][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.770241][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.770241][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.770241][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.771891][Remove Method] 'ZipIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.771891][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.771891][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.771891][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PACKAGE'
  - [-0.771891][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.774159][Remove Method] 'wrap(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.774159][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.774159][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.774159][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.774159][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.774159][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.775190][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.775190][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.774571][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.774571][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.774571][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.776220][Remove Method] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.777870][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.777870][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.777870][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.777870][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.777870][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.777870][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.780138][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.780138][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.780138][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.780138][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.781169][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.781169][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.781169][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.780637][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.780637][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.781169][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.781169][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.781169][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.781169][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.781169][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.781169][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.781169][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.781169][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.781169][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.781169][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PUBLIC'
  - [-0.781169][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.781169][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.781169][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.781169][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.781169][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.781169][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.781169][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.781169][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.781169][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.783437][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.783437][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.783437][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.783437][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.784468][Remove Method] 'Method(java.lang.Object,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.785499][Inline Method] uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.Method(java.lang.Object,java.lang.String,java.lang.Class)
  - [-0.785499][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.785499][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.785499][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.787148][Remove Method] 'StringIterator(java.lang.String)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.787148][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.788179][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.788179][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.788179][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.788179][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.788179][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PACKAGE'
  - [-0.788179][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.788179][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.788179][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.790447][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.790447][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.790447][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.790447][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.790447][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.792097][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.793746][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.795396][Remove Method] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.796328][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.796328][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.796328][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.796328][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.796328][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.799215][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.800246][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.800246][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.800246][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.799702][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.800733][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.801764][Remove Method] '<init>(java.lang.Object,java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.803414][Remove Field] 'obj_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.803414][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.805063][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.806713][Remove Field] 'val$obj' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.807601][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.808455][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.809023][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.809023][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.807887][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.807887][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.807887][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.807887][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.807887][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.807887][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.807887][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.809537][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.809537][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.809537][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.811186][Remove Method] 'IntegerSequence(java.lang.Integer)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.811186][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.811186][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.812322][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.812322][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-0.812322][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.812322][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.812322][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.812322][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.812322][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.812322][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.812322][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.812322][Decrease Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.811565][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.811565][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.812322][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.812322][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.811186][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.812322][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.812322][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.812322][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.812322][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.816446][Remove Method] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.816446][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.817477][Remove Method] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.817477][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.817477][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.819745][Remove Method] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.819745][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.819745][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.820776][Remove Method] 'unique(java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.820776][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.820776][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.820776][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.820776][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.818503][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.820776][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.820776][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.820776][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.820776][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PUBLIC'
  - [-0.820776][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.820776][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.819127][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.819127][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.820157][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.820157][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.820157][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.820157][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.821188][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.821188][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.821188][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.821188][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.821188][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.821188][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.821188][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.821188][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.821188][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.821188][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.821188][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.820431][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.820431][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.825792][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.830534][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.833560][Remove Field] 'val$g1' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.833560][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.835828][Remove Field] 'val$g2' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.834691][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.834691][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.836341][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.837763][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.838926][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.839957][Inline Method] uk.co.jezuk.mango.Predicates.OneOf(java.util.Iterator) into uk.co.jezuk.mango.Predicates.OneOf(java.util.Collection)
  - [-0.837631][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.837631][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.836856][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.836856][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.836081][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.838406][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.838406][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.838406][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.837631][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.837631][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.837631][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.839281][Remove Method] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.840056][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.840056][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.840831][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.840831][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.841606][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.841606][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.839957][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.840988][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.841763][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.840988][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.839825][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.839825][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.840988][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.840988][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.840988][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.840988][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.841763][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.841763][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.842538][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.842538][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.842538][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.843569][Remove Method] 'intersection(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.843569][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.843569][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.843569][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.843569][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.843569][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.843569][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.843569][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.843569][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.843569][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PACKAGE'
  - [-0.843569][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.846456][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.846456][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.845293][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.845293][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.845293][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.846456][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.846456][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.846456][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.847487][Inline Method] uk.co.jezuk.mango.algorithms.Unique.match(java.util.Comparator,java.lang.Object,java.lang.Object) into uk.co.jezuk.mango.algorithms.Unique.execute(java.util.Iterator,java.util.Comparator)
  - [-0.847487][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.848517][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.848517][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.848517][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.848517][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.848517][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.850167][Remove Method] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.849392][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.849392][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.850167][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.849004][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.849004][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.849004][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.849004][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.849004][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.849004][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.850167][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.850167][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.849548][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to static 
  - [-0.849548][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.853672][Remove Method] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.854703][Remove Method] 'clear()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.854703][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.855734][Remove Method] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.855734][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.855734][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.858621][Remove Method] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.858621][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.858621][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.857458][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.856295][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.856295][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.856295][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.857458][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.858621][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.858621][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.858621][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.858621][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.858621][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.858621][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.858621][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.858002][Freeze Method] Convert 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.858002][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.859033][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.859033][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.859033][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.859033][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.859033][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.860682][Remove Method] 'createuk.co.jezuk.mango.iterators.StringIterator()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.862332][Remove Field] 'pos_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.862332][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.862332][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.863160][Remove Field] 's_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.863160][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.864810][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.863619][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.863024][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.864214][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.863024][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.864214][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.863024][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.864214][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.864810][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.864810][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.864810][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.864810][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.864810][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.864810][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.864810][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.864810][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.865840][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunction'
  - [-0.865840][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.868109][Remove Method] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.868109][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.868109][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.869139][Inline Method] uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.870170][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.870170][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.870170][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.870170][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.868980][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.868980][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.868980][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.868980][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.868980][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PACKAGE'
  - [-0.868980][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.870170][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.870170][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.870170][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.870170][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.870170][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.871201][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.871201][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.871201][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.871201][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.872851][Remove Method] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.872851][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.872851][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.874500][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.875531][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.877181][Remove Field] 'valid_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.877181][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.877181][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.877181][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.877181][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.877181][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.878830][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.878212][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to static 
  - [-0.878212][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.878212][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.878212][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.878212][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.878212][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.879861][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.879861][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.878671][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.879861][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.879861][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.879861][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.879067][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.880098][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.880892][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.880297][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.880892][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.880892][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.880892][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.880892][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.880892][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.880892][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.880892][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.882542][Remove Method] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.882542][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.882542][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.882542][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.882542][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.882542][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.881946][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.881946][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.882542][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.882542][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.881351][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.880732][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.880732][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.881923][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.881923][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.882954][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.880573][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.882954][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.882954][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.882359][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.881763][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.881763][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.882359][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.882954][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.881304][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.882335][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.882335][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.881145][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.880351][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.880351][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.880351][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.880351][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.882001][Remove Method] 'Any(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.882001][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.882001][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.882001][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.883191][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.883191][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.884841][Remove Method] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.885634][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.885634][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.885634][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.885634][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.885634][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.885634][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.885634][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.884444][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.884444][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.884444][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.882794][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.882794][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.884444][Remove Method] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.885634][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.885634][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.885634][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.885634][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.887284][Remove Method] 'OneOf(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.887284][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.887284][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.888315][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.888315][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.888315][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.889346][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.890377][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.890377][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.890377][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.890377][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PUBLIC'
  - [-0.889186][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.890377][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.890377][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.890377][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.890377][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.892026][Remove Method] 'Any(java.util.Iterator)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.891232][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.891232][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.891232][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.890042][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.891232][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.891232][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.891232][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.891232][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.892882][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.893913][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.893913][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.893913][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.893913][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.893913][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.893913][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.893913][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.892722][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.893913][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.892722][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.892722][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.893913][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.893913][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.893913][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.893913][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.893913][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.893913][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.894944][Remove Method] 'findPosition(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.894944][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.894944][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.894944][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.894944][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.894944][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.894944][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.894944][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.894325][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.894325][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.896593][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.896593][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.895998][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.895998][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.895998][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.896593][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.894212][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.896593][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.896593][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.896593][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.895998][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.895998][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.896593][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.894944][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.895975][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.895975][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.895975][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.898243][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.898243][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.898243][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.898243][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.897647][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.898243][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.898243][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.898243][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.897052][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.897052][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.898243][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.898243][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.898243][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.898243][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.899274][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.899274][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.899274][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.899274][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PACKAGE'
  - [-0.901542][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.901542][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.901542][Decrease Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PUBLIC'
  - [-0.901542][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.901542][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.901542][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.901542][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.901542][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.900748][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.901542][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.901542][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.900748][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.900153][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.900153][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.900748][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.900153][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.900748][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.900748][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.900748][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.899099][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.899099][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.899099][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.900129][Inline Method] uk.co.jezuk.mango.binarypredicates.EqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.EqualTo.createuk.co.jezuk.mango.binarypredicates.EqualTo()
  - [-0.900129][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.898480][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.897290][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.898480][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.898480][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.898480][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.899511][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.899511][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.899511][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-0.899511][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.897861][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.898892][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.897702][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.897702][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PACKAGE'
  - [-0.899970][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.901160][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.901160][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.901160][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PACKAGE'
  - [-0.901160][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.901160][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.901160][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.904047][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.904047][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.905696][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.905696][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.905696][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.905696][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.905696][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.905696][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.905696][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.905696][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.902810][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.902810][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.901619][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.901024][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.901024][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.901024][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.903292][Inline Method] uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Not.createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.903292][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.904483][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.903292][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.903292][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.904483][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.904483][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.905078][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.903428][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-0.903428][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.904459][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-0.904459][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.903269][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.903269][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.904459][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.904459][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.904459][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.906109][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.906109][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.906109][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.906109][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.906109][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.908377][Remove Method] '<init>(uk.co.jezuk.mango.collections.MapFactory$1)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.909408][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.909408][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.908813][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.909408][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.909408][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.906521][Introduce Factory] for uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.908789][Inline Method] uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SelectingIterator.createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.908789][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.908789][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.908789][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.908789][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.909820][Remove Method] 'True()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.909820][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.909820][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.909820][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.909820][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.909820][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.909820][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.909820][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.909820][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.908630][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.908630][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.907439][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.908630][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.908630][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.908630][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.907836][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.907836][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.907836][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.909027][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.909820][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.909820][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PACKAGE'
  - [-0.910851][Remove Method] 'execute(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.909202][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.908606][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.908606][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.907813][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.908844][Remove Method] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.908844][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.908844][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.908844][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.909875][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.910668][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.910668][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.912936][Remove Method] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.913730][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.914524][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.915317][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.915912][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.915119][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.915119][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.915119][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.915912][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.915119][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.914325][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.914325][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.915119][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.915912][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.915912][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.915912][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.915912][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.915912][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.915912][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.917562][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.917562][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.916372][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.916372][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.918021][Remove Method] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.918021][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.918021][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.918021][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.918021][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.918021][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.919211][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.919211][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.919211][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.920019][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.920019][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.920019][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.920019][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.918369][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.919400][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.917751][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer)
  - [-0.917751][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.917751][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.920019][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.920019][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.920019][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.920019][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.920019][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.921668][Remove Method] 'createuk.co.jezuk.mango.functions.Constant()' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.921668][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PACKAGE'
  - [-0.922699][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.923465][Remove Field] 'value_' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.923465][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.923465][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.923465][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.923465][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.922215][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.923465][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.922631][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.923465][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.923465][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.922215][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.923465][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.923465][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.926351][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.926351][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.926351][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.926351][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.926351][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.926351][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.926351][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.926351][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.925101][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.926351][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.926351][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PACKAGE'
  - [-0.926351][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.927382][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.927382][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.927382][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.926132][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.926132][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.927382][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.927382][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PACKAGE'
  - [-0.929650][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.929650][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.927150][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.927150][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.926317][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.925484][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.925484][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.927984][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.928817][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.929650][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.929650][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.929650][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.929650][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.929650][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.929650][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.929650][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.926764][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.925930][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.928198][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.928198][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.928198][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.928198][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.927365][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.927365][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.927365][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.927365][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.929014][Remove Method] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.929848][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.929848][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.929848][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.929848][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.929848][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.929848][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.929848][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.929848][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.932116][Remove Method] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.932116][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.931283][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.932116][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.932116][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.932116][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.932116][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.932116][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.933147][Remove Method] 'count(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.934796][Remove Method] 'BoundedIterator(java.util.Iterator,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.934796][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.934796][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.934796][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.934796][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.934796][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.934796][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.937064][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.938714][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.938714][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.938089][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.936839][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.937464][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.937464][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.938714][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.938089][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.938714][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.937464][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.936630][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.936630][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.936630][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.936005][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.937255][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.934755][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.937255][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.937255][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.938089][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.937464][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.938089][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.938714][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.938714][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.938714][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PACKAGE'
  - [-0.941600][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.940767][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.941600][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.941600][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.939951][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.939951][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.939951][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.940982][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.940982][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.940982][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.940982][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.940982][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.940149][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.940982][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.940982][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.940982][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.940982][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.940982][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.940982][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.942631][Remove Method] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.944281][Remove Field] 'argType_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.944281][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.944979][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.943697][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.944979][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.944979][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.943697][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.944979][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.944979][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.947866][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.950134][Remove Field] 'buffer_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.949279][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.949905][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.949905][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.948590][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.949905][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.949905][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.949248][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.949905][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.949905][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.949905][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.949905][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.949905][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.948590][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.948590][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.950239][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.952507][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.952507][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.951630][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.952946][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.954111][Remove Field] 'val$g' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.953211][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.954111][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.953211][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.954111][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.952760][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.954111][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.954111][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.955012][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.955012][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.955012][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.955012][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.955012][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.955012][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.955012][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.955012][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.955012][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.957899][Remove Method] 'Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.956548][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.957899][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.956998][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.957899][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.956548][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.956548][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.956548][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.958197][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.958197][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.959548][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.960059][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.960059][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.958670][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.960059][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.960059][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.960059][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.960059][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.959365][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.958670][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.959365][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.960059][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.960059][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.960059][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.960059][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.958670][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.960059][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.960059][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.960059][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.960059][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PACKAGE'
  - [-0.961090][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.959701][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.959701][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.961090][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.961090][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.961090][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.961090][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.961090][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.962740][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.963771][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.962382][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.962382][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.963771][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.963771][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.962121][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.963152][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.963152][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.963152][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.962226][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.962226][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.961300][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.963568][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.964494][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.964494][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.966144][Remove Method] 'BoundedIterator(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.967070][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.967070][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.966144][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.967070][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.967070][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.966144][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.966144][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.967070][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.967070][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.967070][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.967070][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.967070][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.967070][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.967070][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.968719][Remove Method] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.967330][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.968719][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.968719][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.970369][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.971433][Remove Field] 'p_' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.971433][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PACKAGE'
  - [-0.973701][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.973701][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.973701][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.973701][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PUBLIC'
  - [-0.973701][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.973701][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.972749][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.973701][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.973701][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.973701][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.972272][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.972272][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.973701][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.973701][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.973701][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.973701][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.973701][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.973701][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.973701][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.973701][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.973701][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.973701][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.972051][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator)
  - [-0.972051][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PACKAGE'
  - [-0.971337][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.974224][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.975255][Inline Method] uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.Any.createuk.co.jezuk.mango.unarypredicates.Any()
  - [-0.975969][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.975969][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.975969][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.975969][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.974319][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.975350][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.973922][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.972493][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.972493][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.973922][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.973922][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.973922][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.972272][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.973701][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.974732][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.974732][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.974732][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.973779][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.972827][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.973779][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.974732][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.975684][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.976637][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.975684][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.976637][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.975684][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.976637][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.976637][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.975208][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.976858][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.975429][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.976858][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.978286][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.978286][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.978286][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.977572][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.977572][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.977572][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.976619][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.975905][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.977555][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.All()' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.978507][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.978507][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.979221][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.979936][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.980367][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.980367][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.980367][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.978896][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.978896][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.978896][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.980367][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.980367][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.979386][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.980367][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.979386][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.979386][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.980367][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.978896][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.980367][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.980367][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.980367][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.980367][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.980367][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.979386][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.979386][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.980367][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.978896][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.980367][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.980367][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.980367][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.980367][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.982016][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Any()' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.982373][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.981363][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.982373][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.982373][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.982373][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.985260][Remove Method] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.987528][Remove Field] 'pred_' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.989177][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.989454][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.989454][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.988412][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.989454][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.988412][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.988412][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.988412][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.987370][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.987370][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.987370][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.987370][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.987370][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PRIVATE'
  - [-0.988401][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.988401][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.987360][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.988401][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.989443][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.989443][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.987880][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.989443][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.989443][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.989443][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.991092][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.991247][Remove Field] 'seed_' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.991247][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.991247][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.991247][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.991247][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.991247][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.992896][Remove Method] 'createuk.co.jezuk.mango.Generators()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.992896][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.992896][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.992896][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.992896][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.992896][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.992896][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.992896][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.992896][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.992896][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to 'PROTECTED'
  - [-0.992896][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.992896][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.992896][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.992896][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.992896][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.992896][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.992896][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.991821][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.992896][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.992896][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.991283][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.992896][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.992896][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.992896][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.992896][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.991821][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.991821][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.991821][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.993470][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.994546][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.994546][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.994546][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.994546][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.994546][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.993470][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.993470][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.994546][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.994546][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.994546][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.994546][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.994546][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.995577][Inline Method] uk.co.jezuk.mango.Collections.list(java.util.Iterator) into uk.co.jezuk.mango.Collections.list(java.util.Collection)
  - [-0.995577][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.995577][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.995577][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.995577][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.996607][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.994995][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.994995][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.994995][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.994995][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.994995][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.997263][Remove Method] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.998912][Remove Field] 'useCount_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.000562][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.000562][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-1.002211][Remove Field] 'iterator_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.003824][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-1.004899][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-1.004899][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-1.005974][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-1.007050][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-1.007050][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-1.008125][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-1.008323][Remove Field] 'buffer_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.008323][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-1.009972][Remove Method] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-1.009972][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-1.009972][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.009972][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.009972][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.009972][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.009972][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.009972][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.009972][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.009972][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-1.009972][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-1.008861][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.009972][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-1.009972][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-1.009972][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.009972][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.009972][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.009972][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-1.009972][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PACKAGE'
  - [-1.009972][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-1.009972][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.011003][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryPredicate'
  - [-1.011003][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.011003][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PACKAGE'
  - [-1.012034][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Function'
  - [-1.012034][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.012034][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.012034][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.012034][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.012034][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.012034][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to 'PUBLIC'
  - [-1.012034][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-1.008701][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-1.008701][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-1.008701][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.008701][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.012034][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-1.013065][Remove Method] 'list(java.util.Collection)' of type 'uk.co.jezuk.mango.Collections'
  - [-1.013065][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.013065][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-1.013065][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.011954][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-1.013065][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-1.011399][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-1.013065][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-1.013065][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-1.013065][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.013065][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.013065][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.013065][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.013065][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-1.013065][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.011399][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-1.013065][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-1.013065][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.013065][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.013065][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-1.013065][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.014715][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-1.014715][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to 'PROTECTED'
  - [-1.014715][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.014715][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.014715][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.014715][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-1.014715][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-1.014715][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.014715][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-1.014715][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.014715][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.014715][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.014715][Decrease Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-1.014715][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-1.014715][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.014715][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.014715][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-1.014715][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.014715][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to 'PACKAGE'
  - [-1.015746][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Predicate'
  - [-1.015746][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-1.018632][Remove Method] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-1.020900][Remove Field] 'pred_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-1.020998][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-1.020998][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.020998][Increase Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.020998][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-1.020998][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.020998][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.020998][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.020998][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.019849][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-1.020998][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-1.020998][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.020998][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-1.020998][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.020998][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-1.020998][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-1.020998][Decrease Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-1.020998][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.020998][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.020998][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.020998][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.020998][Increase Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.020998][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-1.019849][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-1.019849][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-1.021498][Remove Method] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-1.023766][Remove Method] 'toIterators(java.lang.Object[])' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-1.024916][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-1.024916][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.024916][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.024916][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.024916][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.024916][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.024916][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.024916][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.024916][Decrease Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-1.024916][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.024916][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.026565][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.028214][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.029864][Remove Field] 'end_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.029864][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.028715][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-1.028660][Remove Field] 'zip_' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-1.029851][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-1.029851][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.028201][Introduce Factory] for uk.co.jezuk.mango.Functions.<init>()
  - [-1.029232][Inline Method] uk.co.jezuk.mango.Functions.<init>() into uk.co.jezuk.mango.Functions.createuk.co.jezuk.mango.Functions()
  - [-1.029232][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-1.029232][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.029232][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.029232][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.029232][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.027447][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-1.027447][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.029232][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-1.029232][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.029232][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-1.029232][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.029096][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.029096][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.029096][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.029096][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.029096][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.029096][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.029096][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.029096][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-1.030127][Remove Method] 'list(java.util.Iterator)' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-1.030127][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.030127][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.030127][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.030127][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.030127][Increase Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.030127][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.030127][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.030127][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.030127][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.030127][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.030127][Increase Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-1.030127][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.031777][Remove Method] 'createuk.co.jezuk.mango.collections.ListFactory()' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-1.031777][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.031777][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.031777][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.031777][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.031777][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-1.031777][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.031777][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-1.031777][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.033426][Remove Method] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.033426][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.035075][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.035075][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.035075][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.035075][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.035075][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.035075][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.035075][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.035075][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.035075][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.035075][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.035075][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.035075][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.035075][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.035075][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.035075][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.035075][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.035075][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.035075][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.035075][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.035075][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.035075][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.035075][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.035075][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.035075][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.035075][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.035075][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.035075][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.035075][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.035075][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.035075][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.035075][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.035075][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.035075][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.035075][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.035075][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-1.035075][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.035075][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.035075][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.035075][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.035075][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.035075][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.035075][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-1.036725][Remove Method] 'createuk.co.jezuk.mango.Functions()' of type 'uk.co.jezuk.mango.Functions'
  - [-1.036725][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.036725][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.036725][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.036725][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.036725][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.036725][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-1.038374][Remove Method] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.040024][Remove Field] 'spent_' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.040024][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed

====== Run Result ======

* Name: Mango|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 76.47 seconds
  * Quality Gain: 0.664282
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.379076
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 2.2784
    * numOps: 4.3402
    * iFImpl: 0.4433
    * Dep_In: 2.4227
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 1.1649
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.4043
    * NumDesc: 0.0000

* Final Design:
  * Score: -1.043358
  * Possible Actions: 103
  * Applied Actions: 2824
  * Num Types: 96
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 0.4896
    * numOps: 0.3542
    * iFImpl: 0.4479
    * Dep_In: 0.4896
    * nesting: 0.1250
    * numCls: 11.2500
    * numFields: 0.4375
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.5870
    * NumDesc: 0.0000

* Applied Actions:
  - [-0.380107][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.379644][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.379644][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.380675][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.380675][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.380675][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.381706][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.381706][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.382737][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.382274][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.382274][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.383305][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.384336][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.384336][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.384336][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.384336][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.384336][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.384336][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.384336][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.385367][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.385367][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.385367][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.386398][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.387429][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.388460][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.387841][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to static 
  - [-0.387841][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.387841][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.388458][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.388458][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.389489][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.390520][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.389902][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.390933][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.390933][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.391964][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.391964][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.390314][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.390314][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.390314][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.390314][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.389696][Freeze Method] Convert 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.389696][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.389696][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.390159][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.390159][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.391189][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.392220][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.393251][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.393251][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.393251][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.393251][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.393251][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.391602][Introduce Factory] for uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String)
  - [-0.391602][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.390983][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.390983][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.390983][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.390983][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.390983][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.390983][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.390983][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.393251][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.394282][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.395313][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.395313][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.395313][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.395313][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.395313][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.395313][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.395313][Increase Method Security] 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.395313][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.397581][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.397581][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.397581][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.397581][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.398612][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.399643][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.399643][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.399025][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.400055][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.400981][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.400981][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.400981][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402012][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.403043][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.403043][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403043][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.403043][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404074][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.404074][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.405105][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404642][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.405673][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.405673][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.405673][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to static 
  - [-0.405673][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.405054][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.405054][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.405054][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.405054][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405054][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to static 
  - [-0.404436][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.404436][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404436][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404436][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.406704][Remove Method] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406704][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406704][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.406085][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to static 
  - [-0.408353][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.408353][Decrease Method Security] 'execute_null(java.util.Iterator)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.408353][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.409384][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.409384][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.409384][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.410415][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.410415][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.410415][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.410415][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.411446][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.410520][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.411551][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.412582][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.412582][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.412582][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.412582][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.412582][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.411964][Freeze Method] Convert 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.411964][Increase Method Security] 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.412995][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.412995][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.412995][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.412995][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.412995][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.414025][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.414025][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.415056][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.416087][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.416087][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.416087][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.416087][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.416087][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.415469][Freeze Method] Convert 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.417118][Remove Method] 'ZipIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.417118][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.416500][Freeze Method] Convert 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.416500][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.416963][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.416963][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.417994][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()
  - [-0.417994][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.417994][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.417994][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.419025][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.419025][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.419025][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.419025][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.418406][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to static 
  - [-0.418406][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.419437][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.420468][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.419849][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.420880][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.420880][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.420880][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.420880][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.420880][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.420262][Freeze Method] Convert 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.420262][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.422530][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.423561][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.423561][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.424592][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.425622][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.426653][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.427684][Remove Method] 'putAll(java.util.Map)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.427684][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.427684][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.427067][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.427067][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.427067][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.427067][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.427067][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.427067][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.427067][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.427067][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.429335][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.429335][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.431603][Remove Method] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.431603][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.432634][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.432634][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.432634][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.432634][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.432634][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.433560][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.434486][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.434486][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.434486][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.434486][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.433560][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.433560][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.433560][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to static 
  - [-0.433560][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.435828][Remove Method] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.436859][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.436859][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.436859][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.436859][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.436859][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.436859][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.436859][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.436859][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.437322][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.437322][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.437322][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.438353][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.Object)
  - [-0.438353][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.438353][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.438353][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.438353][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.438353][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.440002][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.440002][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.440002][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.440002][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.440002][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.440002][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.440002][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.442889][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.445157][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.445157][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.445157][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.447271][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.447271][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.447271][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.449537][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.449074][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.450105][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.450105][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.450105][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.450105][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.450105][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.450105][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.452373][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.451448][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.451448][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.451448][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to static 
  - [-0.452478][Remove Method] 'remove(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.452478][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.452478][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.452478][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.452478][Decrease Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.452478][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.452478][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.453509][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.453509][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.453509][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.453509][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.453509][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.453509][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.453509][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.455159][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.455159][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.455159][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.456190][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.456190][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.456190][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.456190][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.456190][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.456190][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.456190][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.456190][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.457221][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.457221][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.458147][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.459073][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.459073][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.459998][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.459998][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.460616][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.458764][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.458145][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.458145][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.459997][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.458145][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.458145][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.458145][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.458145][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.458145][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.458145][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.459997][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.459997][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.459997][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.459997][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.459997][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.459997][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.459379][Freeze Method] Convert 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.460410][Inline Method] uk.co.jezuk.mango.Predicates.All(java.util.Iterator) into uk.co.jezuk.mango.Predicates.All(java.util.Collection)
  - [-0.459792][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.460410][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.459791][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to static 
  - [-0.459791][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.460822][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.460822][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.460822][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.461439][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.462057][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.462519][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.462519][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.463550][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.463550][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.463550][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.463550][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.463550][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.465818][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.465818][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.465818][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.467468][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.fn(uk.co.jezuk.mango.generators.IntegerSequence) into uk.co.jezuk.mango.generators.IntegerSequence.fn()
  - [-0.468085][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.468085][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.468085][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.468702][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.468084][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.467465][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to static 
  - [-0.467465][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.468083][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.468083][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.468083][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.468083][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.469114][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.469114][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.467464][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-0.466846][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to static 
  - [-0.466228][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.467259][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-0.467876][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.467876][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.467876][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.467876][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.467876][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.467876][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.468494][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.468957][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.468957][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.469420][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.469420][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.469420][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.469420][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.469420][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.469420][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.469420][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.469420][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.471688][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.472719][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.472719][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.473750][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.473750][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.473750][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.474781][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.474781][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.474781][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.474781][Increase Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.474781][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.475243][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.475706][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.475706][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.475706][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.475706][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.476169][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.476632][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.476632][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.476632][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.476632][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.476632][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.476632][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.477663][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.477663][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.478126][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.478589][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.479052][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.479052][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.478434][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to static 
  - [-0.478434][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.478434][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.478434][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.477815][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.477815][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.480702][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.480702][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.482970][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.482970][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.482970][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.482970][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.482970][Decrease Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.485238][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.485238][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.485238][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.486887][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.486887][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.486887][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.489774][Remove Method] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.489774][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.492042][Remove Method] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.492042][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.492042][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.491116][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.491116][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.491116][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.492042][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.491423][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to static 
  - [-0.491423][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.491423][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.491423][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.490805][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.490805][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.490805][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.490805][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.490805][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.490805][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.490805][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.490805][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.490805][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.490805][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.493073][Remove Method] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.494104][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.494104][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.494104][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.494104][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.494104][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.494104][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.494104][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.495135][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.495135][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.496166][Remove Method] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.496166][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.497197][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.497197][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.497197][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.497197][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.497197][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.497197][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.497197][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.498227][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.498227][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.498227][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.498227][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.498227][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.499877][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.499877][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.500908][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.499982][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.499982][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.501013][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.500550][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.500550][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.500550][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.500550][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.500550][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.500550][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.500550][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.500550][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to static 
  - [-0.501476][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.501476][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.501476][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.502507][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.502507][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.502507][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.502970][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.502970][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.502970][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.502970][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.502970][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.502970][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.502970][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.502970][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.502970][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.504619][Remove Method] 'ReverseIterator(java.util.List)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.504619][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.504619][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.504619][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.506887][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.506887][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.506887][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.506887][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.506887][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.505961][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.506887][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.506887][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.506887][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.506887][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.506887][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.506887][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.506887][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.506887][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.506887][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.508537][Remove Method] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.508537][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.509568][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.509568][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.509568][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.508950][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.508950][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.508950][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.509981][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.509981][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.509981][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.512249][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.513346][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.513346][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.513346][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.513975][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.513975][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.513975][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.515624][Remove Method] 'Any(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.515624][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.515624][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.516655][Remove Method] 'test(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.516655][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.516655][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.516655][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.516655][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.516655][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.516655][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.516655][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.519542][Remove Method] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.519542][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.519542][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.519542][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.519542][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.519542][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.519542][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.519542][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.519542][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.519542][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.521191][Remove Method] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.521191][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.521191][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.521191][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.525315][Remove Method] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.525315][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.528201][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.530469][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.530469][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.530469][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.530469][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.530469][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.530469][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.530469][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.530469][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.532737][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.532737][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.532737][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.532737][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.535005][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.535005][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.535005][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.535005][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.536655][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.536655][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.536655][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.536655][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.536655][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.536655][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.537742][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.538773][Remove Method] 'get(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.538773][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.538773][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.538773][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.539804][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.539804][Decrease Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.540835][Remove Method] 'find(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.540835][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.540835][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.540354][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.538705][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.539735][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.539735][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.539735][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.539735][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.539735][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.539735][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.539735][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.539735][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.539735][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.539735][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.539735][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.539735][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.541385][Remove Method] 'SingletonIterator(java.lang.Object)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.542416][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.542416][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.544065][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.545096][Inline Method] uk.co.jezuk.mango.Predicates.OneOf(java.util.Iterator) into uk.co.jezuk.mango.Predicates.OneOf(java.util.Collection)
  - [-0.545096][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.549220][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.548739][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.549220][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.549220][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.549220][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.549220][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.549220][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.549701][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.549701][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.549701][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.549701][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.549701][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.549701][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.549701][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.549082][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to static 
  - [-0.549082][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.547159][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.547159][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.547159][Decrease Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.547159][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.547159][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.547159][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.549427][Remove Method] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.549427][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.549427][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.549427][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.551350][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.551350][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.552381][Remove Method] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.552381][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.552381][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.552381][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.553412][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.553412][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.554443][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.554443][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.554443][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.554443][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.556711][Remove Method] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.556711][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.556711][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.556711][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.558979][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.558979][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.558979][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.558979][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.558979][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.558979][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.558979][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.558979][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.558979][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.558979][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.558979][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.558979][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.561247][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.561247][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.562897][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.562897][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.562897][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.562897][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.562897][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.562897][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.563928][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.563928][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.563928][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.563928][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.563928][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.563928][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.563287][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.563928][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.563928][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.563928][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.563928][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.563928][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.563928][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.563928][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.563928][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.563928][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.563928][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.568051][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.569082][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.570113][Remove Method] 'values()' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.570113][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.570113][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.573000][Remove Method] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.571350][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-0.569701][Introduce Factory] for uk.co.jezuk.mango.Functions.<init>()
  - [-0.569701][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.569701][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.568051][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.568051][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.567571][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.567571][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.567571][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.568601][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.568601][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.568601][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.568601][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.568601][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.568601][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.568601][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.568601][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.569632][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.570663][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.570663][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.571694][Inline Method] uk.co.jezuk.mango.Functions.<init>() into uk.co.jezuk.mango.Functions.createuk.co.jezuk.mango.Functions()
  - [-0.571694][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.570733][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.571694][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.571694][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.572175][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.572175][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.572175][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.572175][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.573824][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.573824][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.573824][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.573824][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.575474][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.575474][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.575474][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.575474][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.574855][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to static 
  - [-0.574855][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.574855][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.574855][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.574855][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.575886][Remove Method] 'intersection(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.575886][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.575886][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.578154][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.578154][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.578154][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.578154][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.578154][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.580422][Remove Method] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.580422][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.579804][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.579804][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.579804][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.579804][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.579804][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.582072][Remove Method] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.582072][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.582072][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.582072][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.582072][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.582072][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.582072][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.583721][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.583721][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.585989][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.585989][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.585989][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.585989][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.585348][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.585348][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.586379][Inline Method] uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.586379][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.587410][Remove Method] 'values()' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.587410][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.586792][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to static 
  - [-0.586792][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.586792][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.586792][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.586792][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.586792][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.587823][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.587823][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.587823][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.587823][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.587823][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.587823][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.589472][Remove Method] 'ChainIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.590503][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.590503][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.592153][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.592794][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.592794][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.592794][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.592794][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.592794][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.592794][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.592794][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.592794][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.592794][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.592794][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.592794][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.592794][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.592794][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.592794][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.592794][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.592794][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.594443][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.594443][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.594443][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.595474][Remove Method] 'findPosition(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.596505][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.596505][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.596505][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.596505][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.596505][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.596505][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.596505][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.595886][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to static 
  - [-0.595886][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.596917][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.596917][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.598567][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.598567][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.597948][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.597948][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.597948][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.597948][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.597948][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.597948][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.597948][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.598979][Remove Method] 'True()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.598979][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.598338][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.599988][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.599988][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.599988][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.599988][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.599988][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.602256][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.602256][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.606379][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.606379][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to static 
  - [-0.606379][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.606379][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.606379][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.606379][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.606379][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.607410][Remove Method] 'Method(java.lang.Object,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.607410][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.607410][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.607410][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.607410][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.607410][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.607410][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.609678][Remove Method] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.611946][Remove Method] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.614214][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.614855][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.614855][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.614855][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.614375][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.613413][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.613413][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.612795][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to static 
  - [-0.613756][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.613756][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.613275][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.613275][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.613275][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.613275][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.614925][Remove Method] 'NotEqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.614925][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.614925][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.614925][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.615956][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.615956][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.615956][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.615956][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.616437][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.616437][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.616917][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.616917][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.616917][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.618567][Remove Method] 'Constant(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.618567][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.618567][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.618567][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.617948][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to static 
  - [-0.617948][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.617948][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.617948][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.617948][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.617948][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.617948][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.617948][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.617948][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.617948][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.618979][Remove Method] 'find(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.620010][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.621041][Inline Method] uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.Method(java.lang.Class,java.lang.String)
  - [-0.621041][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.620560][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.620560][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.620560][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.622828][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.621179][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.622210][Inline Method] uk.co.jezuk.mango.binarypredicates.EqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.EqualTo.createuk.co.jezuk.mango.binarypredicates.EqualTo()
  - [-0.622210][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.622210][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.622210][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.621591][Freeze Method] Convert 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.621591][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.621591][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.621591][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.625715][Remove Method] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.625715][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.625715][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.627983][Remove Method] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.627983][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.629632][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.629632][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.629632][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.630663][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.630663][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.632313][Remove Method] 'IntegerSequence(java.lang.Integer)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.632313][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.632313][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.632313][Decrease Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.632313][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.632794][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.631832][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.631832][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.631832][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.631832][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.631832][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.634100][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.635131][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.635131][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.636162][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.636162][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.637123][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.637123][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.637123][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.637123][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.637123][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.636505][Freeze Method] Convert 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.636505][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.636505][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.637536][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.Generator'
  - [-0.636895][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.637536][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.637536][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.637536][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.637536][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.637536][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.639185][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.639185][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.639185][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.639185][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.639185][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.640835][Remove Field] 'lastClass_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.640835][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.640835][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.640835][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.640835][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.640835][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.643103][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.643103][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.643103][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.644752][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.644111][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.644111][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.644111][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.644111][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.644111][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.645761][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.645280][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.646311][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.647342][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.648373][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.648373][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.649014][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.649014][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.648373][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.648373][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.649014][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.649014][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.649014][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.649495][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.649495][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.649495][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.649495][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.650526][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.650526][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.650526][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.652794][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.653824][Remove Method] 'values()' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.653824][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.653824][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.653824][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.653824][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.653824][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.653824][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.659185][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.659185][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.659185][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.659185][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.663928][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.663928][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.666196][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.666196][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.666196][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.666196][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.666196][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.668464][Remove Field] 'val$g1' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.668464][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.668464][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.668464][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.668464][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.670147][Remove Field] 'val$g2' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.670147][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.670147][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.670147][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.671178][Remove Method] 'remove(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.671178][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.671178][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.671178][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.673446][Remove Method] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.673446][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.673446][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.674477][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.674477][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.674477][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.674477][Decrease Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.674477][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.675508][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.676539][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.676539][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.677570][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.677570][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.677570][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.677570][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.677570][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.677080][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.677570][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.677570][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.677570][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PACKAGE'
  - [-0.677570][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.677570][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.677570][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.677570][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.679838][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.681487][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.683755][Remove Method] '<init>(uk.co.jezuk.mango.collections.MapFactory$1)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.683755][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.683755][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.683755][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.686024][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.687673][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.687673][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.686693][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.686693][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.686693][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.688961][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.688961][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.688961][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.690610][Remove Method] 'LessThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.690610][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.691632][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.691632][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.692632][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.691632][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.691632][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.691632][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.691632][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.691632][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.691632][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.691632][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.691632][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.692632][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.692632][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.692632][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.692632][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.692632][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.692632][Decrease Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.692632][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.692632][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.692632][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.692632][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.692632][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.692632][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.692632][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.693663][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.693663][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.693663][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.693663][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.693663][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.693663][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.693663][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.693663][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.693663][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.693663][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.694694][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.694694][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.694694][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.694694][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.694694][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.695725][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.findNext() into uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.695725][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.695725][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.695725][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.695725][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.695725][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.695725][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.695725][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.695725][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.695725][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.696756][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.696256][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.696256][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.696256][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.696756][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.696756][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.696756][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.696756][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.696756][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.696756][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.699642][Remove Method] 'Method(java.lang.Class,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.698642][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.698142][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.699173][Remove Method] '<init>(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.699173][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.699173][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.699173][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.699173][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.697173][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.699173][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.699173][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.699673][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.699673][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.699673][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.699673][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.701323][Remove Field] 'argType_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.701323][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.700323][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.700323][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.704447][Remove Method] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.704447][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.707952][Remove Method] '<init>(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.707333][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.707333][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.706333][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.704684][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.704684][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.704065][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to static 
  - [-0.705096][Remove Method] '<init>(java.lang.Object,java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.705096][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.706096][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.707746][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.708777][Inline Method] uk.co.jezuk.mango.Adapt.verifyReturnType(java.lang.reflect.Method,java.lang.Class) into uk.co.jezuk.mango.Adapt.wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)
  - [-0.708777][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.708777][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.708777][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.708777][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.708777][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.710426][Remove Field] 'obj_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.709807][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.709807][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.709807][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.712694][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.714344][Remove Field] 'val$obj' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.715374][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.714874][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.714874][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.716524][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.next(uk.co.jezuk.mango.iterators.ZipIterator) into uk.co.jezuk.mango.iterators.ZipIterator.next()
  - [-0.716524][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.717555][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.717555][Remove Class] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.718586][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.719617][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.720648][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.720648][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.720648][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.721679][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.721679][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.721679][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.721679][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.721679][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.721679][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.721679][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.723947][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.724978][Inline Method] uk.co.jezuk.mango.Predicates.Any(java.util.Iterator) into uk.co.jezuk.mango.Predicates.Any(java.util.Collection)
  - [-0.725978][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.726978][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.726978][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.725978][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.725978][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.724328][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer)
  - [-0.723328][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.723328][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.724328][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.724328][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.723709][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.723709][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.723709][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.723043][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.723043][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.727167][Remove Method] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.727167][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.727167][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.729435][Remove Method] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.730435][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.730435][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.731428][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.731428][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.730407][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.729387][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.729387][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.727737][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator)
  - [-0.728768][Inline Method] uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.Any.createuk.co.jezuk.mango.unarypredicates.Any()
  - [-0.728768][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.728768][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.728768][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.728768][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.731036][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.730526][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.730526][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.731546][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.731546][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.732057][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.732057][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.731438][Freeze Method] Convert 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.732459][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.732459][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.732459][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.733489][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.733489][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.734455][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.734976][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.734976][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.736007][Remove Method] 'findPosition(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.736007][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.736007][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.737038][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.737038][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.737038][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.737038][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.737038][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.738069][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.738069][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.738069][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.738069][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.738069][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.738069][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.738069][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.740955][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.740955][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.740955][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.740955][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.742605][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.742605][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.742084][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.742084][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.744352][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.746522][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.745904][Freeze Method] Convert 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.745904][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.748172][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.748172][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.748172][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.748172][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.748172][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.748172][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.748172][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.748172][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.748172][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.747477][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.747477][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.747477][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.748172][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.747130][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.747130][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.746512][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.745470][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.745470][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.745470][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.747119][Remove Method] 'createuk.co.jezuk.mango.Functions()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.748161][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.748161][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.748161][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.749811][Remove Method] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.749116][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.749116][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.749116][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.749116][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.749116][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.749116][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.749116][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.749116][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.749116][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.749116][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.749116][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.749116][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.749116][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.749116][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.749116][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.749116][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.749116][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.750766][Remove Method] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.752415][Remove Method] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.753457][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.753457][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.754488][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.753869][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.753869][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.755519][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.next(uk.co.jezuk.mango.iterators.StringIterator) into uk.co.jezuk.mango.iterators.StringIterator.next()
  - [-0.755519][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.757168][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.758818][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.759512][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.759512][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.761780][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.761780][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.761780][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.762475][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.763169][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.763169][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.763169][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.763169][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.763169][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.763169][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.763169][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.763169][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.763169][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.763169][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.762475][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.762475][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.760391][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.762475][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.762475][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.761856][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.762550][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.762550][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.762550][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.762550][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.763581][Remove Method] 'remove(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.763581][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.763581][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PUBLIC'
  - [-0.762887][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.762887][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.763581][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.763581][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.763581][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.763581][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.763581][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.763581][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.764612][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.764612][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.764612][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.764612][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.765643][Remove Method] 'remove(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.765643][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.765643][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.765643][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.765643][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.765643][Decrease Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.765643][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.765643][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.766674][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.767705][Remove Method] 'find(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.767705][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.767705][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.768736][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.767694][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.767694][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.767694][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.767694][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.767694][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.767694][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.767694][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.767694][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.767694][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.767694][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.767694][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.769344][Remove Method] 'EqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.770375][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.770375][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.770375][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.772643][Remove Method] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.772643][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.772643][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.773684][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.774715][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.774715][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.775746][Remove Method] 'count(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.775746][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.775746][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.775746][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.775746][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.776777][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.776777][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.776777][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.776777][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.776777][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.776777][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.776777][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.776777][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.779045][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.779045][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.779045][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.779045][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.779045][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.780695][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.780695][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.780695][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.781726][Remove Method] 'findPosition(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.782757][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.782757][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.782757][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.782757][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.782138][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.783788][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.784818][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.784818][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.784818][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.786468][Remove Method] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.787445][Remove Field] 'val$methodName' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.787445][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.787445][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.787445][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.787445][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.787445][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.787445][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.787445][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.787445][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.787445][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.787445][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.787445][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.788476][Remove Method] 'values()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.787412][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.787412][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.789062][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.790126][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.790126][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.790126][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.789416][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.789416][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.789416][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.789416][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.789416][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.789416][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.790126][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.790126][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.790126][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PUBLIC'
  - [-0.791156][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.791156][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.791156][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.791156][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.791156][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.791156][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.791156][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.791156][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.791156][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.789029][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.789029][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.787965][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.787965][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.787965][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.787965][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.787965][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.787965][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.790093][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.791156][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.791156][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.791156][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PACKAGE'
  - [-0.791156][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.794043][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.792979][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.791330][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.791330][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.790266][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.790266][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.790266][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.791915][Remove Method] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.791915][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.790852][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.789202][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.790233][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.794357][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.794357][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PACKAGE'
  - [-0.794357][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.793293][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.793293][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.793293][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.793293][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.791165][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.791165][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.789516][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.791784][Remove Method] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.791784][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.791784][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.793911][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.795561][Remove Method] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.795561][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.795561][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.797210][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.798860][Remove Method] 'createuk.co.jezuk.mango.functions.Constant()' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.799924][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.800988][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.802051][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.802051][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.800988][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.800988][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.800988][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.800988][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.800988][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.805111][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.806761][Remove Method] 'GreaterThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.806761][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.805697][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.806761][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.807825][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.807206][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.806588][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to static 
  - [-0.806588][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.808237][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.808237][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.809301][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.809301][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.809301][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.809301][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.810950][Remove Method] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.810950][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.810950][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.810950][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.810950][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.810241][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.811272][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryPredicate'
  - [-0.811272][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.812303][Remove Method] 'unique(java.util.Collection,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.813334][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.812270][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.813334][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.812270][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.812270][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.812270][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.813920][Remove Method] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.813920][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.814983][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.814983][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.814983][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.814983][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.816014][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.816014][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.816014][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.816014][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.816014][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.817045][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.817045][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.818076][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.818076][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.819107][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.819107][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.819107][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.820138][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.820138][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.820138][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.821169][Remove Method] 'unique(java.util.Collection,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.821878][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.821878][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.821878][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.821169][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.821169][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.821878][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.821878][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.821878][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.821878][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.821878][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.821878][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.822909][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.822909][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.822909][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.821845][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.821845][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.821845][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.821845][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.823495][Remove Method] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.823495][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.823495][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.824559][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.825589][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.825589][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.825589][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.825589][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.827239][Remove Method] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.827239][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.827239][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.827239][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.828888][Remove Method] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.829836][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.829836][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PACKAGE'
  - [-0.829836][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.829836][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.832104][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.832104][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.833754][Remove Method] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.834671][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.834671][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.834671][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.834671][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.834671][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.835702][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.835702][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.835702][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.835702][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.835702][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.835702][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.835702][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.837351][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.837351][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.837351][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.837351][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.837351][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.837351][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.835702][Introduce Factory] for uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object)
  - [-0.835702][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.837351][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.836240][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.836240][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.836240][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.836240][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.837271][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.837271][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.838382][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.838382][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.838382][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.838382][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.838382][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.839413][Inline Method] uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object) into uk.co.jezuk.mango.generators.ConstantSequence.createuk.co.jezuk.mango.generators.ConstantSequence()
  - [-0.839413][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.840444][Remove Method] 'unique(java.util.Collection,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.840444][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.841327][Remove Field] 'value_' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.841327][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PUBLIC'
  - [-0.841327][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.841327][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.841327][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.842358][Remove Method] 'unique(java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.842358][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.842358][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.842358][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.841222][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.842358][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.841790][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.841790][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.841790][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.842358][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.841222][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.842358][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.842358][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.842358][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.842358][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.844008][Remove Method] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.842871][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.842871][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.844521][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.844521][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.846789][Remove Field] 'val$g' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.848229][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.849392][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.849392][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.847742][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.847742][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.847124][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.848155][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.846505][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.847536][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.847536][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.847536][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.847536][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.846918][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to static 
  - [-0.846918][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.846918][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.846918][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.846918][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.846918][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.844592][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.844592][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.846918][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.846918][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.845268][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.846299][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.845718][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.846299][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.846299][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.846299][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.846299][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.846299][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.846299][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.846299][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.846299][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.846299][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.846299][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.846299][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.845718][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.846299][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.846299][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.846299][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.844650][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-0.843487][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.843487][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.844650][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.842324][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.842324][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.842324][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PACKAGE'
  - [-0.841549][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.841549][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.843874][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.846142][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.844980][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.844980][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.844398][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.844398][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.844398][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.844398][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.842749][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>()
  - [-0.842749][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.842749][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.842749][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.844398][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.845561][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.846592][Remove Method] 'True()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.846592][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.847623][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThan.createuk.co.jezuk.mango.binarypredicates.GreaterThan()
  - [-0.848654][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.849429][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.850010][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.850010][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.850010][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.850010][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.850010][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.849235][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.849235][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.850010][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.850010][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.850010][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.850010][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.847685][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.846522][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.848848][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.850010][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.850010][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.850010][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.850010][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.850010][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.850010][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.850010][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.850010][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.850010][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.850010][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.850010][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.850010][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.851041][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.852072][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections$MapBuilder'
  - [-0.852072][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.852072][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.852072][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.852072][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.852072][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.852072][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.852072][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.852072][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.853722][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.854753][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.854753][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.854753][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.854753][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.854753][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.854753][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.853977][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.854753][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.854753][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.854753][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.854753][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.854753][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.856402][Remove Method] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.854753][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.854753][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.854171][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.854171][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.855202][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.855202][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.855202][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.856233][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.857264][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.857845][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.857845][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.857845][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.857845][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.859495][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.858720][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.859495][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.858876][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.858876][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.858876][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.858876][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.857714][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.858876][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.858876][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.858876][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.858876][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.857714][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.856551][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.856551][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.856551][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.856551][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.856551][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.857714][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.857714][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.858876][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.858876][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.857714][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.857714][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.857714][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.857714][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.859363][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.859363][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.859363][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.858588][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.858006][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.860274][Remove Method] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.860274][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.860274][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.862543][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.864811][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.864811][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.865973][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.865973][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.864811][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.865973][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.865198][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.865198][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.865198][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.865198][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.866848][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.867623][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.868400][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.868400][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.869194][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.869789][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.869789][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.868599][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.868599][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.867408][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.867408][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.866218][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.866218][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.865424][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.866615][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.867805][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.867805][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.867011][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.868202][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.868995][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.868995][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.869789][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.869789][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.868995][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.869789][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.869789][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.869789][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.869789][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.869789][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.869789][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.869789][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.869789][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.868140][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.869171][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.868575][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.868575][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.869171][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.869171][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.869171][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.869171][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.870820][Remove Method] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.869171][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.869171][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.867980][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.869171][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.869171][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.870201][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.870201][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.871232][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunction'
  - [-0.871232][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.871232][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PACKAGE'
  - [-0.870637][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.870637][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.870637][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PACKAGE'
  - [-0.870637][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.871668][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.870874][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.871905][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.872699][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.872699][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.873294][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.873294][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.873294][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PUBLIC'
  - [-0.873294][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.873294][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.874944][Remove Method] 'OneOf(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.874944][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-0.874944][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.874349][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.874349][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.874944][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.874944][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PUBLIC'
  - [-0.874944][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.873753][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.873753][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.874944][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.875975][Remove Method] 'unique(java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.875975][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.875379][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.875975][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.875975][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.875975][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.874784][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.875975][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.875975][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.875975][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.875975][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.875975][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.875975][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.874325][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.874325][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.874325][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.874325][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.874325][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.875975][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.877006][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.878037][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.879067][Inline Method] uk.co.jezuk.mango.Adapt.wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.ArgumentMethod(java.lang.String,java.lang.Class)
  - [-0.879067][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.879067][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.879067][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.879067][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.879067][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.880717][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.880717][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.880717][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.880717][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.880717][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.880717][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.880717][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.880717][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.880717][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.881748][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.881748][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.881748][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.880557][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.879962][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.879962][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.879962][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.879367][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.879367][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.880557][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.880557][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.881153][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.881153][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.881748][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.881748][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.881748][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.881153][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.881153][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.881153][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.883421][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.885689][Remove Method] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.886720][Remove Method] '<init>(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.886720][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.886720][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.888369][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.889123][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.889123][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.889123][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.889123][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.889733][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.889733][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.889733][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.891383][Remove Method] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.891383][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.891383][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.891383][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.891383][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.891383][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.891383][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.890570][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.892219][Remove Method] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.891000][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.891000][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.891000][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.891000][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.891000][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.892649][Remove Method] 'createuk.co.jezuk.mango.Generators()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.894299][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.895518][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.895518][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.896549][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.896549][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.896549][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.896549][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.897362][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.897362][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.897362][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.897362][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.897362][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.896743][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.896743][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PUBLIC'
  - [-0.896743][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.896743][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.896743][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.896743][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.896743][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PACKAGE'
  - [-0.899630][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.898410][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.899630][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.899630][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.902517][Remove Method] 'Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.902517][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.901704][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.901704][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.898817][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate)
  - [-0.898817][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.898817][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.901085][Inline Method] uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Not.createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)
  - [-0.901898][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.901898][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.901898][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.901898][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.901898][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.901898][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PACKAGE'
  - [-0.901288][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.902319][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.901100][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.902319][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.902929][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.902929][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.904578][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.905303][Remove Field] 'seed_' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.905303][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.905303][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.905303][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.905303][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.905303][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.905303][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.904678][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.904678][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.904678][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.904678][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.904678][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.906328][Remove Method] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.907359][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.907359][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.907984][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.905484][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.907984][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.907984][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.907150][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.908181][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.906532][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object)
  - [-0.906532][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.906532][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.906532][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.906532][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.907563][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()
  - [-0.907563][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.908594][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.908594][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.908594][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.910243][Remove Method] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.911076][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.911754][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.911754][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.910899][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.910899][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.910899][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.910899][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.911754][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.910472][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.910472][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.912121][Remove Method] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.912121][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.913403][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.913403][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.913403][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.913403][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.914434][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.915465][Remove Method] 'TeeIterator(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.915465][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.915465][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.915465][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.917114][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.917114][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PACKAGE'
  - [-0.916260][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.916260][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.918528][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.918528][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.918528][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.919382][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.919382][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.920009][Remove Field] 'zip_' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.920009][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.920009][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.920009][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.915885][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.919390][Inline Method] uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nand.createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.918732][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.917416][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.917416][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.913293][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.911977][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.915482][Inline Method] uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Or.createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.915482][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.916798][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.916798][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.918114][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.918771][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.918771][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.918771][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PACKAGE'
  - [-0.919802][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.917171][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.917171][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.919802][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.919802][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.919802][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.919802][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.919802][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.918487][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.917609][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.916294][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.917609][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.917609][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.918925][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.919802][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.919802][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.918487][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.918487][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.918487][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.918487][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.919802][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.919802][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.918925][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.918048][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.918925][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.918925][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.919956][Inline Method] uk.co.jezuk.mango.algorithms.SymmetricDifference.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.SymmetricDifference.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.920833][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.919518][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.920833][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.920175][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.920175][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.920175][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.920833][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.920833][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.920833][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.919518][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.918202][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.918202][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.919851][Remove Method] 'StringIterator(java.lang.String)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.918974][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.920290][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.921606][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.922483][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.922483][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.922483][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.921167][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.921167][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.921167][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.923435][Remove Method] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.923435][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.923435][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.924751][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.924751][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.924751][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.924751][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.924751][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.924751][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.924751][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.923435][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.922119][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.923435][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.923435][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.922119][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.923435][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.923435][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.922777][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.924093][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.924751][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.923435][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.923435][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.923435][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.923435][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.924751][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.926400][Remove Method] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.926971][Remove Field] 'seed_' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.926971][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.926070][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.926070][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.927720][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Any()' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.927720][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.927720][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.928621][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.929131][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.928205][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.929131][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.929131][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.929131][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.930781][Remove Method] 'ArrayIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.930781][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.930781][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.930781][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.930781][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.930781][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.930781][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.930781][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.930781][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.930781][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.929392][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.929392][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.930781][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.930781][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.929392][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.929392][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.929392][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.931660][Remove Method] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.933049][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.933975][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.934901][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.934901][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.934901][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PUBLIC'
  - [-0.935827][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.936753][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.937679][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.936753][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.936753][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.937679][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.937679][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.937679][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.937679][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.939328][Remove Method] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.939328][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.939328][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PACKAGE'
  - [-0.941596][Remove Method] 'wrap(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.943246][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.944895][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.946545][Remove Field] 'iterator_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.948194][Remove Field] 'useCount_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.948194][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.946805][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.946805][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.948455][Remove Field] 'buffer_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.950104][Remove Field] 'valid_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.951493][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.951493][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PUBLIC'
  - [-0.952071][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.952071][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.952071][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.952071][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.952071][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.950422][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.951453][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.951453][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.951453][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.950024][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.951453][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.950500][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.950500][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.953387][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.954492][Remove Field] 'p_' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.953022][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.953022][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.954492][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.955473][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.954002][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.954002][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PUBLIC'
  - [-0.955473][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.954492][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.955473][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.955473][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.955473][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.955473][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.955473][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.955473][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.955473][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.954492][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.955473][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.955473][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.957122][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.957122][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.957122][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.957122][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-0.956142][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.954671][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.956142][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.957122][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.957122][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.957122][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.957122][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.957122][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.957122][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.957122][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.957122][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.957122][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.957122][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.957122][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.957122][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.957122][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.955652][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.955652][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.954181][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.955652][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.957122][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.957122][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.957122][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.955652][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.955652][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.957122][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.957122][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.957122][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.957122][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PACKAGE'
  - [-0.957122][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.956142][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.954671][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.956142][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.956142][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.959028][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.960009][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.958359][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.959390][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.957741][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.958772][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.958772][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.958772][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.958772][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.958772][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.958772][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.957301][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.958772][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.958772][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.955830][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.958772][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.958772][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PACKAGE'
  - [-0.958772][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.958772][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.961040][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.959569][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.961040][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.962071][Remove Method] 'unique(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.962071][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.962071][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.961090][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.962071][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.962071][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.962071][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.962071][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.962071][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.962071][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.962071][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.966194][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.964724][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.966194][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.966194][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PUBLIC'
  - [-0.968462][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.969527][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.969527][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.969527][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.969527][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.968517][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.969527][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.969527][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.969527][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.969527][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.969527][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.969527][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.973651][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.975919][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.976950][Remove Method] 'count(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.978599][Remove Method] 'BoundedIterator(java.util.Iterator,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.979589][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.979589][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.979589][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.981238][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.All()' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.981527][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.980452][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.981527][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.981527][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.981527][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.983177][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.983374][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.983374][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.981708][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.983374][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.983374][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.983374][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.983374][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.983374][Decrease Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.983374][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.981708][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.984594][Remove Method] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.986261][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.986261][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.986261][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.986261][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.986261][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.986261][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.985150][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.986261][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.985150][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.986261][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.984594][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.986261][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.986261][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.984594][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.986261][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.986261][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.986261][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.984594][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.986261][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.986261][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.984594][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.984594][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.986261][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.987292][Inline Method] uk.co.jezuk.mango.Collections.list(java.util.Iterator) into uk.co.jezuk.mango.Collections.list(java.util.Collection)
  - [-0.987292][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.985642][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.985642][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.986673][Inline Method] uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ChainIterator.createuk.co.jezuk.mango.iterators.ChainIterator()
  - [-0.986673][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.985007][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.985007][Decrease Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PUBLIC'
  - [-0.986673][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.986673][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.986673][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.985562][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.986673][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.986673][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.985562][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.986673][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.985007][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.983896][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.985562][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.986673][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.986673][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-0.985562][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.985562][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.985562][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.985562][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.986673][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.986673][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.986673][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.986673][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.986673][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.986673][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.985007][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.986673][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.985007][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.980883][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.980883][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.980883][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.984388][Inline Method] uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.And.createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.984388][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.986055][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.986055][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.986055][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.987704][Remove Method] 'BoundedIterator(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.987704][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PACKAGE'
  - [-0.988735][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Function'
  - [-0.988735][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.987624][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.987624][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.988735][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.988735][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.989766][Inline Method] uk.co.jezuk.mango.algorithms.Unique.match(java.util.Comparator,java.lang.Object,java.lang.Object) into uk.co.jezuk.mango.algorithms.Unique.execute(java.util.Iterator,java.util.Comparator)
  - [-0.988100][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.989766][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.989766][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.988117][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.989148][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.989148][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.988037][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.989148][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.989148][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.989148][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.989148][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.988037][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.989148][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.989148][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.989148][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.989148][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.989148][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.989148][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.989148][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.989148][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.989148][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.989148][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.989148][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.990797][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.990797][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.989686][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.991336][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.989669][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.989669][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.989669][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.989669][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.991336][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.992447][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.993478][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.979137][Remove Class] uk.co.jezuk.mango.algorithms.SymmetricDifference
  - [-0.979137][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.979137][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.979137][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.979137][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.979137][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.979137][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.978026][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.979137][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.979137][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.980804][Remove Method] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.979692][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.980804][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.980804][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.979137][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory.<init>()
  - [-0.980179][Inline Method] uk.co.jezuk.mango.collections.MapFactory.<init>() into uk.co.jezuk.mango.collections.MapFactory.createuk.co.jezuk.mango.collections.MapFactory()
  - [-0.980179][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.980179][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.980179][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.980179][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.980179][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.980179][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.980179][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.980179][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.980179][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.978512][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.980179][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.980179][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-0.980179][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.979067][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.979067][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.977956][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.979067][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.980179][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.980179][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.980179][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.980179][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.980179][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.980179][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.980179][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PUBLIC'
  - [-0.980179][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.980179][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.980179][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.980179][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.980179][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.980179][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.980179][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.980179][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.980179][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.980179][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.980179][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.979067][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.980179][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.980179][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.981220][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.981220][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.981220][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.980109][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.981220][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.981220][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.979554][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.981220][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.981220][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.981220][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.979554][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.981220][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.981220][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.979554][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.981220][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.980109][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.981220][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.981220][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.981220][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.981220][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.979554][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.979554][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.981220][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.981220][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.981220][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.981220][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.979554][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.979554][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.977887][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.977887][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.979554][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.979554][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.981220][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.979554][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.981220][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.981220][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.979554][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.983720][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.986012][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.986012][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.987679][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.988720][Remove Method] 'list(java.util.Collection)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.989460][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.989460][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.988311][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.988311][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.989977][Remove Method] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.991127][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.991127][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.991127][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.991127][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.989403][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.991127][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.991127][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.991127][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.989977][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.992894][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.992894][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.994044][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.995085][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.995085][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.995085][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.995085][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.995085][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.995085][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.995085][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.995085][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.996752][Remove Method] 'createuk.co.jezuk.mango.iterators.StringIterator()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.998419][Remove Field] 's_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.998423][Remove Field] 'pos_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.998423][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.998423][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.998423][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.998423][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.998423][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.998423][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PACKAGE'
  - [-0.999464][Remove Method] 'execute(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.997679][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.997679][Increase Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.999464][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.997679][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.999464][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.999464][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-1.001131][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.999345][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-1.001131][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-1.002798][Remove Field] 'index' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-1.002798][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.004464][Remove Field] 'useCount' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-1.004464][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.004464][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.004464][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.004464][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-1.004464][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-1.004464][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-1.006131][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-1.006012][Remove Field] 'item' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-1.006012][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-1.008304][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-1.009970][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.011637][Remove Field] 'end_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.013304][Remove Field] 'list_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.013304][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.013304][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-1.013304][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.013304][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-1.013047][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.013047][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-1.013047][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.013047][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-1.011765][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-1.013047][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-1.013047][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.013047][Increase Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-1.014714][Remove Method] 'createuk.co.jezuk.mango.collections.ListFactory()' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-1.014714][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.014714][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.014714][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.014714][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.014714][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.014714][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.014714][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.014714][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-1.014714][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.014304][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-1.011387][Introduce Factory] for uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function)
  - [-1.013679][Inline Method] uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function) into uk.co.jezuk.mango.iterators.TransformIterator.createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)
  - [-1.013679][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-1.015345][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-1.015345][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-1.015345][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-1.015345][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.015345][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.015345][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-1.017637][Remove Method] 'toIterators(java.lang.Object[])' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-1.017637][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.017637][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.014720][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate)
  - [-1.017012][Inline Method] uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Not.createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)
  - [-1.017012][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.017012][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.017012][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.017012][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-1.015012][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-1.017012][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-1.017012][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-1.017012][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-1.017012][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.017012][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.017012][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.017012][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.017012][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.017012][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.017012][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.017012][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.017012][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.017012][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-1.019929][Remove Method] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-1.022220][Remove Field] 'transform_' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-1.022220][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.022220][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-1.022220][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.022220][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-1.022220][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-1.022220][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.022220][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.022220][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.022220][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.022220][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.022220][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.022220][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-1.022220][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.020887][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.022220][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-1.022220][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-1.022220][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.023887][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.023887][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.025554][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.025554][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.027220][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.027220][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.027220][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.027220][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.027220][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.027220][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.026637][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-1.026637][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-1.029554][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-1.029400][Remove Field] 'p_' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-1.027226][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-1.029400][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-1.029400][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.029400][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.029400][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-1.029400][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-1.031066][Remove Method] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.032733][Remove Field] 'spent_' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.032733][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.032733][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.032733][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.032733][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.032733][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.032733][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.032733][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.032733][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.032733][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.032733][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.032733][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.032733][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.032733][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.032733][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.032733][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-1.032733][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-1.032733][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-1.032733][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.032733][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-1.034400][Remove Method] 'createuk.co.jezuk.mango.collections.MapFactory()' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-1.034400][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.034400][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.034400][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.034400][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.034400][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.034400][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-1.034400][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-1.034400][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.034400][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.035441][Remove Method] 'list(java.util.Iterator)' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-1.035441][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.035441][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-1.035441][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.035441][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.035441][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.035441][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.035441][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.035441][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.035441][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.035441][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.035441][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.035441][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PUBLIC'
  - [-1.035441][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.035441][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.035441][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.035441][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.035441][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.035441][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.035441][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.035441][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.035441][Remove Class] uk.co.jezuk.mango.Function
  - [-1.035441][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.035441][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.035441][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.035441][Remove Class] uk.co.jezuk.mango.Function
  - [-1.035441][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-1.037108][Remove Method] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.038775][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.038775][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.038775][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-1.038775][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PACKAGE'
  - [-1.041691][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-1.041691][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.041691][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.041691][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.039517][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.041691][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.041691][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-1.041691][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.041691][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.041691][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-1.041691][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.043358][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-1.043358][Remove Class] uk.co.jezuk.mango.Function

====== Run Result ======

* Name: Mango|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 82.01 seconds
  * Quality Gain: 0.684600
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.379076
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 2.2784
    * numOps: 4.3402
    * iFImpl: 0.4433
    * Dep_In: 2.4227
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 1.1649
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.4043
    * NumDesc: 0.0000

* Final Design:
  * Score: -1.063676
  * Possible Actions: 101
  * Applied Actions: 2876
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 0.3918
    * numOps: 0.3711
    * iFImpl: 0.4433
    * Dep_In: 0.4227
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 0.3814
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.6429
    * NumDesc: 0.0000

* Applied Actions:
  - [-0.380107][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.381138][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.381138][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.381138][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.382169][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.383200][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.384231][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.385262][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.385262][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.385262][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.385262][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.386293][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.385674][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.386292][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.386292][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.386292][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.387323][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.387323][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.387323][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.387323][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.387323][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.388353][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.389384][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.390415][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.390415][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.389797][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to static 
  - [-0.389797][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.389797][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.393920][Remove Method] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.393920][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.394951][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.394951][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.394951][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.395414][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.395414][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to static 
  - [-0.395414][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.395414][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.395414][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.396445][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.397476][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.397476][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.397476][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.398507][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.399538][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.399538][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.399538][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.399538][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400569][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.400569][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.400569][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.400569][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.401600][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.402631][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.403662][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.403662][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404693][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.404693][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.404693][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.405724][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.406755][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.407785][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.407167][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.407167][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.407167][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.408198][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.409124][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.409124][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.409124][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.409124][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.409124][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.409124][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.409124][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.409124][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.409124][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.410155][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.411186][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.412217][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.412217][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.412217][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.412834][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.412834][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.413865][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.414896][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.414896][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.414896][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.415927][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.415927][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.415927][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.415927][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.416958][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.416340][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.414488][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.414488][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.414488][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.414488][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.413870][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.412944][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.412944][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.412944][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.414796][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.414796][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.414796][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.415827][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.415208][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.415208][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.415208][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.415671][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.415671][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.415671][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.415671][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.415671][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.416288][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.416288][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.417214][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.418864][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.next(uk.co.jezuk.mango.iterators.ZipIterator) into uk.co.jezuk.mango.iterators.ZipIterator.next()
  - [-0.418864][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.418864][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.419895][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.419895][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.420926][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.421389][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.422420][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.422420][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.422420][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.423450][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.424481][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.425512][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.425512][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.425512][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.424895][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.424895][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.425821][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.426747][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.426747][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.426747][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.426747][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.427778][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.428395][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.428395][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.428395][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.428395][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.429426][Remove Method] 'find(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.429426][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.429426][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.429426][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.429426][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.430043][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.429117][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.429117][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.430043][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.430043][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.430043][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.430043][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.430043][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.430043][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.430043][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.430661][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.431278][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.430815][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.430815][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.431432][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.431432][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.431432][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.431895][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.432358][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.432358][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.432821][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.433284][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.432821][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.432821][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.432821][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.433284][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.433747][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.433747][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.433747][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.433747][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.433747][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.433747][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.433747][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.433747][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.433747][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.433747][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.437871][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.440139][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.440602][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.441065][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.441065][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.442096][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.442096][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.442559][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.442559][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.442559][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.440707][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.440707][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.442559][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.442559][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.441633][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.441633][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.441633][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.441633][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.442664][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.443590][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.443590][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.443590][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.443590][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.443590][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.443590][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.443590][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.444620][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.444620][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.444620][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.444620][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.444620][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.445651][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.445651][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.445188][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.445651][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.445651][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.445651][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.445651][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.445651][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.445651][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.445651][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.445651][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.445651][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.445651][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.445651][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.446682][Remove Method] 'Method(java.lang.Class,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.446064][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.446064][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.446064][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.446064][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.445601][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.445601][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.445601][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.446064][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.445445][Freeze Method] Convert 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.445445][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.444827][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.444827][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.444827][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.444827][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.445858][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.445858][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.445858][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.445858][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.445858][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.446889][Remove Method] 'values()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.446889][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.446889][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.447919][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.447919][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.447919][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.447302][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.446685][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.446685][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.446685][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.446685][Decrease Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.446685][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.446685][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.447716][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.446790][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.445140][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.445140][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.445140][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.445140][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.446171][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.446171][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.446171][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.445553][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to static 
  - [-0.444934][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to static 
  - [-0.444934][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.444934][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.445965][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.446891][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.446891][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.446891][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.447508][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.448126][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.448126][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.448126][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.448126][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.448126][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.449157][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.449157][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.449157][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.448231][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.448231][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.449157][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.449157][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.449157][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.449157][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.449157][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.449157][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.449157][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.452043][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.453074][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.453074][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.454105][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.454105][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.454105][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.454105][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.455754][Remove Method] 'Any(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.456785][Inline Method] uk.co.jezuk.mango.Predicates.Any(java.util.Iterator) into uk.co.jezuk.mango.Predicates.Any(java.util.Collection)
  - [-0.456785][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.456785][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.456785][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.455859][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.455859][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to static 
  - [-0.456785][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.456785][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.456785][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.456785][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.456785][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.456785][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.456785][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.456785][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.456785][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.458435][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.458435][Decrease Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.458435][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.459466][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.459466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.459466][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.459466][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.459466][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.459003][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.459003][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.459003][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.459003][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.459003][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.459003][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.459003][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.459003][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.459003][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.459003][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.459003][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to static 
  - [-0.461271][Remove Method] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.463539][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.463539][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.462920][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.464570][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.next(uk.co.jezuk.mango.iterators.StringIterator) into uk.co.jezuk.mango.iterators.StringIterator.next()
  - [-0.464570][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.464570][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.464107][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.465756][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.465756][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.465756][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.465756][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.465756][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.465756][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.465756][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.465756][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.465756][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.465756][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.465756][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.465756][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.468643][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.468643][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.470911][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.473179][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.474829][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.474829][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.474210][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to static 
  - [-0.474210][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.473591][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.473591][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.473591][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.473591][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.475859][Remove Method] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.478128][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.479158][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.479158][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.479158][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.479158][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.479158][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.479158][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.480189][Remove Method] 'containsValue(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.480189][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.480189][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.481220][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.481220][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.481220][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.482251][Remove Method] 'remove(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.481633][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.481633][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.481633][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.481633][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.481633][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.481633][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.481633][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.481633][Decrease Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.481633][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.481633][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.485756][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.485756][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.486787][Inline Method] uk.co.jezuk.mango.Adapt.wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.ArgumentMethod(java.lang.String,java.lang.Class)
  - [-0.487818][Remove Method] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.487818][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.487818][Decrease Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.487818][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.487818][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.487818][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.490086][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.490086][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.491117][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.490654][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.490654][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.490654][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.490654][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.490654][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.490654][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.490654][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.490654][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.490654][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.491685][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.491685][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.491685][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.491685][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.491685][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.491685][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.491685][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.492716][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.492716][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.492098][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.492098][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.492098][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.492098][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.493128][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.494159][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.494159][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.494159][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.495190][Remove Method] 'isEmpty()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.495653][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.495653][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.496116][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.496579][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.496579][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.496579][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.496579][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.496579][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.496116][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.495653][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.495653][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.496116][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.496116][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.496579][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.496579][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.496579][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.496579][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.496579][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.498847][Remove Method] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.498847][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.498847][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.498229][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.498229][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.498229][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.498229][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.497610][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.497610][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.497610][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.497610][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.497610][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.497610][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.499260][Remove Method] 'SingletonIterator(java.lang.Object)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.499260][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.499260][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.500291][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.500291][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.501940][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.501940][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.501940][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.501940][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.501940][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.502971][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.502971][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.502971][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.502971][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.502971][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.502971][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.502352][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to static 
  - [-0.502352][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.502352][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.503383][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.503383][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.504414][Remove Method] 'True()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.504414][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.504414][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.504414][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.504414][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.506064][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.506064][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.506064][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to static 
  - [-0.506064][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.505446][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.504828][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.504828][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.504828][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.505445][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.505445][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.505445][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.504827][Freeze Method] Convert 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.504827][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.504827][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.504827][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.505858][Remove Method] 'findPosition(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.505858][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.505239][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.505239][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.505239][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.505239][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.505239][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.506270][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.506270][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.506270][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.506270][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.506270][Decrease Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.506270][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.507301][Remove Method] 'remove(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.507301][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.507301][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.508332][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.508332][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.508332][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.507713][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.507713][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.507713][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.507713][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.507713][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.507250][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.507713][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.507713][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.507713][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.507713][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.507713][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.507713][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.507713][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.508744][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.508744][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.508744][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.508744][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.508127][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.508127][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.508127][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.508127][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.507510][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.507047][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.507047][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.507047][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.507047][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.507047][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.508696][Remove Method] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.508696][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.509727][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.510344][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.509726][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.510343][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.510806][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.510343][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.510343][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.510343][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.511374][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections$MapBuilder'
  - [-0.510757][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.510757][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.510757][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.510757][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.510757][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.510757][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.510757][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.510757][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.513643][Remove Method] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.513643][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.513643][Decrease Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.515293][Remove Method] 'EqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.515293][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.515293][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.515293][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.516324][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.516324][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.516941][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.516941][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.517404][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.517404][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.517404][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.517404][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.517404][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.521528][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.521528][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.521528][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.521528][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.522559][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.522559][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.522559][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.522559][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.522559][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.522559][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.522559][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.522559][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.522559][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.522559][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.522559][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.523590][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.524620][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.524620][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.524620][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.524620][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.524620][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.524002][Freeze Method] Convert 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.524002][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.524002][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.526270][Remove Method] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.526270][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.526270][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.528538][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.529569][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.529569][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.529569][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.529569][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.529569][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.528950][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.528950][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.528950][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.528950][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.528950][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.528950][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.528950][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.528950][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.528950][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.528950][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.530600][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.530600][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.530600][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.532249][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.533899][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.533899][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.533899][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.533899][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.533899][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.533899][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.533899][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.533899][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.533899][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.535548][Remove Field] 'lastClass_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.535548][Increase Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.534930][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.536579][Remove Method] 'ZipIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.537610][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.537610][Decrease Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.537610][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.536684][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.536684][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.536221][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.538489][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.539520][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.539520][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.540446][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.540909][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.540909][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.540291][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to static 
  - [-0.540291][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.540291][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.541322][Remove Method] 'clear()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.541322][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.542352][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.541734][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.541115][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.541115][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.541115][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.541115][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.541115][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.541115][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.541115][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.542765][Remove Method] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.541839][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.541839][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.541839][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.544107][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.544107][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.544107][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.544107][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.545033][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.545033][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.545033][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.544414][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.545445][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.545445][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.544827][Freeze Method] Convert 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.544827][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.544364][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.544827][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.542975][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.544827][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.544827][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.544827][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.544827][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.544827][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.544364][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.544364][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.545395][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.546426][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.546426][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.546426][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.546426][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.546426][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.546426][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.546426][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.546426][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.548075][Remove Method] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.548075][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.549106][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.findNext() into uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.550137][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.550137][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.550600][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.550600][Increase Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.550600][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.550600][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.550600][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.550600][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.550600][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.550600][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.551631][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.551631][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.551631][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.553280][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)
  - [-0.553280][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.552663][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.553280][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.553280][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.553280][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.553280][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.553280][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.553280][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.554311][Remove Method] 'values()' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.555342][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.555342][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.555342][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.555342][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.554724][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.554724][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.552872][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.552872][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.552409][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.552409][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.552409][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.554261][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.554724][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.554724][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.554724][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.554105][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.553488][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.553488][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.552869][Freeze Method] Convert 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.552869][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.552869][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.552869][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.552869][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.552869][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.553486][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.553486][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.553486][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.553486][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.553486][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.555136][Remove Method] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.554673][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.555136][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.555136][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.555136][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.555136][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.554517][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to static 
  - [-0.554517][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.554517][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.554517][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.554517][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.554054][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.554054][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.553128][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.553128][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.556015][Remove Method] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.556015][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.557665][Remove Method] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.557665][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.557665][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.558695][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.558695][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.559621][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.560084][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.560084][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.560084][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.560084][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.560084][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.561734][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.561734][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.561734][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.561734][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.561734][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.564002][Remove Method] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.563383][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.562765][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to static 
  - [-0.562765][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.562765][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.562765][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.562765][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.563796][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.563796][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.563796][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.563796][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.563796][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.563796][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.566064][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.566064][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.567713][Remove Method] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.567250][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.567713][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.567713][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.567713][Decrease Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.567713][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.567713][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.567713][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.567095][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to static 
  - [-0.567095][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.566476][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.566476][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.566476][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.566476][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.566476][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.566476][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.568126][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.fn(uk.co.jezuk.mango.generators.IntegerSequence) into uk.co.jezuk.mango.generators.IntegerSequence.fn()
  - [-0.568126][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.569157][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.568538][Freeze Method] Convert 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.569569][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.has(int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.get(int)
  - [-0.569569][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.569569][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.569569][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.571218][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.572249][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.572249][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.575136][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.575136][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.575136][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.577404][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.579672][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.579672][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.579672][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.581940][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.581477][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.580860][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.580860][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.582509][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.582046][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.582046][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.582046][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.582046][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.582046][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.582046][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.582046][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.582046][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.582046][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.582046][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.582046][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.583113][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.583113][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.583113][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.583113][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.584144][Remove Method] 'intersection(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.583526][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.583526][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.582897][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.583526][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.583998][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.583998][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.583998][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.583998][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.583998][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.585647][Remove Method] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.585647][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.585647][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.587297][Remove Method] 'ArrayIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.587297][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.587297][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.587925][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.587925][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.587307][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.587307][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.587779][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.587779][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.587779][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.587779][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.587779][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.587779][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.587779][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.587779][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.586835][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.586835][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.586835][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.587866][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.588810][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.588810][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.588810][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.588810][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.588810][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.588810][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.588810][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.588810][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.588810][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.588810][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.590459][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.590459][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.591490][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.592521][Remove Method] 'count(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.592521][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.592521][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.594170][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.594170][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.592284][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.592284][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.594170][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.595201][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.595201][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.594572][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.595201][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.595201][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.595201][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.596851][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.596851][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.599119][Remove Method] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.599119][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.600150][Remove Method] 'Method(java.lang.Object,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.599531][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to static 
  - [-0.598588][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.599531][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.599531][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.599531][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.599531][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.599531][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.601181][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.601181][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.601181][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.601181][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.601181][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.602212][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.603243][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.603243][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.603243][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.603243][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.603243][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.603243][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.603243][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.602299][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.602299][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.602299][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.603243][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.603243][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.603243][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.603243][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.604892][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.604892][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.604892][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.604892][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.604892][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.604892][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.604263][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.604263][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.604263][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.604892][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.603949][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.604892][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.602005][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.604273][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.604273][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.603330][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.604980][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.604980][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.605923][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.605923][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.605923][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.607572][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.607572][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.607572][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.607572][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.607572][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.607572][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.607572][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.609222][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.611490][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.611490][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.611490][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.612565][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.612565][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.613596][Inline Method] uk.co.jezuk.mango.Predicates.OneOf(java.util.Iterator) into uk.co.jezuk.mango.Predicates.OneOf(java.util.Collection)
  - [-0.614627][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.613986][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.613986][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.613986][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.613986][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.616254][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.616254][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.616254][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.616254][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.616254][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.616254][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.617903][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.617903][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.619553][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.619072][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.620103][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.621133][Remove Field] 'val$methodName' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.621787][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.621168][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.621659][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.620009][Introduce Factory] for uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String)
  - [-0.621040][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()
  - [-0.621040][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.621040][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.621040][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.619391][Introduce Factory] for uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String)
  - [-0.620421][Remove Method] 'count(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.621452][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.622483][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()
  - [-0.622483][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.624751][Remove Method] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.624133][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to static 
  - [-0.624133][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.620009][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.623514][Inline Method] uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nor.createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.623514][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.625164][Remove Method] 'ReverseIterator(java.util.List)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.625164][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.625164][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.625164][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.625164][Decrease Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.625164][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.624183][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.623565][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.623565][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.623565][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.621915][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.621915][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.621915][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.621915][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.621915][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.621915][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.622946][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.622946][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.622328][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.622328][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.622328][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.622328][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.622328][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.622328][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.622328][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.622328][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.626451][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.628101][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.628101][Decrease Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.629132][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.630163][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.630163][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.630163][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.630163][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.631194][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.631194][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.632843][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.633874][Remove Method] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.634854][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.634854][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.634854][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.634854][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.634854][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.634854][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.634854][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.634364][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.634364][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.634854][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.634854][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.634854][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.634854][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.633874][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.634854][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.634854][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.634854][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.634854][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.634854][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.635885][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.635885][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.635885][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.636916][Remove Method] 'findPosition(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.636916][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.635936][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.635936][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.635936][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.635936][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.635936][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.635936][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.635936][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.635282][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.635282][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.636313][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.637294][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.637294][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.637294][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.637947][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.637947][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.637947][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.637947][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.637947][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.640834][Remove Method] 'Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.640834][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.640834][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.640344][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.640344][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.640834][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.640834][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.640834][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.640834][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.640834][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.640834][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.640834][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.640834][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.640834][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.640344][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.640344][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.640834][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.640834][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.640834][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.640834][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.643102][Remove Method] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.643102][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.643102][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.642612][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.643102][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.643102][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.643102][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.643102][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.643102][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.643102][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.644133][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.644133][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.644133][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.645782][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.645782][Decrease Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.645782][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.645782][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.644802][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.644802][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.644802][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.644802][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.647070][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.647070][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.647070][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.647070][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.648719][Remove Method] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.648719][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.649750][Remove Method] 'find(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.649750][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.649750][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.650781][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.650781][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.650781][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.650781][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.651812][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.651812][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.651812][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.652843][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.652353][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.653384][Inline Method] uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)
  - [-0.653384][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.653384][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.655652][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.655652][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.655652][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.654672][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.656321][Remove Method] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.656321][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.659208][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.659208][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.661476][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.661476][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.663744][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.663744][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.663744][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.665393][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.667043][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.667043][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.668074][Inline Method] uk.co.jezuk.mango.Adapt.verifyReturnType(java.lang.reflect.Method,java.lang.Class) into uk.co.jezuk.mango.Adapt.Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)
  - [-0.668074][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.669105][Remove Method] '<init>(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.670754][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.670754][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.668793][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.668793][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.668793][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.667813][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.667813][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.667813][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.667813][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.667813][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.670081][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.670081][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.670571][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.670571][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.670571][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.672532][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.671551][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.673201][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)
  - [-0.674232][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.674232][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.674232][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.674232][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.675263][Remove Method] 'True()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.675263][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.676243][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.677224][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.677224][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.677224][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.678213][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.677213][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.678213][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.679213][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.679213][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.677563][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.675914][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.674264][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer)
  - [-0.675295][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.673646][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.674677][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.674677][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.674677][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.673677][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.674708][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.674708][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.675739][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.675739][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.675739][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.677388][Remove Method] 'GreaterThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.677388][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.677388][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.677388][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.679038][Remove Method] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.680038][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.681038][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.681038][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.681038][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.681038][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.681038][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.681038][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.681038][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.681038][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.681038][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.681038][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.681038][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.681038][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.682687][Remove Method] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.681687][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.682687][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.682687][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.682687][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.682687][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.685574][Remove Method] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.685574][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.685574][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.689697][Remove Method] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.688697][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.689697][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.689697][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.689697][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.692584][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.692584][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.692584][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.692584][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.692584][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.694852][Remove Method] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.695883][Remove Method] '<init>(java.lang.Object,java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.697533][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.697533][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.699182][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.699182][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.699182][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.700831][Remove Field] 'obj_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.700831][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.701862][Remove Method] '<init>(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.702893][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.703897][Remove Field] 'val$obj' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.703897][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.703897][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.703897][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.703897][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.703897][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.703897][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.705546][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.705546][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.705546][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.708433][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.707412][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.707412][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.707412][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.709680][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.711948][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.711948][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.711948][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.711268][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.710758][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.713706][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.713706][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.713706][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.715356][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.715356][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.715356][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.715356][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.715356][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.715356][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.716387][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.716387][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.716387][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.716387][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.717418][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.717418][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.717418][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.718438][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.718438][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.719404][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.719404][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.719924][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.719924][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.719924][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.719924][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.717038][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.717038][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.715996][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.718264][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1) into uk.co.jezuk.mango.collections.MapFactory$Builder.createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.719306][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.717656][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.717656][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.718687][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.718687][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.718687][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.718687][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.718687][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.718687][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.718687][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.718687][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.718687][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.718687][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.718687][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.722811][Remove Method] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.721769][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.725275][Remove Method] '<init>(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.725275][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.725275][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.725275][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.725275][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.727543][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.729811][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.729811][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.729811][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.732079][Remove Field] 'val$g' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.732079][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.733110][Remove Method] 'unique(java.util.Collection,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.734759][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.734759][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.734759][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.734759][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.734759][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.734759][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.734759][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.737646][Remove Method] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.739295][Remove Method] 'All(java.util.Iterator)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.740839][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.741903][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.742934][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.742934][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.741870][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.741870][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.741870][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.741870][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.742934][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.742934][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.743965][Remove Method] 'find(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.744996][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.744996][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.744996][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.746645][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.747676][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.747676][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.748707][Remove Method] 'unique(java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.748707][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.748707][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.750357][Remove Method] 'Constant(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.750357][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.750357][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.750357][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.750357][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.749738][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.749738][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.749738][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.750769][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.750769][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.750769][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.750769][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.750769][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.750769][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.752418][Remove Method] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.752418][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.752418][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.752418][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.752418][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.752418][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.752418][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.751355][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.751355][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.751355][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.753004][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.754654][Remove Field] 'argType_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.754654][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.754654][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.754654][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.754654][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.754654][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.754654][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.755717][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.756748][Remove Method] 'remove(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.757665][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.757665][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.757665][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.757665][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.757665][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.757665][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.757665][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.757665][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.757665][Decrease Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.757665][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.759315][Remove Method] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.760964][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.760964][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.760964][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.760964][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.762614][Remove Method] 'LessThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.762614][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.762614][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.762614][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.764882][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.765767][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.765767][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.765211][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.765767][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.764117][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.765148][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.765148][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.765148][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.767416][Remove Method] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.767416][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.767416][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.767416][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.767416][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.769684][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.769684][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.769684][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.768573][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.769684][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.769684][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.769684][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.769684][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.769684][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.769684][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.769684][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.769684][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.769684][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.769684][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.769684][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.769684][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.770715][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.770715][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.770715][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.770715][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.770715][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.770715][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.770715][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.770715][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.771746][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.771746][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.773395][Remove Method] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.773395][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.773395][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.773395][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.773395][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.774426][Inline Method] uk.co.jezuk.mango.algorithms.SymmetricDifference.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.SymmetricDifference.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.773686][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.773686][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.773686][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.773686][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.773686][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.773686][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.773686][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.773686][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.773686][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.773686][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.773686][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.773686][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.774426][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.774426][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.774426][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.774426][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.774426][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.774426][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.775457][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.775457][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.775457][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.773808][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.773808][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.776076][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.776076][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.776076][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.776076][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PACKAGE'
  - [-0.776076][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.777107][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.775996][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.775996][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.777107][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.777107][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.777107][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.778138][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.778138][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.778138][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.777582][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.777582][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.777582][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.778613][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.779169][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.779169][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.779169][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.777519][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.778550][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.778550][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.781437][Remove Method] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.781437][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.781437][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.781437][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.781437][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.781437][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.781437][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.781437][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.783086][Remove Method] 'StringIterator(java.lang.String)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.783086][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.783086][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.783086][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.781975][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.781975][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.781975][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.781975][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.784243][Remove Method] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.784243][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.785354][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.785354][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.787622][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.787622][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.787622][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.788653][Remove Method] 'test(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.789684][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.789684][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.789684][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.789684][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.789684][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.789684][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.789684][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.789684][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.789684][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.789684][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.789684][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.789684][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.789684][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.789684][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.791334][Remove Method] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.791334][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.791334][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.792365][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunction'
  - [-0.792365][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.792365][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.794014][Remove Method] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.794014][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.794014][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.794014][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.794014][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.794014][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.795045][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.795045][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.794489][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.794489][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.794489][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.794489][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.793934][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.794489][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.794489][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.794489][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.795045][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.795045][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.796694][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.796694][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.796694][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.796694][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.796694][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.796694][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.796694][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.796694][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.796694][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.796694][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.798344][Remove Method] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.799194][Remove Field] 'zip_' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.799194][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.799194][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.800225][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.800225][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.800225][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.801256][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.801256][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.801256][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.801256][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.801256][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.800119][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.800119][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.801256][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.802287][Remove Method] 'unique(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.802287][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.802287][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.802287][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.803936][Remove Method] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.803936][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.804967][Remove Method] 'unique(java.util.Collection,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.804967][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.804967][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.804967][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.804967][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.804967][Decrease Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.804967][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.804967][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.804967][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.803317][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-0.803317][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.803317][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.803317][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.803317][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.803317][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.804967][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.805998][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-0.805998][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.805998][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.805998][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.807029][Remove Method] 'values()' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.806271][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.804622][Introduce Factory] for uk.co.jezuk.mango.Functions.<init>()
  - [-0.804622][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.804622][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.805653][Inline Method] uk.co.jezuk.mango.Functions.<init>() into uk.co.jezuk.mango.Functions.createuk.co.jezuk.mango.Functions()
  - [-0.804516][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.804516][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.805653][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.805653][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.805653][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.806410][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.806410][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.806410][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.808060][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.808060][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.808060][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.808060][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.807492][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.808060][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.808060][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.808060][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.808060][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.808060][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.807302][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.808060][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.808060][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.808060][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.809091][Remove Method] 'values()' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.809091][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.809091][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.809091][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.809091][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.811359][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.811359][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.813008][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.All()' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.813008][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.814039][Remove Method] 'keySet()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.814852][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.814852][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.814852][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.813202][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-0.813202][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.813202][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.811553][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.811553][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.811553][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.811553][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.811553][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.811553][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.811553][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.813821][Remove Method] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.812658][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.814307][Remove Method] 'NotEqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.814307][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.815470][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.815470][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.816501][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.816501][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.816501][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.815726][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.815726][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.816501][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.816501][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.816501][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.816501][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.817532][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.817532][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.817532][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.817532][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.819182][Remove Method] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.820831][Remove Field] 'valid_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.822481][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.822481][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.822481][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.822481][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.822481][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.822481][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.826604][Remove Method] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.826604][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.828872][Remove Method] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.828872][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.828872][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.828872][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.828097][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.828097][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.828872][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.827710][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.828872][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.828291][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.825965][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.828291][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.828872][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.828872][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.828872][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.828872][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.828872][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.828254][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.828254][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PUBLIC'
  - [-0.828254][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.828254][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.828254][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.828254][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.828254][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.828254][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.828254][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.828254][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.828254][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.830522][Remove Method] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.829359][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.829359][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.829359][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.829359][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.830522][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.831553][Remove Method] 'remove(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.830390][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.830390][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.830390][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.831553][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.831553][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.831553][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.831553][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.831553][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.831553][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.831553][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.831553][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.831553][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.831553][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.831553][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.832584][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.832584][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.832584][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.832584][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.832584][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.832584][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.832584][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.832584][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.832584][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.832584][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.832584][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.833615][Remove Method] 'remove(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.832839][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.832839][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.832839][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PACKAGE'
  - [-0.835107][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.835883][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.835883][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.837532][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.837532][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.837532][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.837532][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.839800][Remove Method] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.839800][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.839800][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.839800][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.837475][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.839800][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.838637][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.839800][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.839800][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.839025][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.839800][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.839800][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.839800][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.839800][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.839800][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.843924][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.846192][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.845417][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.844254][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.844254][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.844254][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.843673][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.843673][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PACKAGE'
  - [-0.843673][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.842023][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory.<init>()
  - [-0.842023][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.843354][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.844545][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.845576][Inline Method] uk.co.jezuk.mango.collections.MapFactory.<init>() into uk.co.jezuk.mango.collections.MapFactory.createuk.co.jezuk.mango.collections.MapFactory()
  - [-0.845576][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.846607][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.847303][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.848334][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.848334][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.848334][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.848334][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.849147][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.849757][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.849147][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.849757][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.849757][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.845633][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.844820][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.844820][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.844820][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.844210][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.847715][Inline Method] uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Or.createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.847715][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.848528][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.849341][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.849951][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.849951][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PACKAGE'
  - [-0.852838][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.851618][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.851618][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.850805][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.847918][Introduce Factory] for uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function)
  - [-0.850187][Inline Method] uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function) into uk.co.jezuk.mango.iterators.TransformIterator.createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)
  - [-0.851406][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.851406][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PUBLIC'
  - [-0.852219][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.852219][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.852219][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.852219][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.853250][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.853250][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.853250][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.854063][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.854063][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.854876][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.855689][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.855689][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.855689][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.855689][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.855689][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.854469][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.855689][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.855689][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.856720][Remove Method] 'unique(java.util.Collection,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.856720][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.856720][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.856720][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.857751][Remove Method] 'findPosition(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.857751][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.857751][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.857751][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.857751][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.856101][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.857132][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.857132][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.857132][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.857132][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.857132][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.857132][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.857132][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.857132][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.857132][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.857132][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.858163][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.858163][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.858163][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.858163][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.858163][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.859813][Remove Method] 'createuk.co.jezuk.mango.Functions()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.859813][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.859813][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.859813][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.859813][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.857374][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.857374][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.856154][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.858593][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.858593][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.859813][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.859813][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.859813][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.859203][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.859203][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.861471][Remove Method] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.862284][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.863097][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.863910][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.864520][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.863707][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.864520][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.863300][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.862081][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.863300][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.864520][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.864520][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.866788][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.866788][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.866788][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.866788][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.866788][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.868437][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.868437][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.868437][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.870087][Remove Method] 'createuk.co.jezuk.mango.collections.MapFactory()' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.870087][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.871736][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.871736][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.874004][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.874004][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.875654][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.875654][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.875654][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.875654][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.875654][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.874434][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.874434][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PUBLIC'
  - [-0.875654][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.873215][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.875654][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.875654][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.874434][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.874434][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.875654][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.875654][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.875654][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.876685][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.Generator'
  - [-0.876685][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.876685][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.875872][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.875872][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.875872][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.876685][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.876685][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.875035][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.876066][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.876066][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.876066][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.876066][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.876066][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.877716][Remove Method] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.878542][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.878542][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.878542][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.878542][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.877292][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.878542][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.878542][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.878542][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.878542][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PUBLIC'
  - [-0.878542][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.878542][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.878542][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.877292][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.877292][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.877292][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.878542][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.878542][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.878542][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.878542][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.880810][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.880810][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.880810][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.880185][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.882453][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.883078][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.883078][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.883078][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.883078][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.885346][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.885346][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.885346][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.884096][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.884096][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.884096][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.885346][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.885346][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.885346][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.885346][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.884096][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.885346][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.885346][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.885346][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.883697][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.884728][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.884728][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.886377][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.886377][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.886377][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.885127][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.886377][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.885544][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.886377][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.886377][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.886377][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.886377][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.886377][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.888645][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.888645][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.888645][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.890295][Remove Method] 'BoundedIterator(java.util.Iterator,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.890295][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.890295][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.891325][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.891325][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.890492][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.891325][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.891325][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.891325][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.891325][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.891325][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.891325][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.891325][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.891325][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.889676][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.890707][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.890707][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.890707][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.892975][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.892975][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.891725][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.891725][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.892975][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.892975][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.897099][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.896474][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.897099][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.897099][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.897099][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.897099][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.898130][Remove Method] 'TeeIterator(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.898130][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.899161][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.899161][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.899161][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.899161][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.899161][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.899161][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.899161][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.899161][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.898536][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.899161][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.897911][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.899161][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.899161][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.897511][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.897511][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.898542][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.898542][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.900810][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.900810][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.900185][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.900185][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.900185][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.902453][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.904103][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.903269][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.904919][Remove Field] 'end_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.904919][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.906568][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.904068][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.906568][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.906568][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.905735][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.908003][Remove Method] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.908003][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PUBLIC'
  - [-0.908836][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.909670][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.910438][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.910438][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.911079][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.911079][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.911079][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.911079][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.911079][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PUBLIC'
  - [-0.911079][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.911079][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.912110][Inline Method] uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.911255][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.911255][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.912110][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.911255][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.911255][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.912110][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.912110][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.912110][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.912110][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.912110][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.912110][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.912110][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.913759][Remove Method] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.913759][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.913759][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.913759][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.913759][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.915409][Remove Method] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.916147][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.916147][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.916147][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.915489][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.915489][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.916147][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.916147][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.916147][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.914831][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.914831][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.914831][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.913182][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.913182][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.913182][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.913182][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PACKAGE'
  - [-0.913182][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.911866][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.913516][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.914831][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.914831][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.916147][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.917178][Inline Method] uk.co.jezuk.mango.binarypredicates.EqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.EqualTo.createuk.co.jezuk.mango.binarypredicates.EqualTo()
  - [-0.918209][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.918209][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.918209][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.918209][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.918209][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.919858][Remove Method] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.919858][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PACKAGE'
  - [-0.922126][Remove Method] 'wrap(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.925013][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.923697][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.923697][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.926663][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.926663][Remove Class] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.927970][Remove Field] 'buffer_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.927970][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.926619][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.927970][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.927970][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.927970][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.927970][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.927970][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.927970][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.927970][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.927970][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.926619][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.926619][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.926619][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.926619][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.928269][Remove Method] 'createuk.co.jezuk.mango.functions.Constant()' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.928269][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.929620][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.929620][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.930256][Remove Field] 'value_' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.930256][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.930256][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.932524][Remove Method] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.932524][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.932524][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.932524][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.931829][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.931829][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.932524][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.932524][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.930874][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.930874][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.931905][Inline Method] uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ChainIterator.createuk.co.jezuk.mango.iterators.ChainIterator()
  - [-0.931905][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.931905][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.931905][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.931905][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.931905][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.931905][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.931905][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.931905][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.931905][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.931905][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.931211][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.931905][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.930516][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.931905][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.931905][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.931211][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.931905][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.930516][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.929591][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.929591][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.930979][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.929591][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.929591][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.929591][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.929591][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.934951][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.934951][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.934951][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.934951][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.939694][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.943817][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.943817][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.946085][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.946085][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.946085][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PUBLIC'
  - [-0.946085][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.946085][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.948353][Remove Method] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.948353][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.948353][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.950621][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.950621][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.950621][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.952890][Remove Field] 'val$g1' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.954278][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.955449][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.955449][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.958335][Remove Method] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.958335][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.960603][Remove Field] 'transform_' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.962253][Remove Method] 'ChainIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.961300][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.957177][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.960682][Inline Method] uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.And.createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.961759][Remove Field] 'val$g2' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.962790][Remove Method] 'unique(java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.963771][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.963771][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.962790][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.963771][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.960829][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.963771][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.963771][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PACKAGE'
  - [-0.966039][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.965058][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.966039][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.966039][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PUBLIC'
  - [-0.966039][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.967019][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.967465][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.965950][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.967465][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.965950][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.967465][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.965950][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.967465][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.967465][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PACKAGE'
  - [-0.965950][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.965950][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-0.967465][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.966455][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.967486][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.967486][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.966476][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.966476][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.966476][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.967486][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.968496][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.968496][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.966981][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.968496][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.968496][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.968496][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.965466][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.965466][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.968496][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.968496][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.968496][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.968496][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.968496][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.968496][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.968496][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.968496][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.969527][Inline Method] uk.co.jezuk.mango.algorithms.Unique.match(java.util.Comparator,java.lang.Object,java.lang.Object) into uk.co.jezuk.mango.algorithms.Unique.execute(java.util.Iterator,java.util.Comparator)
  - [-0.968517][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.969527][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.969527][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.969527][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.969527][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PUBLIC'
  - [-0.969527][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.969527][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.969527][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PACKAGE'
  - [-0.972414][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.972414][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.972414][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PACKAGE'
  - [-0.974682][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.974682][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.976331][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.976331][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.974816][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.973301][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.973301][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.974816][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.974816][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.976331][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.977362][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.975847][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.975847][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.977362][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.977362][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.975713][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>()
  - [-0.976744][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThan.createuk.co.jezuk.mango.binarypredicates.GreaterThan()
  - [-0.976744][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.976744][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.976744][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.976744][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.976744][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.973857][Introduce Factory] for uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.972208][Introduce Factory] for uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object)
  - [-0.974476][Inline Method] uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SelectingIterator.createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.974476][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.975507][Inline Method] uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object) into uk.co.jezuk.mango.generators.ConstantSequence.createuk.co.jezuk.mango.generators.ConstantSequence()
  - [-0.975507][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.975507][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.973857][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-0.973857][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.974888][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.974130][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.974888][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.973373][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.973373][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.974888][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.974888][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.974888][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.974888][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.974888][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.974888][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.974888][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.974888][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.974888][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.974888][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.974888][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.974888][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.974888][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.974888][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.974888][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.974888][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.974888][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.974888][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PACKAGE'
  - [-0.977775][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.977775][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.977775][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PACKAGE'
  - [-0.980661][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.982311][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.982311][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.981301][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.982311][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.982311][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.982311][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.982311][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.982311][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.983960][Remove Method] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.983960][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.983960][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.986228][Remove Method] 'toIterators(java.lang.Object[])' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.986228][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.986228][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.985218][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.986228][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.986228][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.984713][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.986228][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.986228][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.985471][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.982440][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.985471][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.986228][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.986228][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.986228][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.986228][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.985471][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.986228][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.986228][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.986228][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.986228][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.986228][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.986228][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.985471][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.986228][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.984713][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.986228][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.986228][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.984579][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.985610][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.984095][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.985610][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.985610][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.985610][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.983960][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object)
  - [-0.983960][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.984991][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()
  - [-0.984991][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.984991][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.984991][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.984991][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.984991][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.983981][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.983981][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.986868][Remove Method] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.986868][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.989136][Remove Field] 'pred_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.990146][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.990517][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.990517][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PACKAGE'
  - [-0.991548][Remove Method] 'execute(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.989985][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.991548][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.991548][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.990506][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.990506][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.991548][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.991548][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.991548][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.991548][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.991548][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.991548][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.990506][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.990506][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.990506][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.992156][Remove Method] 'IntegerSequence(java.lang.Integer)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.993197][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.993197][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.989074][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.992579][Inline Method] uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.And.createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.992579][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.992579][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.990929][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.991960][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.991960][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.991960][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.991960][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.991179][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.991960][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.991960][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PACKAGE'
  - [-0.991960][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.992991][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryPredicate'
  - [-0.992991][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.992991][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.992991][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.994641][Remove Method] 'createuk.co.jezuk.mango.iterators.StringIterator()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.996290][Remove Field] 's_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.996579][Remove Field] 'pos_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.996579][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.996579][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.998847][Remove Method] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.998847][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.998847][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.998847][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.998847][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-1.000496][Remove Method] 'BoundedIterator(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-1.000496][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-1.002146][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-1.003177][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-1.003177][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-1.001564][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-1.003177][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-1.003177][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-1.003177][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-1.003177][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.004826][Remove Method] 'OneOf(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-1.006476][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-1.006476][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-1.005669][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-1.004056][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-1.005669][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-1.006476][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-1.006476][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.004863][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-1.006476][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-1.004863][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-1.006476][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-1.006476][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-1.006476][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-1.008125][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-1.008125][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.006512][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-1.008125][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-1.008125][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.007319][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-1.008125][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-1.008125][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.004899][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-1.004899][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-1.008125][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-1.008125][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-1.008125][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-1.008125][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.008125][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.008125][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.008125][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.008125][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-1.006512][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-1.008125][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-1.006512][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.008125][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.008125][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-1.005238][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate)
  - [-1.005238][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-1.007506][Inline Method] uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Not.createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)
  - [-1.008537][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-1.008537][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.008537][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-1.008537][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-1.008537][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.008537][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-1.005312][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-1.005312][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-1.005312][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.008537][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-1.008537][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-1.008537][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-1.008537][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.010187][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-1.011218][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-1.011218][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.011218][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-1.012867][Remove Method] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.014517][Remove Field] 'object_' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.011291][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-1.014517][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-1.014517][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.014715][Remove Field] 'spent_' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.014715][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-1.011828][Introduce Factory] for uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator)
  - [-1.014096][Inline Method] uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator) into uk.co.jezuk.mango.iterators.GeneratorIterator.createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)
  - [-1.013263][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-1.014096][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-1.012429][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-1.014096][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-1.012429][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-1.014096][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-1.014096][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-1.014096][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-1.012429][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-1.014096][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-1.014096][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.014096][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-1.014096][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PACKAGE'
  - [-1.016364][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-1.016364][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-1.018014][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-1.019663][Remove Field] 'useCount' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-1.021313][Remove Field] 'item' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-1.021410][Remove Field] 'index' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-1.017962][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-1.021410][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-1.021410][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-1.021410][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.021410][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-1.021410][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.021410][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-1.017962][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-1.021410][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-1.020548][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-1.021410][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-1.021410][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.019686][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-1.018037][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-1.019761][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-1.020792][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-1.020792][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-1.019642][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-1.020792][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-1.020792][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.019068][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-1.019068][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.019068][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-1.020792][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-1.020792][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.020792][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.022441][Remove Method] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-1.022441][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.022441][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-1.022441][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.022441][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PUBLIC'
  - [-1.022441][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.018993][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-1.022441][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-1.022428][Remove Field] 'seed_' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-1.021238][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.022428][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-1.021535][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-1.021535][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.021535][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.022428][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-1.022428][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-1.022428][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.022428][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.021535][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-1.022428][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-1.022428][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.022428][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.022428][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-1.020642][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-1.022428][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-1.022428][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-1.024078][Remove Method] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.025727][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.025727][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.025727][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.025727][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-1.024537][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-1.024537][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.025727][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-1.025727][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.025727][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-1.025727][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-1.025591][Remove Field] 'array_' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.025591][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-1.025591][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-1.025591][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.025591][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.029715][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-1.031983][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-1.032328][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-1.032328][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-1.032328][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-1.032328][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PACKAGE'
  - [-1.033977][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-1.035008][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Function'
  - [-1.035008][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.035008][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.035008][Remove Class] uk.co.jezuk.mango.Function
  - [-1.033726][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.035008][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-1.033085][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.035008][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.035008][Remove Class] uk.co.jezuk.mango.Function
  - [-1.035008][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.035008][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-1.036658][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.038307][Remove Field] 'iterator_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.039957][Remove Field] 'useCount_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.041606][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.041606][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.041606][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.041606][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.041606][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.039683][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-1.041606][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-1.041606][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.041606][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.041606][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.041606][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-1.041606][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-1.041606][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-1.041606][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-1.041606][Remove Class] uk.co.jezuk.mango.unarypredicates.OneOf
  - [-1.041606][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.041606][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.041606][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-1.041606][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.041606][Remove Class] uk.co.jezuk.mango.unarypredicates.OneOf
  - [-1.041606][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.041606][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-1.043255][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-1.043255][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-1.043255][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.043255][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-1.044905][Remove Method] 'createuk.co.jezuk.mango.Generators()' of type 'uk.co.jezuk.mango.Generators'
  - [-1.044478][Remove Field] 'seed_' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-1.043144][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.043144][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.044478][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-1.044478][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.044478][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.042478][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.044478][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.044478][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-1.044478][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.042478][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-1.044478][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-1.044478][Remove Class] uk.co.jezuk.mango.Function
  - [-1.044478][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.044478][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-1.044478][Remove Class] uk.co.jezuk.mango.unarypredicates.OneOf
  - [-1.043877][Remove Field] 'buffer_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.043877][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-1.046145][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-1.046145][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-1.046145][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.044756][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.044756][Remove Class] uk.co.jezuk.mango.unarypredicates.OneOf
  - [-1.046145][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-1.046145][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-1.046145][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.046145][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.046145][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.046145][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-1.049032][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-1.049032][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.049032][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.049032][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.048854][Remove Field] 'p_' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-1.048854][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.048854][Remove Class] uk.co.jezuk.mango.Function
  - [-1.048854][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.048854][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.048854][Remove Class] uk.co.jezuk.mango.Function
  - [-1.048854][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-1.048854][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.048854][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-1.046680][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-1.046680][Remove Class] uk.co.jezuk.mango.BinaryPredicate
  - [-1.046680][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-1.048854][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-1.048854][Remove Class] uk.co.jezuk.mango.BinaryPredicate
  - [-1.048854][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-1.048854][Remove Class] uk.co.jezuk.mango.unarypredicates.OneOf
  - [-1.048854][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.048854][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.048854][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-1.048854][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-1.048854][Remove Class] uk.co.jezuk.mango.BinaryPredicate
  - [-1.051741][Remove Method] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-1.051741][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.051741][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.050722][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-1.050722][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.050722][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.050722][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.050722][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-1.050722][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.050722][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.052372][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.054021][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.055671][Remove Field] 'end_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.055671][Remove Class] uk.co.jezuk.mango.BinaryPredicate
  - [-1.055671][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.055671][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.055671][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.055671][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.055671][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.055671][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.055671][Remove Class] uk.co.jezuk.mango.Function
  - [-1.055671][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.055671][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.055671][Remove Class] uk.co.jezuk.mango.BinaryPredicate
  - [-1.055671][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.055671][Remove Class] uk.co.jezuk.mango.BinaryPredicate
  - [-1.055671][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.055671][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.055671][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.055671][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.055671][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.055671][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-1.055671][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.055671][Remove Class] uk.co.jezuk.mango.BinaryPredicate
  - [-1.055671][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.055671][Remove Class] uk.co.jezuk.mango.Function
  - [-1.055671][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.054155][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-1.055671][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-1.055671][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.055671][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.055671][Remove Class] uk.co.jezuk.mango.BinaryPredicate
  - [-1.055671][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.055671][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.055671][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.055671][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.055671][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-1.055671][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.055671][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.055671][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.055671][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.055671][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.055671][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.055671][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.055671][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.055671][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.055671][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.055671][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.055671][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.055671][Remove Class] uk.co.jezuk.mango.Function
  - [-1.055671][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.055017][Remove Field] 'generator_' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-1.055017][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.055017][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-1.055017][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.055017][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.055017][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.055017][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.055017][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-1.055017][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.055017][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.055017][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.055017][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.055017][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.055017][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-1.055017][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.055017][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.055017][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.055017][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.055017][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.055017][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.055017][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.055017][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.055017][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-1.059140][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-1.061408][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-1.061408][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.061408][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.061408][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-1.061408][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.061408][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-1.061408][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.061408][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.061408][Remove Class] uk.co.jezuk.mango.Function
  - [-1.061408][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.061408][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.061408][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.061408][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.061408][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.061408][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.061408][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.061408][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.061408][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.061408][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.061408][Remove Class] uk.co.jezuk.mango.Function
  - [-1.061408][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.061408][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.061408][Remove Class] uk.co.jezuk.mango.BinaryPredicate
  - [-1.061408][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.061408][Remove Class] uk.co.jezuk.mango.unarypredicates.And
  - [-1.061408][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.061408][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.061408][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.061408][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.061408][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.061408][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.061408][Remove Class] uk.co.jezuk.mango.Function
  - [-1.061408][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.061408][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.061408][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.061408][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.061408][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.061408][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.061408][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.061408][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-1.061408][Remove Class] uk.co.jezuk.mango.unarypredicates.And
  - [-1.061408][Remove Class] uk.co.jezuk.mango.unarypredicates.And
  - [-1.061408][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.061408][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.061408][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.061408][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.061408][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.061408][Remove Class] uk.co.jezuk.mango.BinaryPredicate
  - [-1.061408][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.061408][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PACKAGE'
  - [-1.063676][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-1.063676][Remove Class] uk.co.jezuk.mango.Function

====== Run Result ======

* Name: Mango|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 86.81 seconds
  * Quality Gain: 0.662410
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.379076
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 2.2784
    * numOps: 4.3402
    * iFImpl: 0.4433
    * Dep_In: 2.4227
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 1.1649
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.4043
    * NumDesc: 0.0000

* Final Design:
  * Score: -1.041486
  * Possible Actions: 107
  * Applied Actions: 3051
  * Num Types: 96
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 0.5208
    * numOps: 0.3646
    * iFImpl: 0.4375
    * Dep_In: 0.5104
    * nesting: 0.1146
    * numCls: 11.2500
    * numFields: 0.4583
    * abstractness: 0.0278
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.5400
    * NumDesc: 0.0000

* Applied Actions:
  - [-0.380107][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.381138][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.382169][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.383200][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.384231][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.385262][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.386293][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.386293][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.385674][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to static 
  - [-0.385674][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.385674][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.386705][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.386705][Increase Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.386705][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.386705][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.386705][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.386705][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.386705][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.387736][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.388767][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.388767][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.388767][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.388767][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.388767][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.388767][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.388767][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.388767][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.388767][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.389798][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.390829][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.390829][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.391860][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.392891][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.393922][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.393922][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.394953][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.394953][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.395984][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.395984][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.395984][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.395984][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.395984][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.395984][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.395984][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.395058][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.394439][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to static 
  - [-0.395470][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.396501][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.397532][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.397532][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.397532][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.397532][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.397532][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to static 
  - [-0.397532][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.397532][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.397532][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.396913][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.396913][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.396913][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.399181][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.399181][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.399181][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.400212][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.400212][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.401243][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.401243][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402274][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.403305][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.403305][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404336][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.405367][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.405367][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.405367][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.405367][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406398][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.406398][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.406398][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.406398][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407429][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.408460][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.408460][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.408460][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.408460][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to static 
  - [-0.408460][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.408460][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.408460][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.409491][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.409491][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.409491][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.409491][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.410522][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.410522][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.409903][Freeze Method] Convert 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.409284][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.409284][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.409284][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.409284][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.409284][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.408666][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.408666][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.410315][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.409698][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.410729][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.410729][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.410266][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.411297][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.411297][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.411297][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.411297][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.411297][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.411297][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.411297][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.411297][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.411297][Decrease Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.412328][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.413359][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.413359][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.413359][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.414390][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.414390][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.414390][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.414390][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.415421][Remove Method] 'intersection(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.415421][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.415421][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.416452][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.415833][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.415833][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.415833][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.415833][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.415833][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.418101][Remove Method] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.418101][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.418101][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.420369][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.422019][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.next(uk.co.jezuk.mango.iterators.ZipIterator) into uk.co.jezuk.mango.iterators.ZipIterator.next()
  - [-0.422636][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.422636][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.422636][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.423667][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.423667][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.424593][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.425624][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.425624][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.426550][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.426550][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.424900][Introduce Factory] for uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object)
  - [-0.424900][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.424900][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.424900][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to static 
  - [-0.425931][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.425931][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.426962][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.426962][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.427993][Inline Method] uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object) into uk.co.jezuk.mango.generators.ConstantSequence.createuk.co.jezuk.mango.generators.ConstantSequence()
  - [-0.428919][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.428919][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.428919][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.428919][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.428919][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.428919][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.428919][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.427993][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.428919][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.428919][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.428919][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.429845][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.430462][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.431079][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.431079][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.431697][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.432314][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.432931][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.432931][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.432931][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.432931][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.432931][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.433548][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.434166][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.434166][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.434629][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.434629][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.434629][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.434629][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.434629][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.434629][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.435246][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.435246][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.435246][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.435246][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.435246][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.435246][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.435246][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.436277][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.436894][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.437357][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.437357][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.437357][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.437357][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.439625][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.439625][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.438699][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.438081][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.437618][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.437618][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.437618][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.438649][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.438649][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.438031][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.438957][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.437106][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.437106][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.437106][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.437106][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to static 
  - [-0.437106][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.437106][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.437106][Decrease Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.437106][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.437106][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.437106][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.438957][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.438957][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.438957][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.438957][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.438957][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.438957][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.438957][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.438957][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.438957][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.439988][Remove Method] 'find(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.439988][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.439988][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.439988][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.440451][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.440451][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.442719][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.443337][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.443337][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.443337][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.444368][Remove Method] 'isEmpty()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.444830][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.444830][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.444830][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.444830][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.444830][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.444830][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.444830][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.444830][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.444830][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.444830][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.444830][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.444830][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.445293][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.445293][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.445756][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.445756][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.445756][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.445756][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.446219][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.446682][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.447145][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.447608][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.447608][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.447608][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.448639][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.449102][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.449565][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.449565][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.449102][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.449102][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.449102][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.449102][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.447453][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.448484][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.448484][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.446632][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.446632][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.448484][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.448947][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.448947][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.448484][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.448947][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.448947][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.448947][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.448947][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.448947][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.448947][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.448947][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.448947][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.449977][Remove Method] 'findPosition(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.449977][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.449977][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.449977][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.449977][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.451008][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.451008][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.451008][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.451008][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.451008][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.452039][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.452039][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.453070][Remove Method] 'unique(java.util.Collection,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.453070][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.454101][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.Object)
  - [-0.454101][Decrease Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.454101][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.454101][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.454101][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.454101][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.454101][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.454101][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.454101][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.455132][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.455132][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.456163][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.456163][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.456163][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.457813][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.458843][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.458843][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.458843][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.458843][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PRIVATE'
  - [-0.459874][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.459874][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.458948][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.458485][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.458485][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.459516][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.460547][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.459621][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.459621][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.459621][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.459621][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.459003][Freeze Method] Convert 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.459003][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.458384][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.459310][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.460236][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.459619][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.459619][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.460082][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.460699][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.460236][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.460236][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.460699][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.460699][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to static 
  - [-0.460082][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.460082][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.460082][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.460082][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.460082][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.460082][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.460082][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.460082][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.460082][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.460082][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.459619][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.459619][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.460650][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.460650][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.460650][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.461113][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.461113][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.461113][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.463381][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.463381][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.463381][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.463381][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.463381][Decrease Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.463381][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.465649][Remove Method] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.465649][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.471010][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.471010][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.470391][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to static 
  - [-0.470391][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.470391][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.470391][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.470391][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.470391][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.470391][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.470391][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.470391][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.470391][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.470391][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.470391][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.475133][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.474207][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.474207][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.475238][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.475238][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.476164][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.476164][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.478432][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.478432][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.478432][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.478432][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.480700][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.480700][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.480237][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.479619][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to static 
  - [-0.479619][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.479002][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.479002][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.480033][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.480033][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.481063][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.481063][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.481063][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.481063][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.480445][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to static 
  - [-0.481062][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.481062][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.480444][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to static 
  - [-0.480444][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.480907][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.480907][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.480907][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.480907][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.480907][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.480907][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.480907][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.480907][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.480907][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.481938][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.481938][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.481938][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.482968][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.482968][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.481319][Introduce Factory] for uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class)
  - [-0.482350][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()
  - [-0.482350][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.482350][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.482350][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.482350][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.482350][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.482350][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.486474][Remove Method] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.486474][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.486011][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.486474][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.486474][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.486474][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.486474][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.486474][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.484824][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.484824][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.483175][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.482249][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.482249][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.481323][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.481323][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.480704][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to static 
  - [-0.480704][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.480704][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.483591][Remove Method] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.483591][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.483591][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.485240][Remove Method] 'IntegerSequence(java.lang.Integer)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.485240][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.485240][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.485240][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.486271][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.486271][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.485808][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.488076][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.489107][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.489107][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.489107][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.488489][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.488489][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.489415][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.489415][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.489415][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.489415][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.489415][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.489415][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.490446][Remove Method] 'Method(java.lang.Object,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.490446][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.490446][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.490446][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.491371][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.491371][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.491371][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.493639][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.493639][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.494670][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.494670][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.494670][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.494670][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.494670][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.494207][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.493589][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.493589][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.494620][Remove Method] 'OneOf(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.494001][Freeze Method] Convert 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.494001][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.494001][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.494464][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.494927][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.494927][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.494927][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.494927][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.494927][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.494927][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.496577][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.496577][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.496577][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.496577][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.496577][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.496577][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.496577][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.496577][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.496577][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.495958][Freeze Method] Convert 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.495032][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.495032][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.495032][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.495032][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.495958][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.495340][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.495340][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.496371][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.496371][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.495908][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.495908][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.495908][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.495908][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.496371][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.496371][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.495752][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.495752][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.495289][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.495289][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.495289][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.495289][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.496938][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.496938][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.496938][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.496938][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.496938][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.498588][Remove Method] 'EqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.498588][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.498588][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.499051][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.499051][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.499051][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.499051][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.499051][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.499051][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.499051][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.499051][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.501319][Remove Method] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.501319][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.501319][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.503587][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.503587][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.503587][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.503587][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.503587][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.503587][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.504618][Inline Method] uk.co.jezuk.mango.Predicates.OneOf(java.util.Iterator) into uk.co.jezuk.mango.Predicates.OneOf(java.lang.Object[])
  - [-0.505649][Remove Method] 'remove(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.505649][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.505186][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.505649][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.505649][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.505649][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.505649][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.505649][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.507917][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.507454][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.509103][Remove Method] 'LessThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.509103][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.509103][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.509103][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.510134][Remove Method] 'unique(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.510134][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.511165][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.511165][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.511165][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.512196][Remove Method] 'keySet()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.512196][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.512196][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.512196][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.513227][Inline Method] uk.co.jezuk.mango.Adapt.wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.ArgumentMethod(java.lang.String,java.lang.Class)
  - [-0.513227][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.514258][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.514721][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.514721][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.514721][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.514721][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.514721][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.514721][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.514721][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.514721][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PACKAGE'
  - [-0.514721][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.515752][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.514826][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.514826][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.514826][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.515752][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.515752][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.516783][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.516783][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.513896][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.513896][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.513896][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.513433][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.515701][Inline Method] uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Not.createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.515701][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.515083][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.514464][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.516114][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.next(uk.co.jezuk.mango.iterators.StringIterator) into uk.co.jezuk.mango.iterators.StringIterator.next()
  - [-0.515495][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to static 
  - [-0.515495][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.515495][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.515495][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.515495][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.514878][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.514878][Decrease Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.514878][Decrease Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.514878][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.514878][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.515909][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.516526][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.516526][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.516526][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.517557][Remove Method] 'put(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.517557][Decrease Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.517557][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.517557][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.517557][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.517557][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.517557][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.517557][Decrease Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.516631][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.517662][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.517662][Decrease Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.517662][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.517662][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.517662][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.517662][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.519312][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.get(int)
  - [-0.519312][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.518693][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to static 
  - [-0.518693][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.519619][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.519619][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.519619][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.519619][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.519619][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.519619][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.519619][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.522505][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.524774][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.524774][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.524774][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.524774][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.524774][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.524311][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.524311][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.524311][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.524311][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.524311][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.526424][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.526424][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.530548][Remove Method] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.530548][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.530085][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.530085][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.530085][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.530085][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.532352][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.532352][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.532352][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.532352][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.532352][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.532352][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.534620][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.534620][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.534620][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.534620][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.536269][Remove Method] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.536269][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.536269][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.536269][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.536269][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.536269][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.536269][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.536269][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.539156][Remove Method] 'Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.539156][Decrease Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.540805][Remove Method] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.540805][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.540805][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.540805][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.543073][Remove Method] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.543073][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.543073][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.545341][Remove Method] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.546991][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.findNext(uk.co.jezuk.mango.iterators.SkippingIterator) into uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.546991][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.545139][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.545139][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.546991][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.546991][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.548093][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.549124][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.549124][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.549124][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.549124][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.549124][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.550773][Remove Method] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.550773][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.551804][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.551804][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.551804][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.551804][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.552835][Remove Method] 'clear()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.552835][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.552835][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.553866][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.554897][Remove Method] 'unique(java.util.Collection,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.555928][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.556959][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.557990][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.557990][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.558462][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.558462][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.558462][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.558462][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.558462][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.558462][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.559493][Remove Method] 'containsKey(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.560524][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.560524][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.560524][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.561554][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.562026][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.562026][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.564294][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.564294][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.563351][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.564294][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.564294][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.565944][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.565944][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.565944][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.565944][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.565944][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.564294][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object)
  - [-0.564294][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.564294][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.564294][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.566562][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.566562][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.566562][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.567593][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()
  - [-0.567593][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.567593][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.567593][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.567593][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.569861][Remove Method] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.569861][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.569861][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.569861][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.569861][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.569861][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.569861][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.569861][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.568918][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.568918][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.571186][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.571186][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.572835][Remove Method] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.573866][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.573866][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.573866][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.574897][Remove Method] 'values()' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.574897][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.575841][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.575841][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.574191][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.573248][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.573248][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.573248][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.572776][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.573807][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.573807][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.573807][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.573807][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.573807][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.574838][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.575869][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.576900][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.576900][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.576900][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.576900][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.577931][Remove Method] 'count(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.577931][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.577931][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.577931][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.579580][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.579580][Decrease Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.579108][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.579108][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.579108][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.579108][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.579108][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.580139][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.580139][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.580139][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.580139][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.580139][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.580139][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.579668][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.579668][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.579668][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.581936][Remove Method] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.581936][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.584204][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.584204][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.583732][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.583260][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.584291][Remove Method] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.585322][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.585322][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.587286][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.588621][Remove Field] 'valid_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.588621][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.588621][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.588621][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.588621][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.588621][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.588621][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.590889][Remove Method] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.590889][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.591920][Remove Method] 'values()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.591920][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.591920][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.591920][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.591920][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.591920][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.591920][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.592951][Remove Method] 'entrySet()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.592951][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.592951][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.592951][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.592951][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.592951][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.593894][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.593894][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.593894][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.594838][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.594838][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.594838][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.597106][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.597578][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.597578][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.597578][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.597578][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.597578][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.597578][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.598609][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.598609][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.599639][Remove Method] 'findPosition(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.599639][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.599639][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.600670][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.601142][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.601142][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.601142][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.601142][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.603410][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.603410][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.603410][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.603410][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.603410][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.603410][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.605060][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.605531][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.605531][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.607799][Remove Method] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.606856][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.607799][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.607799][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.607799][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.607799][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.607799][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.606150][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.605678][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.605678][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.605206][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.605206][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.606856][Remove Method] 'Any(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.606856][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.606856][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.606856][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.606856][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.607887][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.608918][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.608918][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.608918][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.613042][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.614072][Inline Method] uk.co.jezuk.mango.binarypredicates.EqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.EqualTo.createuk.co.jezuk.mango.binarypredicates.EqualTo()
  - [-0.614072][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.614544][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.614544][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.614544][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.614544][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.614544][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.614072][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.614072][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.615103][Remove Method] 'values()' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.615103][Decrease Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.615103][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.616134][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.617165][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.617165][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.617165][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.617165][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.617165][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.619433][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.619433][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.619433][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.619905][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.619905][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to static 
  - [-0.620377][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.620377][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.620377][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.620377][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.620377][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.620377][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.620377][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.620377][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.620377][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.622645][Remove Method] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.622645][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.622645][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.622645][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.622645][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.622645][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.622645][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.624913][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.625944][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.625944][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.625944][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.626975][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.626346][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.626975][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.626975][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.626975][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.626975][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.628006][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.627062][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.626444][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.626444][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.626444][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.627387][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.627387][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.627387][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.629036][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.628565][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.628565][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.628565][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.628565][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.629596][Remove Method] 'find(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.630627][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.Object)
  - [-0.630627][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.631098][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.631098][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.631098][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.631098][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.631098][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.631098][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.631098][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.631098][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.631098][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.631098][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.631098][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.635222][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.634603][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to static 
  - [-0.634603][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.633975][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.633975][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.635005][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.635005][Decrease Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.635005][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.635005][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.635005][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.635005][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.635634][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.635634][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.634691][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.636340][Remove Method] 'Constant(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.636340][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.636340][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.637284][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.637284][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.639552][Remove Method] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.639552][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.639552][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.639552][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.640583][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.640583][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.641614][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.641614][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.641614][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.641614][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.642645][Remove Method] 'True()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.642645][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.642645][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.642645][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.643676][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.643676][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.646562][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.648830][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.648830][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.648830][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.651098][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.650627][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.650627][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.652276][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.652276][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.652276][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.652748][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.652748][Decrease Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.652748][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.652748][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.652748][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.652748][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.652748][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.652748][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.654397][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.654397][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.654397][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.655428][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.655428][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.655428][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.655428][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.655428][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.655428][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.655428][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.659552][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.659552][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.659552][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.662439][Remove Method] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.662439][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.662439][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.666562][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.666562][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.666562][Decrease Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.666562][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.668212][Remove Method] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.668212][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.667583][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.667583][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.669232][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.669232][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.669232][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.670263][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.670263][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.670263][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.670263][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.670263][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.671294][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.671294][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.671294][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.672325][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.672325][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.672954][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.672954][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.672954][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.674603][Remove Method] 'Any(java.util.Iterator)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.674603][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.675232][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.675232][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.675232][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.675232][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.675232][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.675232][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.674761][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.674761][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.674761][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.674289][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.674289][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.674761][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.674761][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.674761][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.675232][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.675232][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PACKAGE'
  - [-0.675232][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.675232][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.675232][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.677500][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.677500][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.677500][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.676871][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.676871][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.676871][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.676871][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.676871][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.676871][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.676871][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.676871][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.676871][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.676871][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.676871][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.677902][Remove Method] 'find(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.677902][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.677902][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.678933][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.678933][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.678933][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.678933][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.679964][Remove Method] 'Method(java.lang.Class,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.680995][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.680377][Freeze Method] Convert 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.680377][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.681408][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.681408][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.681408][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.681408][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.680779][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.680779][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.680779][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.680779][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.680779][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.680779][Decrease Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.681408][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.681408][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.681408][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.683676][Remove Method] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.683676][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.683676][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.683676][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.683676][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.683676][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.683676][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.685325][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.686356][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.687387][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.687387][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.687387][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.687387][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.689036][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.689036][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.690067][Remove Method] 'findPosition(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.689449][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.689449][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.689449][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.689449][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.689449][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.689449][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.690480][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.690480][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.690480][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.690480][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.690480][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.689536][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.689065][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.688593][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.688593][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.689536][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.689065][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.688593][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.689065][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.687415][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.687415][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.688446][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.688446][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.688446][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.688918][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.688918][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.688918][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.689389][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.689861][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.689861][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.689861][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.689861][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.690892][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.689243][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.690274][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.690274][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.689330][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.689330][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.690274][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.690274][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.690274][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.690274][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.690274][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.690274][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.690274][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.690274][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.692542][Remove Method] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.694191][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.694191][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.694191][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.693248][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.694191][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.694191][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.694191][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.695841][Remove Method] 'ChainIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.695841][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.693954][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.693335][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to static 
  - [-0.695222][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.696253][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.696253][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.695634][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to static 
  - [-0.695634][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.698521][Remove Method] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.698521][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.698521][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.698521][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.699552][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.699552][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.699552][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.699552][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.699552][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.700583][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.700583][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.700583][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.700583][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.702851][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.702851][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.702851][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.702851][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.703882][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.704913][Inline Method] uk.co.jezuk.mango.Adapt.verifyReturnType(java.lang.reflect.Method,java.lang.Class) into uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)
  - [-0.705944][Remove Method] '<init>(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.707593][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.707593][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.707593][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.705944][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.705944][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.706975][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.706975][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.706975][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.708624][Remove Method] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.708624][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.708624][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.708006][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.707062][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.708006][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.708006][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.707377][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.707377][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.707377][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.708006][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.708006][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.708006][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.707377][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.708006][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.708006][Decrease Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.708006][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.708006][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.708006][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.708006][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.708006][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.708006][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.708006][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.708006][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.708006][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.709036][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.709036][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.709036][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.709036][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.709036][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.709036][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.709036][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.709036][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.710686][Remove Method] 'createuk.co.jezuk.mango.Generators()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.711717][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.711717][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.711245][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.711245][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.710302][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.711245][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.711245][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.710773][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.711245][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.711245][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.711245][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.711245][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.711245][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.710616][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.710616][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.710616][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.710616][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.711245][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.711717][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.711717][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.711717][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.711717][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.711088][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.711088][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.711088][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.711717][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.711717][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.711717][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.711717][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.712748][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.713779][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.713779][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.713779][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.716047][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.715428][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.715428][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.717078][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.fn(uk.co.jezuk.mango.generators.IntegerSequence) into uk.co.jezuk.mango.generators.IntegerSequence.fn()
  - [-0.717078][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.717078][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.717078][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.717078][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.716134][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.716134][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.717078][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.717078][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.717078][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.717078][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.716449][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.717078][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.716134][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.717078][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.716449][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.717078][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.716134][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.716134][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.717165][Remove Method] 'remove(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.716694][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.717637][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.717637][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.717637][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.718668][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.719140][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.719140][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.719140][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.719140][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.719140][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.719140][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.719140][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.719140][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.719140][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.719140][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.719140][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.718668][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.719140][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.719140][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.719140][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.719140][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.719140][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.719140][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.719140][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.719140][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.719140][Decrease Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.719140][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.719140][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.720170][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.721201][Inline Method] uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)
  - [-0.722232][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.722232][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.722232][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.723882][Remove Method] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.726150][Remove Field] 'val$g1' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.724500][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.724500][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.722851][Introduce Factory] for uk.co.jezuk.mango.Functions.<init>()
  - [-0.721907][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.724176][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.724176][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.725875][Remove Field] 'val$g2' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.725875][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.726906][Inline Method] uk.co.jezuk.mango.Functions.<init>() into uk.co.jezuk.mango.Functions.createuk.co.jezuk.mango.Functions()
  - [-0.726906][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.726906][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.726906][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.726906][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.729174][Remove Method] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.730205][Remove Method] 'remove(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.731236][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.731236][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.731236][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.732197][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.732197][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.732197][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.732197][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.732197][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.732197][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.732197][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.733847][Remove Method] 'NotEqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.733847][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.737971][Remove Method] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.737971][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.737971][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.737971][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.737971][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.737971][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.737971][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.737330][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.740216][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.742484][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.744752][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.744752][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.744752][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.746402][Remove Method] 'GreaterThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.748051][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.747410][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.746769][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.745808][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.746839][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.746839][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.746358][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.748007][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.748969][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.749610][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.750251][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.750251][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.750892][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.751373][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.750754][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.749105][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer)
  - [-0.749105][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.749105][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.751991][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.751350][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.750389][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.748739][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>()
  - [-0.749770][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThan.createuk.co.jezuk.mango.binarypredicates.GreaterThan()
  - [-0.748809][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.748809][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.748809][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.748809][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.748809][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.749840][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.749840][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.750801][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.750801][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.750801][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.751763][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.751763][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.753412][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.754053][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.754053][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.754053][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.754053][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.754053][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.754053][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.754053][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.754053][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.754053][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.755703][Remove Method] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.755703][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.753780][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.755703][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.754741][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.754741][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.754741][Decrease Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.754741][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.754741][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.755703][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.755703][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.755703][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.755703][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.755703][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.757352][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.757352][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.759620][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.759620][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.759139][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.759139][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.760789][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.761857][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.761857][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.762347][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.762347][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.761367][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.760713][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.760713][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.759064][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.759064][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.759064][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.760095][Remove Method] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.760095][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.760095][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.761126][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.761126][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.762157][Remove Method] 'values()' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.763137][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.763137][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.763791][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.763791][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.763791][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.763791][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.763791][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.762810][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.763791][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.763172][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.763172][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.763172][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.763172][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.763172][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.763172][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.764203][Remove Method] 'True()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.764203][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.764203][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.763223][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.764203][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.763549][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.763549][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.764203][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.764203][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.764203][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.764203][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.764203][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.764203][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.764203][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.764203][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.764203][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.764203][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.765852][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.766883][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.766230][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.766883][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.766883][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.766883][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PUBLIC'
  - [-0.766230][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.765249][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.765249][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.763289][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.762670][Freeze Method] Convert 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.762670][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.762670][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.761690][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.763650][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.765300][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.765300][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.765300][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.765300][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.766280][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.766280][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.767311][Inline Method] uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.768292][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.768945][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.768945][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.768945][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.767965][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.768945][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.767965][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.768945][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.768945][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.768945][Decrease Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.768945][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.768945][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.770595][Remove Method] 'ZipIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.769976][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to static 
  - [-0.769976][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.769976][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.769976][Decrease Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.769976][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.768327][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.768327][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.768327][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.770595][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.771626][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.771626][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.771626][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.771626][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.771626][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.770645][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.771626][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.771626][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.771626][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.771626][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.771626][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.771626][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.769976][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.769976][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.769976][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.769322][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.770353][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.770353][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.770353][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.771384][Remove Method] 'unique(java.util.Collection,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.771384][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.770894][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.771548][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.772038][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.772038][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.773687][Remove Method] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.773687][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.773687][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.773687][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.773034][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.773687][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.773069][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.773069][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.772579][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.772579][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.772579][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.773610][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.773610][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.773119][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.773610][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.773610][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.773610][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.773610][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.773610][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.774100][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.774100][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.774100][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.774100][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.774100][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.774100][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.774100][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.778224][Remove Method] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.777570][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.777570][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.778224][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.781729][Remove Method] '<init>(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.781729][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.780748][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.779768][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.779768][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.779278][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.779278][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.779278][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PACKAGE'
  - [-0.782164][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.782164][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.784432][Remove Field] 'val$g' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.786700][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.788350][Remove Method] 'ReverseIterator(java.util.List)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.789974][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.791005][Remove Method] '<init>(java.lang.Object,java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.793155][Remove Field] 'val$obj' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.792155][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.793804][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.792804][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.792804][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.792804][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.793804][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.793804][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.793804][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.793804][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.796453][Remove Field] 'obj_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.796453][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.798103][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.798103][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.798103][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.798103][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PACKAGE'
  - [-0.799134][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.800165][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.800165][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.801196][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.801196][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.801196][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.799546][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.800577][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.800577][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.801577][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.801577][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.802587][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.802587][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.803608][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.803608][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.804612][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.804612][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.804612][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.804091][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.804612][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.804612][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.803918][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.803299][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.803299][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.803299][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.803299][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.802605][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.802605][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.802605][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.804254][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.804254][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.805904][Remove Method] 'StringIterator(java.lang.String)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.805904][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.805904][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.803820][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.805904][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.806935][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.807629][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.807011][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.807705][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.807705][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.807705][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.807705][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.807705][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.807705][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.807705][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.807705][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.809355][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.809355][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.809355][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.809355][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.809355][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.809355][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.809355][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.809355][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.809355][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.812241][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.814509][Remove Method] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.814509][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.814509][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.816777][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.816777][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.819045][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.821313][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.821313][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.819230][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.819230][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.821313][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.821313][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.821313][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.821313][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.821313][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.821313][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.822963][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.822963][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.824612][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.824612][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.826262][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.826262][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.827911][Remove Field] 'lastClass_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.829561][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.829561][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.830592][Remove Method] 'count(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.832241][Remove Method] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.833891][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.835540][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.835540][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.837808][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.839458][Remove Method] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.839458][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.840489][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunction'
  - [-0.841519][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.842550][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.842550][Decrease Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.841509][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.840467][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.838818][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.839859][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.839859][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.839859][Remove Class] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.838818][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.838123][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.839165][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.839165][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.840206][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.841237][Remove Method] 'remove(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.842268][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.843299][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.843299][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.843299][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.843299][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.844262][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.844262][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.844262][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.845194][Remove Field] 'val$methodName' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.845194][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.846095][Remove Field] 'argType_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.846095][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.846962][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.846962][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.847792][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.847792][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.847792][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.847792][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.848583][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.847393][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.847393][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.846202][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.847393][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.846599][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.847789][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.848583][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.848583][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.848583][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.847988][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.847988][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.850256][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.850256][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.851050][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.851050][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.851645][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.851645][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.851645][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.851645][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.851645][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.851645][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.850454][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.850454][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.849264][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.850454][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.850454][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.851645][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.851645][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.851645][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.851645][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.851645][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.851645][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.851645][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.851645][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.851645][Decrease Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.853913][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.853913][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.853913][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.853913][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.856181][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.856181][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.857212][Remove Method] 'unique(java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.857212][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.857212][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.857212][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.841042][Remove Class] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.839851][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.838661][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.838661][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.837470][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.836677][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.837867][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.839058][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.839058][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.840248][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.841290][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.842083][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.842083][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.842083][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.840893][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.840893][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.840893][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.839702][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.840893][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.838512][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.838512][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.838512][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.838512][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.838512][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.840893][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.840893][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.842083][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.842083][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.842083][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.842083][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.842083][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.842083][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.842083][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.842083][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.846250][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.846250][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.846250][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.846250][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.847292][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.847292][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.847292][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PACKAGE'
  - [-0.850208][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.850208][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.850208][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.850208][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.850208][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.852500][Remove Method] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.850833][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.850238][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.851280][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.851875][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.851875][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.852917][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.852917][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.852917][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.854583][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.854583][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.854583][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.854583][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.854583][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.854583][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.854583][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.854583][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.854583][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PUBLIC'
  - [-0.854583][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.854583][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-0.853393][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.854583][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.853393][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.854583][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.854583][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.854583][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.854583][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.854583][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.856250][Remove Method] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.856250][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.856250][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.855060][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.854266][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.855456][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.855456][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.856250][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.856250][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.857292][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.856498][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.855308][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.854514][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.855704][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.853323][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.853323][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.855704][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.854514][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.856181][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.857371][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.858165][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.856974][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.856974][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.855308][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.855308][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.855308][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.856498][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.857540][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.856349][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.857540][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.858333][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.858333][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PACKAGE'
  - [-0.858333][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.861250][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.861250][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.860655][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.860655][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.860655][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.862321][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.862321][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.864613][Remove Method] '<init>(uk.co.jezuk.mango.collections.MapFactory$1)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.864613][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.864613][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.864613][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.865655][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.865655][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.866696][Remove Method] 'unique(java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.867292][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.867292][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.867292][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.867292][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.868333][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.868333][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.868333][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.870000][Remove Method] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.870000][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.869206][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.870000][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.870000][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.869405][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.869405][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.870000][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.870000][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.868810][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.868810][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.870000][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.870000][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.870000][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.870000][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.871042][Inline Method] uk.co.jezuk.mango.algorithms.Unique.match(java.util.Comparator,java.lang.Object,java.lang.Object) into uk.co.jezuk.mango.algorithms.Unique.execute(java.util.Iterator,java.util.Comparator)
  - [-0.870248][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.870248][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.870248][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.871042][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.869851][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.869851][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.871042][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.871042][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.871042][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.871042][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.871042][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.870248][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.871042][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.871042][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.872708][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.872708][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.873750][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.872956][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.873750][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.871369][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.873750][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.873750][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.873750][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.872083][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.873125][Inline Method] uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ChainIterator.createuk.co.jezuk.mango.iterators.ChainIterator()
  - [-0.873125][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.873125][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.872331][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.871538][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.871538][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.872579][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.873373][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.873373][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.873373][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.873373][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.873373][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.875665][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.875665][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.875665][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.875665][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.877331][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.877331][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.877331][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.878998][Remove Method] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.879792][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.878998][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.879765][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.879765][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.878545][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.879765][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.877326][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.876106][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.878545][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.879765][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.879765][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.881431][Remove Method] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.878992][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.881431][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.879765][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator)
  - [-0.880806][Inline Method] uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.Any.createuk.co.jezuk.mango.unarypredicates.Any()
  - [-0.880806][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.880806][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.879587][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.879587][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PACKAGE'
  - [-0.882503][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.882503][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.881690][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.882910][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.882910][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.882910][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.883723][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.883723][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.884765][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.884765][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.884765][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.884765][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.884765][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.884765][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.884765][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.884765][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.884765][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.883952][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.884765][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.884765][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.884765][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.884765][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.884765][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.887056][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.887056][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.887056][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.887056][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.887056][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.888098][Inline Method] uk.co.jezuk.mango.algorithms.SymmetricDifference.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.SymmetricDifference.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.888098][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.886878][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.886878][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.888098][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.888098][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.888098][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.888098][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.887285][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.886472][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.887285][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.887285][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.887285][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.888952][Remove Method] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.888952][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.888952][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.888952][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.890618][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.890618][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.891660][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.890440][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.891660][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.891050][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.889831][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.888164][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.889383][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.888570][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.887757][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.888799][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.888799][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.889612][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.889612][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.889612][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.888393][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.889612][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.888393][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.888393][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.888393][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.889612][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.890425][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.891035][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.891035][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.891035][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.891035][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.891035][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.891035][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.891035][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.891035][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.891035][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PUBLIC'
  - [-0.891035][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.891035][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.892702][Remove Method] 'createuk.co.jezuk.mango.Functions()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.892702][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.892702][Decrease Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PUBLIC'
  - [-0.888535][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.888535][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.884368][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.883149][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.883149][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.883149][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.882539][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.886081][Inline Method] uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Or.createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.886081][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.889622][Inline Method] uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nand.createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.890842][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.891452][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.891452][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.891452][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PACKAGE'
  - [-0.891452][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.891452][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PACKAGE'
  - [-0.892493][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.891680][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.891680][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.892722][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.892722][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.893535][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.890618][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.890618][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.889399][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.889399][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.888789][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.891081][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.891081][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.892300][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.891081][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.891081][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.892300][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.892910][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.892910][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.892910][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.892910][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.892910][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.892910][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.891690][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.892910][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.891690][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.890471][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.891690][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.891690][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.893357][Remove Method] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.894577][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.894577][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.893764][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.894577][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.894577][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.894577][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.893357][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.892138][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.892138][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.893357][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.893357][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.894577][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.894577][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.895390][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.895390][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.896203][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.897016][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.895796][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.895796][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.895796][Decrease Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.895796][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.897016][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.897016][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.897016][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.897016][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.897016][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.897016][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.897016][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.898682][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.898682][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.899724][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.899724][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.899724][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.899724][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.899724][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.901391][Remove Method] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.902153][Remove Field] 'seed_' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.901528][Freeze Method] Convert 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.900694][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.901528][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.899028][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.901528][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.900278][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.897361][Introduce Factory] for uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.897361][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.899653][Inline Method] uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SelectingIterator.createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.899653][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.899653][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.899653][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.899653][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.900903][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.900903][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.900903][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.900903][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.900278][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.900278][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.900278][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.900278][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.900278][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.900903][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.900903][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.900903][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.901944][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections$MapBuilder'
  - [-0.901944][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.901944][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.901944][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.901944][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.901319][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.901319][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.901944][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.901944][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.901944][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PUBLIC'
  - [-0.901944][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.900694][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.900694][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.901944][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.901944][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.901944][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.901944][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.901944][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.901944][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.900694][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.899861][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.899861][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.898611][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.899861][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.897361][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.899861][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.901111][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.901944][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.901944][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.900694][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.901944][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.901319][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.901944][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.901111][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.901111][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.900486][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.901319][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.901944][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.901944][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.901111][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.901111][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.901944][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.899444][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.901944][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.901319][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.901319][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.901319][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.901944][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.901944][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.901944][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.901944][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.901111][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.901944][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.901944][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.901944][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.901944][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.901944][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.901944][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.906111][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.908403][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.907778][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.907778][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.909119][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.909119][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.909119][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.909119][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.909119][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.909119][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.910160][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.910160][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.910160][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.910160][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.908878][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.910160][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.909519][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.909519][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.909519][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.908237][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.908237][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.909904][Remove Method] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.911186][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.911827][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.910545][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.910545][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.911827][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.911827][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.911827][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PACKAGE'
  - [-0.911827][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.912869][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.912869][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.912869][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.912869][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.912869][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.912869][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.912869][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.912869][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.912869][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.912869][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.912228][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.912228][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.912869][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.912869][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.912869][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.912869][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.912869][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.912869][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.912869][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.911587][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.912869][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.911587][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.912869][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.912869][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.912869][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.912869][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.911587][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.910732][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.909450][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.910732][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.912014][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.912014][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.912014][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.910347][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.909065][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.910347][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.910347][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.912014][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.912014][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.913056][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.911389][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-0.911389][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.912032][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.910716][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.912032][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.910716][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.912032][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.912032][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.912032][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.912032][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.909401][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.912032][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.912032][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.912032][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.911155][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.912032][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.912032][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.912032][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.912032][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PACKAGE'
  - [-0.913074][Remove Method] 'execute(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.912197][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.913074][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.913951][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.913951][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.913951][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.913951][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.913951][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.913951][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.913951][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.913293][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.913951][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.913951][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.911034][Introduce Factory] for uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator)
  - [-0.913326][Inline Method] uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator) into uk.co.jezuk.mango.iterators.GeneratorIterator.createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)
  - [-0.912010][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.912010][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.912010][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.914302][Remove Method] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.915618][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.914740][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.915618][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.914302][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.913425][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.914740][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.914740][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.914740][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.914740][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.914740][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PUBLIC'
  - [-0.914740][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.914740][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.913863][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.913863][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.912548][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.912548][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.914214][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Any()' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.915530][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.916407][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.916995][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.916995][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.916995][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.916319][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.916995][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.914292][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.916995][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.916319][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.916995][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.916995][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.916995][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.916995][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.918662][Remove Method] 'All(java.util.Iterator)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.918662][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.918662][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.917761][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.918662][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.918662][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.918662][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.918662][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.918662][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.921578][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.921578][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.921578][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.922731][Remove Field] 'p_' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.922731][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.922731][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.922731][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.922731][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.922731][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.922731][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.922731][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.922731][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.922731][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.919954][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.922731][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.922731][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.922731][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.922106][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.922106][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.922106][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.922106][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.920718][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.920718][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.920718][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.922384][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.920995][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.922662][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.924051][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.924051][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.925718][Remove Method] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.927106][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.927569][Remove Field] 'zip_' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.927569][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.927569][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.927569][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.928611][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.928611][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.928611][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.927897][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.927897][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.928611][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.928611][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.928611][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.928611][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.927183][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.928611][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.928611][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.930278][Remove Method] 'ArrayIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.930278][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.928611][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.928611][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.928611][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.929653][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.929653][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.928224][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.925367][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.925367][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.925367][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.928224][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.929653][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.929653][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.928938][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.929653][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.928938][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.927272][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-0.928313][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-0.928313][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.929028][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.929028][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.929028][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.929028][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.929028][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.929028][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.929028][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.930694][Remove Method] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.929266][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.929266][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.929266][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.930694][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.930694][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.930694][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.930694][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.930694][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.930694][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.930694][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.930694][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.932986][Remove Method] 'toIterators(java.lang.Object[])' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.932034][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.932986][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.932986][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PACKAGE'
  - [-0.935278][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.933849][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.933849][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.933849][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.932897][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.934325][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.935278][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.935278][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.935278][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.935278][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.936944][Remove Method] 'createuk.co.jezuk.mango.functions.Constant()' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.936944][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.937337][Remove Field] 'value_' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.937337][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.937337][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.937337][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.937337][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.937337][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.937337][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.937337][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.937337][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.936356][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.937337][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.935866][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.937337][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.937337][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.937337][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.935866][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.937337][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.935670][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-0.936712][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.936712][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.935241][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.936712][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.936712][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.935241][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.936712][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.935731][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.936712][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.936712][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.936712][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.936712][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.935241][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.936712][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.936712][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.936712][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.936712][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.938378][Remove Method] 'createuk.co.jezuk.mango.iterators.StringIterator()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.940045][Remove Field] 's_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.940360][Remove Field] 'pos_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.940360][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.940360][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.942027][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.942027][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.942257][Remove Field] 'seed_' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.942257][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.942257][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.942257][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.942257][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.942257][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.942257][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.941476][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.942257][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.942257][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.942257][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.942257][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.942257][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PACKAGE'
  - [-0.942257][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.943299][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryPredicate'
  - [-0.943299][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.943299][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.943299][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.943299][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.943299][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.943299][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.943299][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-0.943299][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.943299][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.943299][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.947465][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.949757][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.948194][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.948194][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.949757][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.950520][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.950520][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.948907][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.950520][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.950520][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.947294][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.945681][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.948907][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.950520][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.950520][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.949713][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.949713][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.950520][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.950520][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.950520][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.950520][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.949444][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.950520][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.950520][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.950520][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.950520][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.950520][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.950520][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.950520][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.950520][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.950520][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.950520][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.950520][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.950520][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.950520][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.952186][Remove Method] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.952186][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.951111][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.950305][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.951111][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.951111][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.950036][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.948961][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.950036][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.951111][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.951111][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.950036][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.951111][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.952186][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.952186][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.953262][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.950036][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.953262][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.953262][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.951649][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.953262][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.953262][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.952455][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.952455][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PUBLIC'
  - [-0.953262][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.953262][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.953262][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.954928][Remove Method] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.956595][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.956667][Remove Field] 'array_' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.956667][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.956667][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PUBLIC'
  - [-0.956667][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.956667][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.956667][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.956667][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.956667][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.956667][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.956667][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.956667][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.956667][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.956667][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.956667][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.956667][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.956667][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.958958][Remove Method] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.957847][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.959514][Remove Method] 'BoundedIterator(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.960625][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.958958][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.960625][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.960625][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.959792][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.960625][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.960625][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.958958][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.960625][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.960625][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.960625][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.960625][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.959514][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.960625][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.960625][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.960625][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PACKAGE'
  - [-0.960625][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.962917][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.962917][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.962917][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.962917][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.962917][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.961806][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.961806][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.962917][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.962917][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.962917][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-0.962917][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.962917][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.962917][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.962917][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.965208][Remove Method] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.965208][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.965208][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.963542][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.963542][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.966458][Remove Method] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.968125][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.968125][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.968125][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.968125][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.968125][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.968125][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.968125][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.968125][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.968125][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.968125][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.968125][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.968125][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.968125][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.968125][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.968125][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.968125][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PACKAGE'
  - [-0.968125][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.969167][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Function'
  - [-0.969167][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.970208][Remove Method] 'TeeIterator(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.970208][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.970208][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.968542][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.970208][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.969097][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.970208][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.968542][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.970208][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.970208][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.968542][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.968542][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.970208][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.970208][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.971875][Remove Method] 'BoundedIterator(java.util.Iterator,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.970764][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.971875][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.971875][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.971875][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.971875][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.971875][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.974167][Remove Method] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.975833][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.975833][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.976944][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.976944][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PACKAGE'
  - [-0.979861][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.981528][Remove Field] 'item' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.983194][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.983194][Remove Class] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.986528][Remove Field] 'useCount' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.986643][Remove Field] 'index' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.986643][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.986643][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.986643][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.986643][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.986643][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.986643][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PACKAGE'
  - [-0.988934][Remove Method] 'wrap(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.988934][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.990601][Remove Method] 'SingletonIterator(java.lang.Object)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.990601][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.990601][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.990601][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.990601][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.990601][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.990601][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.990601][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.990601][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.990601][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.990601][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.990601][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.989452][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.988590][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.989739][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.990601][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.990601][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.990601][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.990601][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.990601][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.990601][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.990601][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.990601][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.990601][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.990601][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.990601][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.990601][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.990601][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.990601][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.990601][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.990601][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.990601][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.990601][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.993518][Remove Method] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.993518][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.993518][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.993518][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.993518][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.992368][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.992368][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.993518][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.993518][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.993518][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.993518][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.993518][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.993518][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.993518][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.993518][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.993518][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.993518][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.993518][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.993518][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.993518][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.993518][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.993518][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.993518][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.993518][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.993518][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.996434][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.998726][Remove Field] 'buffer_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.998730][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.998730][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.998730][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.998730][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.998730][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.998730][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.998730][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.998730][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-1.000397][Remove Method] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.000397][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-1.002063][Remove Field] 'spent_' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.002063][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.002063][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-1.002063][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.001944][Remove Field] 'object_' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.001944][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-1.001944][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.001944][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.001944][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.001944][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.001944][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-1.001944][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-1.001944][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-1.001944][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.001944][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.001944][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.001944][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-1.001944][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.001944][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.001944][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PACKAGE'
  - [-1.004236][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-1.004236][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-1.004236][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.004236][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.004236][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.004236][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-1.004236][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.004236][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-1.004236][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.007153][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-1.008194][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.008194][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.008194][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.008194][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-1.008194][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-1.008194][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-1.008194][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-1.008194][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.009861][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.011528][Remove Field] 'iterator_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.013194][Remove Field] 'buffer_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.014861][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.014861][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.014861][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.014861][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.014861][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.014861][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.014861][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.014861][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.014861][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.014605][Remove Field] 'useCount_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.014605][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.014605][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-1.014605][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.014605][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.014605][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.014605][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.014605][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.014605][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.014605][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.014605][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.014605][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-1.014605][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.014605][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.014605][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.014605][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.014605][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.014605][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-1.016896][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-1.016896][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-1.019813][Remove Method] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-1.022105][Remove Field] 'pred_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-1.022105][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-1.022105][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.022105][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.022105][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-1.022105][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-1.022105][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-1.022105][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.022105][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-1.022105][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-1.022105][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.022105][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.022105][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.022105][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-1.022105][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-1.023771][Remove Method] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-1.023986][Remove Field] 'generator_' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-1.023986][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.023986][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.023986][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.023986][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.023986][Remove Class] uk.co.jezuk.mango.iterators.SelectingIterator
  - [-1.023986][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.023986][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.023986][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.023986][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.023986][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.023986][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.023986][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.025653][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.027319][Remove Field] 'end_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.028986][Remove Field] 'list_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.028986][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.028986][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.028986][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.028986][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.028986][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.028986][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.028986][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.028986][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.028986][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.028986][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.028986][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.028986][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.028986][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-1.028986][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-1.030653][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.All()' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-1.030653][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.030653][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.030653][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.032319][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.033986][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.035653][Remove Field] 'end_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.035653][Remove Class] uk.co.jezuk.mango.iterators.SelectingIterator
  - [-1.035653][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.035653][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-1.035653][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.035653][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.035653][Decrease Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-1.035653][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-1.035653][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-1.035653][Remove Class] uk.co.jezuk.mango.unarypredicates.All
  - [-1.035653][Remove Class] uk.co.jezuk.mango.unarypredicates.All
  - [-1.035653][Decrease Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-1.035653][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.035653][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.035653][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.035653][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.035653][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.035653][Remove Class] uk.co.jezuk.mango.iterators.SelectingIterator
  - [-1.035653][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-1.035653][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-1.036694][Remove Method] 'list(java.util.Collection)' of type 'uk.co.jezuk.mango.Collections'
  - [-1.036694][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.036694][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.036694][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.036694][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.036694][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.036694][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.036694][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-1.036694][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.036694][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.036694][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.036694][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.036694][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.036694][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.036694][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-1.036694][Decrease Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-1.036694][Remove Class] uk.co.jezuk.mango.unarypredicates.All
  - [-1.036694][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.036694][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.036694][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.036694][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.036694][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.036694][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-1.037736][Remove Method] 'list(java.util.Iterator)' of type 'uk.co.jezuk.mango.Collections'
  - [-1.037736][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.037736][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.037736][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.037736][Remove Class] uk.co.jezuk.mango.unarypredicates.All
  - [-1.037736][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.037736][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.037736][Decrease Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-1.037736][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.037736][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.037736][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-1.038778][Remove Method] 'list(java.util.Iterator)' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-1.038778][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.038778][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.038778][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.038778][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.038778][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.038778][Remove Class] uk.co.jezuk.mango.iterators.SelectingIterator
  - [-1.038778][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.038778][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.038778][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.038778][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.038778][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.038778][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.038778][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.038778][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-1.038778][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.038778][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.038778][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.038778][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.038778][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.038778][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.038778][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-1.038778][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-1.038778][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.039819][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.Generator'
  - [-1.039819][Increase Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.039819][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.039819][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.039819][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.039819][Increase Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-1.041486][Remove Method] 'createuk.co.jezuk.mango.collections.ListFactory()' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-1.041486][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed

====== Run Result ======

* Name: Mango|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 78.43 seconds
  * Quality Gain: 0.678185
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.379076
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 2.2784
    * numOps: 4.3402
    * iFImpl: 0.4433
    * Dep_In: 2.4227
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 1.1649
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.4043
    * NumDesc: 0.0000

* Final Design:
  * Score: -1.057261
  * Possible Actions: 108
  * Applied Actions: 2817
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 0.5052
    * numOps: 0.3608
    * iFImpl: 0.4433
    * Dep_In: 0.4845
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 0.4536
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.5400
    * NumDesc: 0.0000

* Applied Actions:
  - [-0.378458][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.378458][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.379489][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.379489][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.379489][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to static 
  - [-0.380520][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.380520][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.381551][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.381551][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.381551][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.381551][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.381551][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.382582][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.383612][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.383612][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.383612][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.383612][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.383612][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.383612][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.383612][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.383612][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.383612][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.383612][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.383612][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.383612][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.383612][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.383612][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.384643][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.384643][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.384643][Increase Method Security] 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.385674][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.386705][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.386705][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.387736][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.388767][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.389798][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.Object)
  - [-0.390261][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.390261][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.391292][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.392323][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.392323][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.392323][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.392323][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.391704][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to static 
  - [-0.391704][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.391704][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.391704][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.392735][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.393198][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.394229][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.394229][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.394229][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.394229][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.394229][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.394229][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.394846][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.394846][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.394846][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.395772][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.396803][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.396803][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.396803][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.396803][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.397834][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.397216][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.395566][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.395566][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.395103][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.395103][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.396753][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.next(uk.co.jezuk.mango.iterators.ZipIterator) into uk.co.jezuk.mango.iterators.ZipIterator.next()
  - [-0.396753][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.396753][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.399021][Remove Method] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400052][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.401083][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.400465][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.401496][Remove Method] 'entrySet()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.401496][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.401496][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.401496][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.401496][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.401496][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.401496][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.403764][Remove Method] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404795][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.404795][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404795][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.405826][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.405826][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.406857][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.407888][Inline Method] uk.co.jezuk.mango.binarypredicates.EqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.EqualTo.createuk.co.jezuk.mango.binarypredicates.EqualTo()
  - [-0.407888][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.407888][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.407888][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.407888][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407888][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.407888][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.409537][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.410568][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.410568][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to static 
  - [-0.410105][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.411136][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.411136][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.412167][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.412167][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to static 
  - [-0.413198][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.413198][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.412272][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.412272][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.412272][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.412272][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.412272][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.412272][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.412272][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.412272][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.414540][Remove Method] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.415003][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.416034][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.417065][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.417065][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.418096][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.418096][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.418096][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.418096][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.419022][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.419022][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.419022][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.419639][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.419639][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.419639][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.420670][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.420670][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.421701][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.422732][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.423763][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.423763][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.423763][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.424380][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.424380][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.424380][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.424380][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.424380][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.424380][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.425411][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.423762][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.424793][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.424174][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.424174][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.424174][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.425205][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.425205][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.424279][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.424279][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.424279][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.424279][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.424279][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.424279][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.425310][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.426341][Remove Method] 'findPosition(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.426341][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.426341][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.426341][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.426341][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.427372][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.427372][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.427372][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.427372][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.428403][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.429434][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.429434][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.429434][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.431083][Remove Method] 'StringIterator(java.lang.String)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.430465][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to static 
  - [-0.430465][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.430465][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.430465][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.431496][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.432526][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.432526][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.432526][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.432526][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.432526][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.431601][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.432631][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.432631][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.432631][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.434900][Remove Method] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.434900][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.433974][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.435005][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.435467][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.435467][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.434850][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.434850][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.434850][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.434232][Freeze Method] Convert 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.434849][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.432997][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.432997][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.432997][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.432997][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.432997][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.432997][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.432997][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.434028][Remove Method] 'True()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.435880][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.435261][Freeze Method] Convert 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.435261][Decrease Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.435261][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.435261][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.436187][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.437218][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.437218][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.437218][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.437835][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.437835][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.437835][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.438866][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.438866][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.438866][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.437940][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.437940][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.437322][Freeze Method] Convert 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.437322][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.437322][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.439590][Remove Method] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.439590][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.439590][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.439590][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.439590][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.439590][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.439590][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.439590][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.439590][Decrease Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.439590][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.439590][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.439590][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.439590][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.439590][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.441858][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.441858][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.441858][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.441858][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.441858][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.441858][Increase Method Security] 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.444126][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.444126][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.445157][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.446188][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.447219][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.447219][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.447219][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.448250][Remove Method] 'putAll(java.util.Map)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.448250][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.449281][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.449281][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.449281][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.449281][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.449281][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.449281][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.450312][Remove Method] 'count(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.450312][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to static 
  - [-0.450312][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.452580][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.453611][Remove Method] 'find(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.453611][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.453611][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.454641][Remove Method] 'remove(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.454641][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.452992][Introduce Factory] for uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class)
  - [-0.452992][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.454023][Remove Method] 'unique(java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.454023][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.452373][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.452373][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.451755][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.451755][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.451755][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.451755][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.452786][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.452786][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.453817][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()
  - [-0.452891][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.452891][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.452891][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.452891][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.452891][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.453922][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.453922][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.453922][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.454953][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.454953][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.454953][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.454953][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.454953][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.454953][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.454953][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.455984][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.455984][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.455984][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.457015][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.457940][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.458866][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.458866][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.458866][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.459792][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.460718][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.461644][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.461644][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.461644][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.462675][Remove Method] 'values()' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.462675][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.462675][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.462675][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.463601][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.463601][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.463601][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.463601][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.463601][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.463601][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.467725][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.469993][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.469993][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.469993][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.469993][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.469993][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.469993][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.469993][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.469993][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.469993][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.471642][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.472673][Remove Method] 'Method(java.lang.Object,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.472673][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.472673][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.473704][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.473704][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.473086][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.473703][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.473703][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.473703][Decrease Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.474734][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.474734][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.475351][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.475351][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.475351][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.474425][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.474425][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.474425][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.473499][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.473499][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.473499][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.473499][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.473499][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.473499][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.474425][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.475351][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.475351][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.475351][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.475351][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.479475][Remove Method] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.479475][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.480506][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.480506][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.479580][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.480506][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.481123][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.480504][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to static 
  - [-0.479886][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.479886][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.480917][Remove Method] 'count(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.480917][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.480917][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.480917][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.481380][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.481380][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.481843][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.482306][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.482306][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.482769][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.482150][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.482150][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.482613][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.482613][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.482613][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.481994][Freeze Method] Convert 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.481994][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.483025][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.483025][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.483488][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.483488][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.483488][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.483488][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.483488][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.484519][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.484519][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.484519][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.484519][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.484519][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.485550][Remove Method] 'findPosition(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.485550][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.485550][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.486013][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.486476][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.486476][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.486476][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.486476][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to static 
  - [-0.486476][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.486476][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.486476][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.488744][Remove Method] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.488126][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to static 
  - [-0.488126][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.488126][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.488126][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.489157][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.489157][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.489157][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.489157][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.488694][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.488694][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.489157][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.489157][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.489157][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.489157][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.489157][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.489157][Increase Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.489157][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.489157][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.489157][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.489157][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.488694][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.490962][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.490343][Freeze Method] Convert 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.490806][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.490806][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.490806][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.490187][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.490187][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.490187][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.489725][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.490187][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.490187][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.490187][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.489262][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.489262][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.489262][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.488336][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.487873][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.486947][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.486947][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.487978][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.487978][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.487978][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.487978][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.487978][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.487978][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.487978][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.490864][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.490864][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.490864][Decrease Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.490864][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.493132][Remove Method] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.493132][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.495400][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.497668][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.499318][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.499318][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.499318][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.499318][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.500349][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.501380][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.502411][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.503442][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.503442][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.503442][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.501590][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.503442][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.503442][Decrease Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.503442][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.503442][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.505091][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.506122][Inline Method] uk.co.jezuk.mango.Predicates.OneOf(java.util.Iterator) into uk.co.jezuk.mango.Predicates.OneOf(java.util.Collection)
  - [-0.506122][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.506122][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.506122][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.506122][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.506122][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.506122][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.506122][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.506585][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.510709][Remove Method] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.511635][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.511635][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.514521][Remove Method] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.514521][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.513903][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.516171][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.516171][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.516171][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.516171][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.516171][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.516171][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.517820][Remove Method] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.517820][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.519470][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.519470][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.519470][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.520501][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.520501][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.523387][Remove Method] 'Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.524418][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.525344][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.526270][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.526270][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.525651][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.526682][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.526682][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.526682][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.526682][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.525756][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.525138][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.525138][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.525138][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.526169][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.526169][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.526169][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.526169][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to static 
  - [-0.526169][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.527095][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.527095][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.527095][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.528744][Remove Method] 'Any(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.528744][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.528744][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.527095][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object)
  - [-0.526477][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.527508][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()
  - [-0.527508][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.527508][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.527508][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.527508][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.531632][Remove Method] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.531632][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.535137][Remove Method] '<init>(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.534674][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.534674][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.534674][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.535705][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.535705][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.535705][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.536736][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.536736][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.537353][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.537353][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.537353][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.537816][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.537198][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.537198][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.537198][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.537198][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.537198][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.537198][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.538847][Remove Method] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.538847][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.538847][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.538847][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.538847][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.538847][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.538847][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.538847][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.537921][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.537921][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.537921][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.538952][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.538952][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.538952][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.538026][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.538026][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.538026][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.539057][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.539057][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.539057][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.540088][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.Object)
  - [-0.540088][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.541014][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.541014][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.541940][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.541940][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.541940][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.541940][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.541940][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.541940][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.541322][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.541322][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.541322][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.540703][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.540703][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.540703][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.540703][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.540240][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.540703][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.540703][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.540703][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.540703][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.540703][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.542352][Remove Method] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.543383][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.543383][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.544414][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.545032][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.545649][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.545649][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.545186][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.545803][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.545803][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.548690][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.548690][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.548690][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.548690][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.548690][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.548690][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.548690][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.548227][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.550495][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.549876][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to static 
  - [-0.549876][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.552144][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.552144][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.552144][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.552144][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.553794][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.553794][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.553794][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.555443][Remove Method] 'OneOf(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.555443][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.557093][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.557093][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.556476][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.556476][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.560599][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.562249][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.561786][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.561786][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.563435][Remove Field] 'lastClass_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.563435][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.563435][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.563435][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.563435][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.563435][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.565703][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.565703][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.565703][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.567353][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.568384][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.569415][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.569415][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.570446][Remove Method] 'size()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.569520][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.569520][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.570446][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.571063][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.571063][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.571680][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.571062][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.571679][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.571679][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.571679][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.572296][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.572296][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.572296][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.572296][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.573327][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.573790][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.574407][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.573481][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.574407][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.574407][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.574870][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.574870][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.574870][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.574252][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to static 
  - [-0.573789][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.574252][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.574252][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.574252][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.574252][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.574715][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.574715][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.574715][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.575746][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.575283][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.575283][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.575283][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.575283][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.576314][Remove Method] 'findPosition(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.576777][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.576777][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.577807][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.577807][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.577189][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.577189][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.577189][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.578220][Remove Method] 'intersection(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.578220][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.578220][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.578220][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.578220][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.578220][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.578220][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.578220][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.580488][Remove Method] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.580488][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.580488][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.580488][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.580488][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.580488][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.581519][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.583787][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.584965][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.584965][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.585996][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections$MapBuilder'
  - [-0.585996][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.585996][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.585996][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.587026][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.587026][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.588676][Remove Method] 'GreaterThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.589707][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.589707][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.589088][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.589088][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.589088][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.589088][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.589088][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.589088][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.589088][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.589088][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.589088][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.589088][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.589088][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.589088][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.589088][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.589088][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.589088][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.589088][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.589088][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.589088][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.589088][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.589088][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.588145][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.588145][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.588145][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.587673][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.588704][Remove Method] 'values()' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.589648][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.589648][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.587998][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.587998][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.587998][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.587055][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.587055][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.586426][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.587457][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.587457][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.587457][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.587457][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.588488][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.589519][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.589519][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.589519][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.588900][Freeze Method] Convert 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.589843][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.589843][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.592111][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.592740][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.593212][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.593212][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.593212][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.593212][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.593212][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.594243][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.593624][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.593624][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.593624][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.593624][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.593624][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.596511][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.598779][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.598779][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.601047][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.601047][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.602697][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.604346][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.604346][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.604346][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.604346][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.604346][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.606614][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.606614][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.607774][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.607774][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.608805][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.608805][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.608805][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.608805][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.607843][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.608874][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.609836][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.609836][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.608874][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.608874][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.608874][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.608874][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.611142][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.612173][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.613135][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.612516][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to static 
  - [-0.612035][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.612516][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.612516][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.612516][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.612516][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.614165][Remove Method] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.613547][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.613547][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.612906][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.613547][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.613547][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.613547][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.613547][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.613547][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.613547][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.613547][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.612585][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.611624][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.613273][Remove Method] 'Constant(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.613273][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.613273][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.613273][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.613273][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.613273][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.613273][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.614923][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.615954][Inline Method] uk.co.jezuk.mango.Predicates.All(java.util.Iterator) into uk.co.jezuk.mango.Predicates.All(java.util.Collection)
  - [-0.615954][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.616915][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.616915][Decrease Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.616915][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.617877][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.617236][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.617236][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.617877][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.617877][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.617877][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.618908][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.618908][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.618427][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.618427][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.618427][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.618427][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.618427][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.617946][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.617946][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.618427][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.618427][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.618908][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.618908][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.618908][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.618908][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.618908][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.619939][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.619939][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.619320][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.619320][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.618359][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.619320][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.619320][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.619320][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.620351][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.620351][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.617464][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.617464][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.617464][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.616823][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.615862][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.615862][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.618748][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.621017][Inline Method] uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Not.createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.621017][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.621017][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.622666][Remove Method] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.622666][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PRIVATE'
  - [-0.622666][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.622666][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.622666][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.623697][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.623697][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.623697][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.623697][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.623697][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.623697][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PACKAGE'
  - [-0.623697][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.623697][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.625965][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.627074][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.628105][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.629136][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.628646][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.629677][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.629186][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.629186][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.629186][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.630217][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.631198][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.631198][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.630217][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.630217][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.629237][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.629237][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.630886][Remove Method] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.631867][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.631867][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.632847][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.632847][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.632847][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.633501][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.633501][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.633501][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.633501][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.635150][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.635150][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.635150][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.636181][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.636181][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.636671][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.636671][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.636671][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.637702][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.637084][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to static 
  - [-0.637574][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.637574][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.637574][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.637574][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.637574][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.637574][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.637574][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.637574][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.638605][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.638605][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.637986][Freeze Method] Convert 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.637986][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.640254][Remove Method] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.640254][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.639274][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.639274][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.639274][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.640254][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.640254][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.640254][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.640254][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.641904][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.641904][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.641285][Freeze Method] Convert 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.641285][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.641285][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.641285][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.641285][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.641285][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.641285][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.642316][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.642316][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.642316][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.642316][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.642316][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.643347][Remove Method] 'True()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.643347][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.644378][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunction'
  - [-0.644378][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.644378][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.644378][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.644378][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.643724][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.642744][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.642744][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.643724][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.643724][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.643724][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.643724][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.644378][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.644378][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.644378][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.644378][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.644378][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.644378][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.644378][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.643888][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.643888][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.643888][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.643269][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.645537][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.645537][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.646568][Remove Method] 'values()' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.647058][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.647058][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.647058][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.647058][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.647058][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.646568][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.646568][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.646568][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.645915][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.646946][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.646946][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.647977][Remove Method] 'find(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.648630][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.649120][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.649120][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.649120][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.649120][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.648467][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.648467][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.650116][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.All()' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.650116][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.650770][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.650770][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.650770][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.650770][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.652419][Remove Method] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.652419][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.652419][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.652419][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.654069][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.654069][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.654069][Decrease Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.654069][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.654069][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.652419][Introduce Factory] for uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object)
  - [-0.652419][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.653450][Inline Method] uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object) into uk.co.jezuk.mango.generators.ConstantSequence.createuk.co.jezuk.mango.generators.ConstantSequence()
  - [-0.653450][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.653450][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.653450][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.655718][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.655718][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.657986][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.659017][Remove Method] 'get(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.659017][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.658364][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.659017][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.658037][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.657056][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.656566][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.656566][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.656566][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.655586][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.656566][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.656566][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.657597][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.657597][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.658578][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.658578][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.658578][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.658578][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.660227][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.659609][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.659609][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.659609][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.659609][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.659609][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.659609][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.661258][Remove Method] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.661258][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.662907][Remove Method] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.663888][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.663888][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.663888][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.663888][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.663398][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.663398][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.664429][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.664429][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.664429][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.665460][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.665950][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.666440][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.666440][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.666440][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.666440][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.668708][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.670357][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.next(uk.co.jezuk.mango.iterators.StringIterator) into uk.co.jezuk.mango.iterators.StringIterator.next()
  - [-0.669704][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.669704][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.670735][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.670735][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.670735][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.671388][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.671388][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.670770][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.670770][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.670770][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.670770][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.670770][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.670770][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.670770][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.670770][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.670770][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.670770][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.670151][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.670151][Decrease Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.670151][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.670151][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.669171][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.670820][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.669840][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.670871][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.671952][Remove Field] 'val$methodName' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.672952][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.672952][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.674601][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.findNext(uk.co.jezuk.mango.iterators.SkippingIterator) into uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.673601][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.673601][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.673601][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.673601][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.673601][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.674632][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.674632][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.674632][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.674632][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.673632][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.674663][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.675663][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.676663][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.677663][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.677663][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.678694][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.677694][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.678694][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.678194][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.678194][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.678194][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.678694][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.678694][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.678694][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.678694][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.677694][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.677694][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.678694][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.678694][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.678694][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.678694][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.678694][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.680344][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.680344][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.680344][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.680344][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.680344][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.682612][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.682612][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.682612][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.682612][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.682612][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.682612][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.682612][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.682612][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.682612][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.682612][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.682612][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.682612][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.682612][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.683642][Inline Method] uk.co.jezuk.mango.Adapt.wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)
  - [-0.683642][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.684673][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.684673][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.684673][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.684673][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.686323][Remove Method] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.686323][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.685323][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.685323][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.686972][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.687972][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.686972][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.686972][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.687972][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.687972][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.689003][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.689003][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.689003][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.689003][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.689003][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.690653][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.690653][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.690653][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.690653][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.690653][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.690653][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.690653][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.690653][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.690653][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.690653][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.690653][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.691684][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.691684][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.691684][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.690684][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.690684][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.691684][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.691684][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.690684][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.687797][Introduce Factory] for uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator)
  - [-0.687179][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to static 
  - [-0.689447][Inline Method] uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator) into uk.co.jezuk.mango.iterators.GeneratorIterator.createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)
  - [-0.690447][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.690447][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.693333][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.692833][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.691833][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.694101][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.693101][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.694101][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.694101][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.694101][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.696369][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.695869][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.698137][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.699787][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.699787][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.699787][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.699787][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.699787][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.699787][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.701436][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.702494][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.702494][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.702494][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.702494][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.702494][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.703514][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.703514][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.704569][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.704569][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.704569][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.703527][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.703527][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.703527][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.704569][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.704569][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.704569][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.704569][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.703874][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.704905][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.704905][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.704905][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.704905][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.704905][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.704905][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.704905][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.704905][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.702822][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.703853][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.705936][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.705936][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.707586][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.707586][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.707586][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.707586][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.709854][Remove Method] '<init>(uk.co.jezuk.mango.collections.MapFactory$1)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.711503][Remove Method] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.711503][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.712197][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.712718][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.713239][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.713239][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.713239][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.713239][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.713239][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.713239][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.713239][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.713239][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.713239][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.713239][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.713239][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.713239][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.713239][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.713239][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.714270][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.715301][Remove Method] 'find(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.715301][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.714259][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.714259][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.714259][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.714259][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.714259][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.714259][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.714259][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.715301][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.715301][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.715301][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.715301][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.715301][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.717569][Remove Method] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.718600][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.718600][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.718600][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.719631][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.719631][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.719631][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.719631][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.718589][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.719631][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.718936][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.718416][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.717895][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.717200][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.717200][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.717200][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.717895][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.717895][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.717895][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.718589][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.718589][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.719110][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.719110][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.719631][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.719631][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.719631][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.719631][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.719631][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.719631][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.719631][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.719631][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.721280][Remove Method] 'LessThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.721280][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.722930][Remove Method] 'EqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.722930][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.722930][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.722930][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.722930][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.722235][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.722235][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.724503][Remove Method] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.724503][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.724503][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.726771][Remove Method] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.726771][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.729040][Remove Method] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.727998][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.727379][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.727379][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.727379][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.728421][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.728421][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.728421][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.729115][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.729115][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.729115][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.730146][Remove Method] 'remove(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.730146][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.730146][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.730146][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.730146][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.730146][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.729105][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.729105][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.729105][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.729105][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.729105][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.729105][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.730754][Remove Method] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.732404][Remove Method] 'NotEqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.732404][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.732404][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.734053][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.735095][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.734400][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.735431][Remove Method] 'Method(java.lang.Class,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.735431][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.734737][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.734737][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.734737][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.734737][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.734737][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.736386][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.737417][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.738112][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.738112][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.738112][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.738112][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.739143][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.739143][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.739143][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.740174][Remove Method] 'unique(java.util.Collection,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.741204][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.741899][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.741899][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.741899][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.741899][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.741899][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.741899][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.744167][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.743473][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.743473][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.743473][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.743473][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.744167][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.744167][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.744167][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.744167][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.744167][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PACKAGE'
  - [-0.744167][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.746435][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.748703][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.750353][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.751383][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.751383][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.750689][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.750689][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.750689][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.754813][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.755507][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.755507][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.754889][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.754889][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.754889][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.754368][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.759729][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.764471][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.766739][Remove Field] 'val$g2' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.766739][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.766739][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.766739][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.766739][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.769007][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.769007][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.764883][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.768388][Inline Method] uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nand.createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.770047][Remove Field] 'val$g1' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.770047][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.772934][Remove Method] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.771870][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.771870][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.771338][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.772402][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.771692][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.771692][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.771692][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.771692][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.771692][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.771692][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.773342][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.774991][Remove Method] 'SingletonIterator(java.lang.Object)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.774991][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.776641][Remove Method] 'ArrayIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.776641][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.776641][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.777672][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.777672][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.777672][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.777672][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.778381][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.778381][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.778381][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.778381][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.778913][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.779445][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.779445][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.779445][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.779445][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.778381][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.778381][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.779445][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.778381][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.777317][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.776608][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.776608][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.776608][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.776608][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.777672][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.777672][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.777672][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.778736][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.778736][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.778736][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.779445][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.778381][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.779445][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.779445][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.779445][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.779445][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.779445][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.779445][Decrease Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.779445][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.781713][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.781713][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.783362][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.783362][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.785012][Remove Method] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.786043][Inline Method] uk.co.jezuk.mango.Adapt.verifyReturnType(java.lang.reflect.Method,java.lang.Class) into uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)
  - [-0.786043][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.786043][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.788929][Remove Method] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.789960][Remove Method] '<init>(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.791610][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.792641][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.793666][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.793666][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.793666][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.793666][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.792579][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.792579][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.793666][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.793666][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.795315][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.795315][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.794772][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.795315][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.795315][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.795315][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.795315][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.796965][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.796346][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.796346][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.796346][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.796346][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.796346][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.796346][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.796346][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.796346][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.796346][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.796346][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.796346][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.796346][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.796346][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.795803][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.795803][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.796834][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.797377][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.797377][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.798408][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.798408][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.798408][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.797683][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.798408][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.798408][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.798408][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.798408][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.798408][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.798408][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.797683][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.798714][Remove Method] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.799439][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.799439][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.799439][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.798352][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.798352][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.799439][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.799439][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.799439][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.797790][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.797790][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.799439][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.799439][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.800470][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.800470][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.800470][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.800470][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.800470][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.800470][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.800470][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.800470][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.800470][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.800470][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.799383][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.799383][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.799383][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.800470][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.800470][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.800470][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.802738][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.802013][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.802013][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.802013][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.802738][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.801651][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.801651][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.801651][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.801651][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.802738][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.802013][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.802738][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.802738][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.802738][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.802738][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.802194][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.802738][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.802738][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.802738][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.802738][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.804387][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.804387][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PUBLIC'
  - [-0.804387][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.806037][Remove Field] 'item' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.804950][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.804950][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.804950][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.806599][Remove Field] 'index' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.806599][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PRIVATE'
  - [-0.807686][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.808717][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.809715][Remove Field] 'useCount' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.809715][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.809715][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.811364][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.812332][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.812332][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.812332][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.812332][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.812332][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.811574][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.811574][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.815698][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.815698][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.815698][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.815698][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.817966][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.817966][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.817966][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.820234][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.821771][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.821771][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.821771][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.822546][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.822546][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.822546][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.822546][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.822546][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.822546][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.822546][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.822546][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.822546][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.820221][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.820221][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.820221][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.820221][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.820221][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.820221][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.820221][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.820221][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.820221][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.820221][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.822546][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.823577][Remove Method] 'isEmpty()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.823577][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.823577][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.824608][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.824608][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.824608][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.826257][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.826257][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.826257][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.826257][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.825095][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.825095][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.829218][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.830381][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.830381][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.830381][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.830381][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.830381][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.830381][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.830381][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.834505][Remove Method] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.834505][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.834505][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.834505][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.834505][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.834505][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.834505][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.834505][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.834505][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.834505][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.836154][Remove Method] 'Any(java.util.Iterator)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.836154][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.836154][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.836154][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.836154][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.835536][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to static 
  - [-0.835536][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.835536][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PUBLIC'
  - [-0.835536][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.835536][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.835536][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.835536][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.835536][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PACKAGE'
  - [-0.836567][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.835404][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.835404][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.834823][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.834823][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.835985][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.835985][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.836567][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.835404][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.836567][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.835792][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.835792][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.836567][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.836567][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.836567][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.836567][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PACKAGE'
  - [-0.834917][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.837804][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.838835][Inline Method] uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ChainIterator.createuk.co.jezuk.mango.iterators.ChainIterator()
  - [-0.838835][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.838835][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.836509][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.838835][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.838835][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.838835][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.838835][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.839866][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.839866][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.839866][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.839866][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.839866][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.839866][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.842134][Remove Method] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.842134][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.842134][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.842134][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.840971][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.839321][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator)
  - [-0.840484][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.841515][Inline Method] uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.Any.createuk.co.jezuk.mango.unarypredicates.Any()
  - [-0.841515][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.841515][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.840352][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.840352][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.840352][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.842620][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.840971][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.842134][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.843165][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.844196][Remove Method] 'containsValue(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.844196][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.844196][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.843420][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.843420][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.843420][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.843420][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.842258][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.843420][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.844451][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.Generator'
  - [-0.845227][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.845227][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.846257][Remove Method] 'unique(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.845095][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.844319][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.845095][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.846257][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.846257][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.846257][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.845676][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.845095][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.845676][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.845676][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.845095][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.845095][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.843445][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.843445][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.843445][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.845713][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.846744][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.847326][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.847326][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.846163][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.847326][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.847326][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.847326][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.847326][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.850212][Remove Method] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.850212][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.851719][Remove Field] 'generator_' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.851719][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.851719][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.851719][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.851719][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.852314][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.852314][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.852314][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.852314][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.851520][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.852314][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.852314][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.852314][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.851520][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.852314][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.852314][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.852314][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.852314][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.852314][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.851124][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.851124][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.851124][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.852314][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.852314][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.851520][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.851520][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.850925][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.851719][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.850069][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory.<init>()
  - [-0.850069][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.850069][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.852337][Remove Method] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.851742][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.850948][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.850948][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.850948][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.851979][Inline Method] uk.co.jezuk.mango.collections.MapFactory.<init>() into uk.co.jezuk.mango.collections.MapFactory.createuk.co.jezuk.mango.collections.MapFactory()
  - [-0.850789][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.850789][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.853057][Remove Method] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.854247][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.854843][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.855636][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.855636][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.855636][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.856232][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.856232][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.856232][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.856232][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.856232][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.856232][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.854582][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.854582][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.855613][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.855613][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.855613][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.857263][Remove Method] 'IntegerSequence(java.lang.Integer)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.856469][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.856469][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.857263][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.857263][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.856072][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.856072][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.857263][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.858293][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.858293][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.858293][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.857103][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.858752][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.858157][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.858157][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.859348][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.859943][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.859943][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.859943][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.859943][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.859943][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.859943][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.859943][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.860974][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.860974][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.860974][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.859324][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.860355][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.860355][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.860355][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.860355][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.862005][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.864273][Remove Field] 'val$g' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.865757][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.865757][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.865757][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.865757][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.865757][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.865757][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.864537][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.864537][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.865757][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.865757][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.864537][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.864537][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.865757][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.865757][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.865757][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.865757][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.868025][Remove Method] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.868025][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.868025][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.869674][Remove Method] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.870705][Remove Method] 'unique(java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.870705][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.870705][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.870705][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.872355][Remove Method] 'createuk.co.jezuk.mango.Generators()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.872355][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.872355][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.872355][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.872355][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.872355][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.872355][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.874623][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.874623][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.874623][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.874623][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.874623][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.874623][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.874623][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.874623][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.874623][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.875654][Remove Method] 'remove(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.875654][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PACKAGE'
  - [-0.875654][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.875654][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.875654][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.878540][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.878540][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.878540][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.879571][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.879571][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.878962][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.878962][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.878962][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.879571][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.879571][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.879571][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.879571][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.879571][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.879571][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.879571][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.879571][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.879571][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.882458][Remove Method] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.881238][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.881238][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.881238][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.882458][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.883489][Remove Method] '<init>(java.lang.Object,java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.883489][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.885138][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.885138][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.886788][Remove Field] 'obj_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.886788][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.888437][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.888437][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.888437][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.890087][Remove Method] 'createuk.co.jezuk.mango.collections.MapFactory()' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.891118][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.891944][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.892728][Remove Field] 'val$obj' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.892728][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.892728][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.892728][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.892728][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.892087][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.892728][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.892728][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.891873][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.892728][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.891873][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.891873][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.891873][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.892728][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.892728][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.892728][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.895615][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.894333][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.894333][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.894333][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.895615][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.895615][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.895615][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.895615][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.894333][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.895615][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.894333][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.893051][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.893051][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.891769][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.893051][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.894333][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.893051][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.893051][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.894333][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.895615][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.895615][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.894333][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.894333][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.895982][Remove Method] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.897632][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.897632][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.897632][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.897632][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.895982][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.897632][Remove Field] 'valid_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.897632][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.897632][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.899281][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.897632][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.897632][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.899281][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.899281][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.899281][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.900931][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.900931][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.902213][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.903244][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.904275][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.904275][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.904275][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.905305][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.905305][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.905305][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.905305][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.905305][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.905305][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.905305][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.903656][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-0.903656][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.903656][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.903656][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.904687][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.904687][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.903405][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.903405][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.904687][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.904687][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.904687][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.903832][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.903832][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.903832][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.903832][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.903832][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.904863][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.903581][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.901017][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.903581][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.904863][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.904008][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.904863][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.905718][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.904068][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>()
  - [-0.904068][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.905099][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThan.createuk.co.jezuk.mango.binarypredicates.GreaterThan()
  - [-0.903817][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.905099][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.905099][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.904245][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.904245][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.905099][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.906130][Remove Method] 'remove(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.904481][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.905512][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.905512][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.905512][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.905512][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.905512][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.905512][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.905512][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.905512][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.905512][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.905512][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.905512][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.905512][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.905512][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.905512][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.905512][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.905512][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.907161][Remove Method] 'ZipIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.907161][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.907161][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.909429][Remove Method] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.909429][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.909429][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.909429][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.909429][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.910460][Remove Method] 'TeeIterator(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.910460][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.910460][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.910460][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.910460][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.912728][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.912728][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.912728][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.912728][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.912728][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.912728][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.912728][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.914378][Remove Method] 'BoundedIterator(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.914378][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.915409][Remove Method] 'unique(java.util.Collection,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.915409][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.915409][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.915409][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.915409][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PACKAGE'
  - [-0.917677][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.917677][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.917677][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.921800][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.921159][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.921159][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.923427][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.923427][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.922145][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.922145][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.923427][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.924068][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.924068][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.924068][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.924068][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-0.924068][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.924068][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.924068][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.922419][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-0.923450][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.923450][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PACKAGE'
  - [-0.923450][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.925718][Remove Method] 'wrap(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.927367][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.926726][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.925444][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.925444][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.924162][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.924162][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.926453][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.926453][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.926453][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.928102][Remove Field] 'iterator_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.929752][Remove Field] 'buffer_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.931034][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.932316][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.933347][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.934085][Remove Field] 'useCount_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.934085][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.934085][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.932436][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.933467][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.933467][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PUBLIC'
  - [-0.933467][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.933467][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.935735][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.935735][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.935735][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.935735][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.937384][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.938692][Remove Field] 'p_' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.938692][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.940342][Remove Method] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.940342][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.941991][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.941991][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.941991][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.941991][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.941991][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.941991][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.941991][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.941991][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.943641][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.944277][Remove Field] 'argType_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.944277][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.944277][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.944277][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.944277][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.944277][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.944277][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-0.944277][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.944277][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.944277][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.944277][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.944277][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PACKAGE'
  - [-0.944277][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.944277][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.944277][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.944277][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.944277][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.945307][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.945307][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.945307][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.945307][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.943919][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.945307][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.945307][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.943919][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.943919][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.945307][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.945307][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.943919][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.942530][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.942530][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.943919][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.943919][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.943919][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.945307][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.945307][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.945307][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PACKAGE'
  - [-0.947575][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.947575][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.947575][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.947575][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.947575][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.947575][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.946187][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.947575][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.947575][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.944798][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.944798][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.944798][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.947575][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.947575][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.947575][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.947575][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.947575][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.947575][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.947575][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.947575][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.947575][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.946650][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.947575][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.947575][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-0.947575][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.947575][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.949225][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Any()' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.946447][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.946447][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.949803][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.949803][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.949803][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.949803][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.949803][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.949803][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.949803][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.949803][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.949803][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.949803][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.949803][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.949803][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.952071][Remove Method] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.953721][Remove Method] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.953721][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.952292][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.950863][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.952292][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.953721][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.953721][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.955370][Remove Method] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.955885][Remove Field] 'seed_' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.954414][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.955885][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.955885][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.955885][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.955885][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.955885][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.956916][Remove Method] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.956916][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.958565][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.958565][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.958565][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.958565][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.958565][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.957585][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.958565][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.958565][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.958565][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.958565][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PACKAGE'
  - [-0.958565][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.961452][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.961452][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.961452][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.961452][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.961452][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.962483][Remove Method] 'unique(java.util.Collection,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.963514][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.963514][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.963514][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.963514][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.963514][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.962534][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.963514][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.963514][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.963514][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.965782][Remove Method] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.965782][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.965782][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.964802][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.964802][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PUBLIC'
  - [-0.965782][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.965782][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.965782][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.965782][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.967431][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.967431][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.967431][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.967431][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PACKAGE'
  - [-0.968462][Inline Method] uk.co.jezuk.mango.algorithms.Unique.match(java.util.Comparator,java.lang.Object,java.lang.Object) into uk.co.jezuk.mango.algorithms.Unique.execute(java.util.Iterator,java.util.Comparator)
  - [-0.967482][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.968462][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.968462][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.970112][Remove Method] 'ChainIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.970112][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.970112][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.970112][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PUBLIC'
  - [-0.970112][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.968641][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.967171][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.968820][Remove Method] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.970291][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.968820][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.968820][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.970291][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.969310][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.969310][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.970781][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.969131][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.969131][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.970112][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.970558][Remove Field] 'zip_' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.970558][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PACKAGE'
  - [-0.970558][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.973445][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.973445][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.972826][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.972826][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.972826][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.972826][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.972826][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.972826][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.972826][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.972826][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.971177][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.972208][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.972208][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.972208][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PUBLIC'
  - [-0.973239][Inline Method] uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.973239][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.973239][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.971723][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.973239][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.973239][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.973239][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.972228][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.973239][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.973239][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.973239][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.973239][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.974269][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.974269][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.974269][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.972754][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.974269][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.974269][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.974269][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PACKAGE'
  - [-0.974269][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.974269][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.974269][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.974269][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.975300][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryPredicate'
  - [-0.975300][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.975300][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.975300][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.975300][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.975300][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.975300][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.975300][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.973785][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.973785][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.973785][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.973785][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.975300][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.975300][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.976950][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.976950][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.975435][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.977084][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.978599][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.975569][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.975569][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.978599][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.981486][Remove Method] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.979971][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.981486][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.979971][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.981486][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.981486][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.979971][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.981486][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.981486][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.981486][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.981486][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.981486][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.981486][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.981486][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.981486][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.979971][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.979971][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.978456][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.978456][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.980724][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.980724][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.982239][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.983754][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.983754][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.983754][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.983754][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.983754][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.982239][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.982239][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.983754][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.983754][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-0.983754][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.983754][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.983754][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.983754][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.982744][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.983754][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.983754][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PACKAGE'
  - [-0.983754][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PRIVATE'
  - [-0.983754][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.986022][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.986022][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PACKAGE'
  - [-0.988290][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.988290][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.989940][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.990311][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.990311][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.988748][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.990311][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.990311][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.991342][Inline Method] uk.co.jezuk.mango.Collections.list(java.util.Iterator) into uk.co.jezuk.mango.Collections.list(java.util.Collection)
  - [-0.989779][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.991342][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.989779][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.991342][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.991342][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.991342][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.991342][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.991342][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.991342][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.991342][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.991342][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.991342][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.991342][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.991342][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.991342][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.989779][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.991342][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.989779][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.991342][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.991342][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.991342][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.991342][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.991342][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.991342][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.991342][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.991342][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.989779][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.989779][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.991429][Remove Method] 'BoundedIterator(java.util.Iterator,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.992991][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.992991][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.992991][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.992991][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.992991][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.992991][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.994641][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.994641][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.994641][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.994641][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.994641][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.993078][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.994641][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.993078][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.993078][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.994641][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.994641][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.993078][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.993078][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.993078][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.994641][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.994641][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.994641][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.994641][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.994641][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.994641][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.994641][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.994641][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.994641][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.994641][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.994641][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.994641][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.994641][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.994641][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-0.992991][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.994022][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.994022][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.994022][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PACKAGE'
  - [-0.995053][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Function'
  - [-0.995053][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.995053][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.995053][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.995053][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.995053][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.995053][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.995053][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.995053][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.992166][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate)
  - [-0.994434][Inline Method] uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Not.createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)
  - [-0.994434][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.996084][Remove Method] 'ReverseIterator(java.util.List)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.996084][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.996084][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PACKAGE'
  - [-0.996084][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.997115][Remove Method] 'execute(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.997115][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.997115][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.997115][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.995552][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.995552][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.997115][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.996073][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.997115][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.997115][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.997115][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.997115][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.997115][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.997115][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.995465][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.996496][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.996496][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.996496][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.996496][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.996496][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.996496][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.996496][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.997527][Remove Method] 'list(java.util.Collection)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.997527][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.997527][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.995965][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.997527][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.997527][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.995965][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.995965][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.997527][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.997527][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.997527][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.997527][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.997527][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.997527][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.997527][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.999177][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.998135][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.999177][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.999177][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.999177][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-0.999177][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.999177][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.000826][Remove Method] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-1.003094][Remove Method] 'toIterators(java.lang.Object[])' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-1.004744][Remove Method] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.006393][Remove Field] 'array_' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.006682][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.006682][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.006682][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.006682][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-1.006682][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.006682][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.009568][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-1.010599][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.010599][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.010599][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.010599][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.010599][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.008950][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-1.008950][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-1.008950][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-1.010599][Remove Method] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.012249][Remove Field] 'spent_' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.013280][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-1.013280][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.013478][Remove Field] 'object_' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.011811][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-1.013478][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-1.013478][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.013478][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-1.013478][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.013478][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.010591][Introduce Factory] for uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-1.012859][Inline Method] uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SelectingIterator.createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)
  - [-1.012859][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-1.012859][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-1.011748][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-1.012859][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-1.012859][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.012859][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.011192][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-1.012859][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-1.012859][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.011192][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-1.009526][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-1.011192][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-1.012859][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-1.012859][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.012859][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-1.012859][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.012859][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.012859][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-1.011748][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.012859][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-1.012859][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.011209][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-1.012240][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-1.012240][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.012240][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.012240][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-1.008117][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-1.008117][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-1.011622][Inline Method] uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nor.createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-1.010511][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.011622][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-1.011622][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-1.011622][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.009955][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-1.009955][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-1.011622][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-1.010511][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-1.011622][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-1.011622][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-1.011622][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.014508][Remove Method] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-1.016777][Remove Field] 'pred_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-1.016777][Increase Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.016777][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.016874][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-1.016874][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.016874][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.016874][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-1.016874][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-1.016874][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.020998][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-1.020998][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.023266][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-1.023872][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-1.023872][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-1.026140][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-1.026140][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.026140][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.026140][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.026140][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.026140][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.024949][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-1.026140][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-1.026140][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.026140][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.026140][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-1.026140][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.026140][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.026140][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.026140][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.026140][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-1.024949][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.026140][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-1.026140][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.026140][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-1.026140][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-1.026140][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-1.026140][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-1.026140][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-1.026140][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.029026][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-1.029508][Remove Field] 'p_' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-1.029508][Decrease Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-1.029508][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-1.029508][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-1.029508][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-1.029508][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-1.031158][Remove Method] 'createuk.co.jezuk.mango.functions.Constant()' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-1.031158][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-1.031158][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.031158][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.031158][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-1.031158][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.031158][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.031158][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-1.032189][Remove Method] 'list(java.util.Iterator)' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-1.032189][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-1.032189][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-1.030337][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-1.030337][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.032189][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-1.032189][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-1.033838][Remove Method] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-1.033838][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.033838][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.033838][Remove Class] uk.co.jezuk.mango.functions.Constant
  - [-1.031987][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-1.030752][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-1.032604][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-1.033838][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-1.033838][Remove Class] uk.co.jezuk.mango.iterators.ReverseIterator
  - [-1.033838][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.033838][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.033838][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.035488][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.037137][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.038787][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.037552][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.038787][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-1.037552][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.037552][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-1.038787][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-1.038787][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.038513][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-1.035627][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-1.035627][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.037895][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-1.037895][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.037895][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-1.037895][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.036613][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.037895][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-1.037895][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.037895][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PACKAGE'
  - [-1.038926][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-1.038926][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.038926][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.038926][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-1.038926][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.038926][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.040575][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.040575][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.042225][Remove Field] 'list_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.043874][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-1.043874][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.043874][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.042225][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-1.042225][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.043255][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-1.043255][Increase Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.043255][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.043255][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-1.043255][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.043255][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.043255][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-1.043255][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.043255][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.043255][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-1.043255][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.043255][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-1.043255][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-1.043255][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-1.046142][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-1.048410][Remove Field] 'buffer_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-1.048410][Increase Method Security] 'createuk.co.jezuk.mango.collections.ListFactory()' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-1.048410][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.050060][Remove Method] 'createuk.co.jezuk.mango.collections.ListFactory()' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-1.050060][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.050060][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.050060][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-1.050060][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.050060][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.050060][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.050060][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-1.050060][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.049632][Remove Field] 'end_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.049632][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.049632][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.049632][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-1.051282][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-1.051282][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.051282][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.051282][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.051282][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.049282][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-1.051282][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-1.051282][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-1.051282][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.051282][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-1.051282][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-1.051282][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.051282][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-1.051282][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-1.052313][Remove Method] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-1.052313][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-1.053962][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-1.053962][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.053962][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.053962][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.053962][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.053962][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.053962][Remove Class] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.053962][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.053962][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.053962][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.053962][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.053962][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.053962][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.053962][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.053962][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.053962][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.053962][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.053962][Remove Class] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.053962][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.053962][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.053962][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-1.053962][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.053962][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.053962][Remove Class] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.053962][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.053962][Remove Class] uk.co.jezuk.mango.functions.Constant
  - [-1.053962][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.053962][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.053962][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-1.053962][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.055612][Remove Method] 'createuk.co.jezuk.mango.iterators.StringIterator()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-1.055612][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.057261][Remove Field] 's_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-1.057261][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator

====== Run Result ======

* Name: Mango|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 88.45 seconds
  * Quality Gain: 0.674698
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.379076
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 2.2784
    * numOps: 4.3402
    * iFImpl: 0.4433
    * Dep_In: 2.4227
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 1.1649
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.4043
    * NumDesc: 0.0000

* Final Design:
  * Score: -1.053774
  * Possible Actions: 106
  * Applied Actions: 2954
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 0.4742
    * numOps: 0.4021
    * iFImpl: 0.4433
    * Dep_In: 0.4845
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 0.4433
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.5625
    * NumDesc: 0.0000

* Applied Actions:
  - [-0.380107][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.381138][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.382169][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.382169][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to static 
  - [-0.383200][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.383200][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.384231][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.385262][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.385262][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.385262][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.386293][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.386756][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.386137][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.387168][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.388199][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.388199][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.388199][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.389230][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.390261][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.390261][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.391292][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.391292][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.391292][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.390673][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.391704][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.391704][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.391704][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.391704][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.391704][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.392735][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.393766][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.394797][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.394797][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.394797][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.394797][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.394797][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.394797][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.394797][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.394797][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.394797][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.394797][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.395260][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.396291][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.397322][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.398353][Remove Method] 'remove(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.399384][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.399384][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400415][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.401446][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.400520][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.399901][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.400932][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.400932][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.400932][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.400932][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.400313][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to static 
  - [-0.400313][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.401344][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.401344][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.401344][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.401344][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402375][Remove Method] 'count(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402375][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.403406][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.402943][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.403974][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.405005][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.406036][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.407067][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.407067][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.407067][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.406448][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.405830][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.407479][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.407479][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407479][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.407479][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.408510][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.408510][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.408510][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.408510][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.412634][Remove Method] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.412634][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.413665][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.413665][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.412015][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.412015][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.412633][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.412170][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.412170][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.411551][Freeze Method] Convert 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.411551][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.411551][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.411551][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.413201][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.413201][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.414232][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.414232][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.414232][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.415263][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.415263][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.415263][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.415263][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.416294][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.416294][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.416294][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.415675][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to static 
  - [-0.415675][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.415675][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.416138][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.417169][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.417169][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.417169][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.418200][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.419231][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.418612][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.417994][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.417376][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.417376][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.417376][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.419026][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.next(uk.co.jezuk.mango.iterators.ZipIterator) into uk.co.jezuk.mango.iterators.ZipIterator.next()
  - [-0.419026][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.420057][Remove Method] 'True()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.421088][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.421088][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.420469][Freeze Method] Convert 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.420469][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.422119][Remove Method] 'Any(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.423149][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.423149][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.424180][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.424180][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.425211][Inline Method] uk.co.jezuk.mango.Predicates.Any(java.util.Iterator) into uk.co.jezuk.mango.Predicates.Any(java.util.Collection)
  - [-0.426242][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.425779][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.425779][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.426705][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.426705][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.427323][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.427323][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.427323][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.427323][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.428248][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.427630][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.427630][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.427630][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.428556][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.428556][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.428556][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.429482][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.427832][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.428863][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.428863][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.428863][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.428863][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.429894][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.429894][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.429894][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.429894][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.430925][Inline Method] uk.co.jezuk.mango.Adapt.wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.ArgumentMethod(java.lang.String,java.lang.Class)
  - [-0.431542][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.431542][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.432160][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.432160][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.432160][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.432777][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.433394][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.433394][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.434011][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.434011][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.432362][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object)
  - [-0.431899][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.432930][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()
  - [-0.432930][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.432930][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.432930][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.432930][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.432930][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.432930][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.433547][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.433547][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.434010][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.434010][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.433084][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.434010][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.434473][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.434473][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.434010][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.434473][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.434473][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.433855][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.433855][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.434318][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.434318][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.434781][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.434781][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.434781][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.434781][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.434781][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.434781][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.434781][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.434781][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.434163][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.434163][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.434163][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.434163][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.435194][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.435194][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.435194][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.435194][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.436225][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.436225][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.435299][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.435299][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.434836][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.435762][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.436379][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.435453][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.434835][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to static 
  - [-0.434835][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.435298][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.435298][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.435298][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.436224][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.436687][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.436224][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.436224][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to static 
  - [-0.436224][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.436224][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.436687][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.437150][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.436687][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.436687][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.437150][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.437613][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.436994][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to static 
  - [-0.436994][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.436994][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.436994][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.436994][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.436994][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.441118][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.441118][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.440655][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.441118][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.441581][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.441581][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.442044][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.442044][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.443693][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.444156][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.444156][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.444619][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.444619][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.444619][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.444619][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.444619][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.444619][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.444619][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.444619][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.444619][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.444619][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.447506][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.447506][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.449774][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.449774][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.452042][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.452042][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.452042][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.453691][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.453691][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.453691][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.454722][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.454722][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.454722][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.454722][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.454722][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.456372][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.456372][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.456372][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.456372][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.456372][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.456372][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.456372][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.456372][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.457403][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.457403][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.457403][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.456940][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.457403][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.457403][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.457403][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.457403][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.459052][Remove Method] 'Constant(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.458589][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.459052][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.458589][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.458589][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.459052][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.459052][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.459052][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.459052][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.461320][Remove Method] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.461320][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.461320][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.461320][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.461320][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.461320][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.461320][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.461320][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.461320][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.461320][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.461320][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.461320][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.461320][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.461320][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.463588][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.463588][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.464619][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.465650][Remove Method] 'keySet()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.465650][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.465650][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.465650][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.465650][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.464724][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.465650][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.465650][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.465650][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.465032][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to static 
  - [-0.465032][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.465032][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.465032][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.465032][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.465032][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.465032][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.464569][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.464569][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.465032][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.465032][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.467300][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.464413][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.464413][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.464413][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.464413][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.464413][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.464413][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.466681][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.468331][Remove Method] 'GreaterThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.468331][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.468331][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.467868][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.467868][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.467868][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.467868][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.467249][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.467249][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.467712][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.467712][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.467712][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.467712][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.467712][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.467712][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.467712][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.468743][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.468743][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.468743][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.468743][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.468743][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.468743][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.468743][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.468743][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.468743][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.468743][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.468743][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.468743][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.468124][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.468124][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.468124][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.468124][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.468124][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.469155][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.469155][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.469155][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.469155][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.469155][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.469155][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.469155][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.469155][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.469155][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.469155][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.468537][Freeze Method] Convert 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.468537][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.464413][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.467918][Inline Method] uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.And.createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.467918][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.467918][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.467918][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.468949][Remove Method] 'Method(java.lang.Object,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.468023][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.468023][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.468023][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.467097][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.467097][Increase Method Security] 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.468023][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.468023][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.468023][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.468023][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.468023][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.468023][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.470291][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.471322][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.472248][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.472248][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.472248][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.472248][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.472248][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.472248][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.472248][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.472248][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.472248][Decrease Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.471322][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.471322][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.471322][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.471322][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.471322][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.471322][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.472353][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.473279][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.473279][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.473279][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.474310][Remove Method] 'isEmpty()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.474310][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.476578][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.477609][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.476990][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.476990][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.476990][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.476372][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to static 
  - [-0.475754][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.475136][Freeze Method] Convert 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.475136][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.475136][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.475136][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.475136][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.476785][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.next(uk.co.jezuk.mango.iterators.StringIterator) into uk.co.jezuk.mango.iterators.StringIterator.next()
  - [-0.476322][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.475704][Freeze Method] Convert 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.475704][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.475704][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.475704][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.477353][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.477353][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.477353][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.479621][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.479621][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.479621][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.480709][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.480709][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.480709][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.481740][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.481740][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.481740][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.482771][Remove Method] 'TeeIterator(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.483802][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.484431][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.484431][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.484902][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.484902][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.484284][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.485933][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.485304][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.485933][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.484990][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.484046][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.484046][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.485077][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.485077][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.484448][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.485392][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.485392][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.485392][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.485392][Decrease Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.485392][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.485392][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.486335][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.486335][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.486335][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.486335][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.486335][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.487366][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections$MapBuilder'
  - [-0.487366][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.487366][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.487366][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.487995][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.487995][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.487995][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.487995][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.487995][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.487523][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.487523][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.487523][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.487523][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.487995][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.487995][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.487995][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.487995][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.487995][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.487995][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.487995][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.487995][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.487995][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.487995][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.490263][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.490263][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.490263][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.490263][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.490263][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.490263][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.490263][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.490263][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.490263][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.490263][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.492531][Remove Method] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.492531][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.492531][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.492531][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.492531][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.493562][Remove Method] 'Method(java.lang.Class,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.493562][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.497686][Remove Method] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.497686][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.497686][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.497686][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.497686][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.497686][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.498717][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.499748][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.500779][Remove Method] 'remove(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.500779][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.500779][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.500779][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.501810][Remove Method] 'unique(java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.501338][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.502369][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.502369][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.502369][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.502841][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.500954][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.500954][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.500954][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.500954][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.500482][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.502369][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.502369][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.502369][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.502369][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.502369][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.503400][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.503400][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.503400][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.503871][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.503871][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.503871][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.503871][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.503871][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.503871][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.503871][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.503871][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.503871][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to static 
  - [-0.503871][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.503871][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.503871][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.503871][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.503871][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.503871][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.503871][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.503871][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.504902][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.504902][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.504902][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.504902][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.507170][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.507170][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.507170][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.507170][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.507170][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.507170][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.507170][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.507170][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.506699][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.506699][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.506699][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.506699][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.506699][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.505049][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.506080][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.506080][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.506080][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to static 
  - [-0.506080][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.506080][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.506080][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.506080][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.507111][Remove Method] 'True()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.507583][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.507583][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.507583][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.507583][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.507583][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.508614][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.508614][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.508614][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.508614][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.508614][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.508614][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.507995][Freeze Method] Convert 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.507995][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.507995][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.507995][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.507995][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.507995][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.507995][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to static 
  - [-0.507995][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.507995][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.507995][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.507995][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.509026][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.509026][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.509026][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.511294][Remove Method] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.510351][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.510351][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.511294][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.511294][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.511294][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.511294][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.514181][Remove Method] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.514181][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.514181][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.514181][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.518304][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.518304][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.518304][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.518304][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.517686][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.517057][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.518088][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.518717][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.518717][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.518717][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.518717][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.518717][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.518717][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.518717][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.518717][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.518717][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.518717][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.518717][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.518717][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.518717][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.519748][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.519748][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.519748][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.520779][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.521810][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.521810][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.521810][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.521191][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.521191][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.521191][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.522222][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.522222][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.522222][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.522222][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.522222][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.521593][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.522624][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.523655][Remove Method] 'findPosition(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.523655][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.523655][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.523655][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.523655][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.523655][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.523183][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.524214][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.524214][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.524214][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.524843][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.524843][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.524371][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.524371][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.524371][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.524371][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.524371][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.524371][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.524371][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.528495][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.528495][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.530763][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.531794][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.531794][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.532266][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.531637][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.531637][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.531637][Increase Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.533905][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.533905][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.533905][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.533905][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.533905][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.533905][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.533905][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.533905][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.534936][Inline Method] uk.co.jezuk.mango.Predicates.All(java.util.Iterator) into uk.co.jezuk.mango.Predicates.All(java.util.Collection)
  - [-0.534936][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.534936][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.534936][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.535565][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.536036][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.536036][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.536036][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.535093][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.535093][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.535093][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.536124][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.536124][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.535495][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.535495][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.535495][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.535495][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.535495][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.534552][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.534552][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.536201][Remove Method] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.536201][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.537851][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.538794][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.538794][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.537851][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.538794][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.538175][Freeze Method] Convert 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.539119][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.539748][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.538804][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.538804][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.539835][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.539835][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.539835][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.539835][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.542103][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.542103][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.542103][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.542103][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.542103][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.542103][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.543047][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.543047][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.543047][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.543047][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.543047][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.543047][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.543047][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.543047][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.544696][Remove Method] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.544696][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.544696][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.544696][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.544696][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.544696][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.544696][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.546346][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.546346][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.547995][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.547995][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.547995][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.547995][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.547995][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.549026][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.549026][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.548397][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.548397][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.548397][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.549428][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.549428][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.549428][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.551078][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.551078][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.551078][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.552108][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.552108][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.551165][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.551165][Decrease Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.551165][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.552196][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.551724][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.551724][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.551724][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.553992][Remove Method] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.553992][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.555642][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.555642][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.555642][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.556585][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.557214][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.556742][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.556742][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.557214][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.557214][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.557214][Decrease Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.557214][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.557686][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.557686][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.559335][Remove Method] 'StringIterator(java.lang.String)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.559335][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.559335][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.559335][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.559335][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.559335][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.559335][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.559335][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.560985][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.560985][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.560985][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.560985][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.560985][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.562016][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.562016][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.562016][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.562016][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.562016][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.563047][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.563047][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.563047][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.563047][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.563047][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.563047][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.563047][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.562103][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.562103][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.562103][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.562103][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.563753][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.563753][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.563753][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.563753][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.564784][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunction'
  - [-0.564784][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.564784][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.565815][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.565815][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.565815][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PACKAGE'
  - [-0.565815][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.569938][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.569938][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.569938][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.569938][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.572206][Remove Method] 'wrap(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.572206][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.572206][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.571588][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.571588][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.571588][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.571588][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.572619][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.570969][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.570969][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.570351][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.570351][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.570351][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.572000][Remove Method] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.572000][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.572000][Decrease Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.573031][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.574062][Remove Method] 'unique(java.util.Collection,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.574062][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.574062][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.574062][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.574062][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.574062][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.575093][Inline Method] uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ChainIterator.createuk.co.jezuk.mango.iterators.ChainIterator()
  - [-0.575093][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.575093][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.575093][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.575093][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.577361][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.577361][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.577361][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.577361][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.579629][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.579629][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.580660][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.580660][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.580660][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.581691][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.581691][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.581691][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.581691][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.583340][Remove Method] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.583340][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.584371][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.585315][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.585315][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.585315][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.584686][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.583742][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.582799][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.582799][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.582799][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.582799][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.582799][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.582799][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.583742][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.583742][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.583113][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.583113][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.584057][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.584686][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.584686][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.583742][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.584686][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.584686][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.585315][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.585315][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.584843][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.584843][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.584843][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.585874][Remove Method] 'values()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.585874][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.586346][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.586346][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.586346][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.587377][Remove Method] 'size()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.587377][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.588408][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.588408][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.588408][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.588408][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.590676][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.591706][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.591706][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.591706][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.591706][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.591706][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.591706][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.591706][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.591706][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.591706][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.591706][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.591706][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.591706][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.593356][Remove Method] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.593356][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.593356][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.593356][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PRIVATE'
  - [-0.594387][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.594387][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.594387][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.596036][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.597067][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.597067][Decrease Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.597067][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.596438][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.596438][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.596438][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.596438][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.596438][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.598088][Remove Method] 'ChainIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.598088][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.598088][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.598088][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.598088][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.598088][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.599119][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.599119][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.599119][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.600150][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.600150][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.600150][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.600150][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.600150][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.600150][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.601799][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.602830][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.603459][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.603459][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.602830][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.601887][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.601887][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.602830][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.602830][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.602830][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.602830][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.603861][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.604490][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.604490][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.604490][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.604490][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.604490][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.604490][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.604490][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.604490][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.606139][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.607789][Remove Method] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.607789][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.608820][Remove Method] 'unique(java.util.Collection,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.608820][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.608820][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.608820][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.608820][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.608820][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.608820][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.608201][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.608201][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.608201][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.609851][Remove Method] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.609851][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.609851][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.609851][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.609851][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.609851][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.609851][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.609851][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.609851][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.612119][Remove Method] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.613150][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.613150][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.613150][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.613150][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.613150][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.613150][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.613150][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.613150][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.613150][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.613150][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.617273][Remove Method] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.617273][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.617273][Decrease Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.616645][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.616645][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.617675][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.617675][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.618304][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.618304][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.618304][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.618304][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.618304][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.618304][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.618304][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.616418][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.616418][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.618304][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.618304][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.618304][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.618304][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.618304][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.618304][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.618304][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.618304][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.618304][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.622428][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.623459][Remove Method] 'count(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.623459][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.623459][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.623459][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.623459][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.623459][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.623459][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.622830][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.622830][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.622830][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.622830][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.623861][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.624490][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.624490][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.624490][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.624490][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.624490][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.624490][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.624490][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.624490][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.624490][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.624490][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.624490][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.624490][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.624490][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.624490][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.624490][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.624018][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.624490][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.621603][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.623871][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1) into uk.co.jezuk.mango.collections.MapFactory$Builder.createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.623871][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.623871][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.624902][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.624902][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.624431][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.622781][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.622152][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.622152][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.623183][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.623183][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.623812][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.624284][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.624284][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.624284][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.624284][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.624284][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.625933][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.625933][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.625933][Decrease Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.625462][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.625462][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.625462][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.625462][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.624990][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.624990][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.626639][Remove Method] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.626639][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.626639][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.629526][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.628897][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.628897][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.628897][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.629526][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.629526][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.629526][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.629526][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.629526][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.629526][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.630557][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.631029][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.631500][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.631029][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.631500][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.631500][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.631500][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.631500][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.631500][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.631500][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.631500][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.630871][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.630400][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.630400][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.632049][Remove Method] 'LessThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.632049][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.633080][Remove Method] 'values()' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.633709][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.634181][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.634181][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.633709][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.632060][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.632060][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.633090][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.633090][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.633090][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.633090][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.634121][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.634121][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.634121][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.634121][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.635152][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.Generator'
  - [-0.636183][Remove Method] 'find(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.636655][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.636655][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.636655][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.636655][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.638304][Remove Method] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.638304][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.639954][Remove Method] 'NotEqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.640985][Remove Method] 'values()' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.640513][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.640513][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.640513][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.640513][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.640513][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.640513][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.640985][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.640513][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.640985][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.640985][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.640985][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.640985][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.640985][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.642016][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.641397][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.641397][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.641397][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.641397][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.641397][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.641397][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.641397][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.640779][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to static 
  - [-0.643047][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.644078][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.644078][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.644078][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.644078][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.644078][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.643449][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.644078][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.644078][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.644078][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.644078][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.644078][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.646964][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.646964][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.646964][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.649232][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.649232][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.649232][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.649232][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.651500][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.651500][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.653768][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.653768][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.655418][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.655418][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.657067][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.657067][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.658154][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.658154][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.658154][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.658154][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.658154][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.658154][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.658154][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.658154][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.658154][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.658154][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.658154][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.658154][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.658154][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.658154][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.658154][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.659185][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.659185][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.659185][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.659185][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.662072][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.662072][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.662072][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.664340][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.664340][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.664340][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.666608][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.666608][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.666608][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.666608][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.666608][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.668876][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.670526][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.670526][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.671591][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.672621][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.672621][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.672621][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.672621][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.672621][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.672621][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.672621][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.672621][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.672621][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.672621][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.676745][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.676745][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.676745][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.677776][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.677776][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.677776][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.677776][Decrease Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.677776][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.677776][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.677776][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.677776][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.677158][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to static 
  - [-0.677158][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.677158][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.678807][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.678188][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to static 
  - [-0.677535][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.677535][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.678188][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.678188][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.678188][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.678188][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.679838][Remove Method] 'ZipIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.679838][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.679838][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.679838][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.680869][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.680869][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.680869][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.680869][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.680215][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.680215][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.680869][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.680869][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.681900][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.681900][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.680919][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.681900][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.681900][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.680919][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.680919][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.680266][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.679647][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.678667][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.678667][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.678667][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.678667][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.679698][Remove Method] 'findPosition(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.679698][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.679698][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.679698][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.680678][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.681659][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.682312][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.682312][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.682312][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.682312][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.682312][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.682312][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.682312][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.682312][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.684580][Remove Method] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.686230][Remove Method] 'ReverseIterator(java.util.List)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.686230][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.686230][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.686230][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.687261][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.687261][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.687261][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.687261][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.685300][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.685300][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.687261][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.687261][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.687261][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.690147][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.690147][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.690147][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.690147][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.690147][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.691178][Inline Method] uk.co.jezuk.mango.Predicates.OneOf(java.util.Iterator) into uk.co.jezuk.mango.Predicates.OneOf(java.util.Collection)
  - [-0.690688][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.691178][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.691178][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.692209][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.692209][Increase Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.692209][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.692209][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.692209][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.692209][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.693240][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.693240][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.693240][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.694271][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.694271][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.694271][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.694271][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.694271][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.694271][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.695302][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.695302][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.695302][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.695302][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.695302][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.695302][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.695302][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.695302][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.695302][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.695302][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.695302][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.695302][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.697570][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.697570][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.696590][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.697620][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.697620][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.696967][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.697947][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.697947][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.697947][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.697947][Increase Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.698601][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.698601][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.698601][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.698601][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.698601][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.698601][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.700250][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.700250][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.701281][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.701281][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.701281][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.702312][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.702312][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.701822][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.700173][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.700173][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.700173][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.701203][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.702234][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.703265][Inline Method] uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.Method(java.lang.Class,java.lang.String,java.lang.Class)
  - [-0.703265][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.703265][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.703265][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.703265][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.703755][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.703755][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.703755][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.703755][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.704786][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.704786][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.704786][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.704786][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.704786][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.704786][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.704786][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.704133][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.704133][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.704133][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.704133][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.704786][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.704786][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.704786][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.704786][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.704786][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.704786][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.704786][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.707054][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.707054][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.707054][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.707054][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.709322][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.710972][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.713240][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.713240][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.713240][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.713240][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.714900][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.715931][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.715931][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.715931][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.715931][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.715931][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.715931][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.715931][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.715931][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.715931][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.718818][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.718818][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.719849][Inline Method] uk.co.jezuk.mango.Adapt.verifyReturnType(java.lang.reflect.Method,java.lang.Class) into uk.co.jezuk.mango.Adapt.ArgumentMethod(java.lang.String,java.lang.Class)
  - [-0.719849][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.720880][Remove Method] '<init>(java.lang.Object,java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.722529][Remove Field] 'obj_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.724179][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.724179][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.724179][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.725828][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.725828][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.726859][Remove Method] 'containsValue(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.726859][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.726859][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.729127][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.730158][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.729539][Freeze Method] Convert 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.730570][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.731601][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.731601][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.731601][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.732632][Remove Method] '<init>(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.732632][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.732632][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.732632][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.732632][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.734282][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.735313][Remove Method] '<init>(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.736962][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.737993][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.737993][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.737993][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.737993][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.736993][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.736993][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.739261][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.741529][Remove Method] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.743179][Remove Field] 'val$methodName' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.743179][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.744828][Remove Field] 'lastClass_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.744828][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.744828][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.744828][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.744828][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.746478][Remove Method] 'OneOf(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.747508][Remove Method] 'intersection(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.747508][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.748539][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.749570][Remove Method] 'find(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.750601][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.750601][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.750601][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.750601][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.752251][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.753251][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.753251][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.754268][Remove Field] 'val$obj' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.753247][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.753247][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.753247][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.755515][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.756536][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.757526][Remove Field] 'argType_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.757526][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.758489][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.758489][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.758489][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.758489][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.756839][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.755775][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.756839][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.757870][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.757870][Remove Class] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.757870][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.758901][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.758901][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.758901][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.759833][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.760734][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.760734][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.761765][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.761765][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.761765][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.761765][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.761765][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.761765][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.761765][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.760116][Introduce Factory] for uk.co.jezuk.mango.Functions.<init>()
  - [-0.759560][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.759560][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.759560][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.759560][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.761209][Remove Method] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.762240][Inline Method] uk.co.jezuk.mango.Functions.<init>() into uk.co.jezuk.mango.Functions.createuk.co.jezuk.mango.Functions()
  - [-0.762796][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.760574][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.760574][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.760574][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.760574][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.760574][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.760574][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.759833][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.762055][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.762055][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.763086][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.763827][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.763827][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.763827][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.763827][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.764858][Remove Method] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.764858][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.764858][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.764858][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.764858][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.764858][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.764858][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.764858][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.764858][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.764858][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.765889][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.765889][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.765889][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.765889][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.765889][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.765889][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.765889][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.765889][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.765889][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.765889][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.764778][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.765889][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.765889][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.765889][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.765889][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.766920][Remove Method] 'test(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.767786][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.767786][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.767786][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.767786][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.767786][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.767786][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.767786][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.768817][Remove Method] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.768817][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.768817][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.768817][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.768817][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.768817][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.771085][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.771085][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.771085][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.771085][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.771085][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.771085][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.771085][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.772735][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.772735][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.772735][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.774384][Remove Field] 'valid_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.776034][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.776034][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.776034][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PUBLIC'
  - [-0.776034][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.776034][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.776034][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.776034][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.776034][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.776034][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.777683][Remove Method] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.777683][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.778714][Remove Method] 'remove(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.778714][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.779745][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.779745][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.779745][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.782013][Remove Method] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.780877][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.782013][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.782013][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.782013][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.782013][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.777889][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.781395][Inline Method] uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Or.createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.781395][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.779122][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.776849][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.779122][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.779122][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.781395][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.783663][Remove Method] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.783663][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.782526][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.782526][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.787887][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.792629][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.794897][Remove Field] 'val$g2' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.797165][Remove Field] 'val$g1' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.797165][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.797165][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.797165][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.798588][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.798588][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.800237][Remove Method] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.800237][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.801400][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.801400][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.802431][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.802431][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.802431][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.804081][Remove Method] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.804081][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.804081][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.804081][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.806349][Remove Method] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.806349][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.806349][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.807998][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.807998][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.807998][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.807998][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.807998][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.810885][Remove Method] 'Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.810885][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.811916][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.811916][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.811916][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.811916][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.811916][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.811916][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.810753][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.810753][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.811916][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.811916][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.811916][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.811916][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.811916][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.811916][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.811916][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.811916][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.811916][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.811916][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.811916][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.812946][Inline Method] uk.co.jezuk.mango.algorithms.SymmetricDifference.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.SymmetricDifference.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.812946][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.813977][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.813977][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.813977][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.812815][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.812815][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.812815][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.813977][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.813977][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.813977][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.812815][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.814464][Remove Method] 'createuk.co.jezuk.mango.iterators.StringIterator()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.813846][Freeze Method] Convert 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.815008][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.815008][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.816039][Remove Method] 'values()' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.816039][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.816039][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.816039][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.816039][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.818307][Remove Method] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.818307][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.818307][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.818307][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.818307][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.818307][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.818307][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.818307][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.819338][Remove Method] 'remove(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.819338][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.819338][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.819338][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.819338][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.819338][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.819338][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.820369][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.822019][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.findNext(uk.co.jezuk.mango.iterators.SkippingIterator) into uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.820369][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.820369][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.821400][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.821400][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.821400][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.821400][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.821400][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.821400][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.821400][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.821400][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.821400][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.821400][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.821400][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.821400][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.823668][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.823668][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.823668][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.823668][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.823668][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.823668][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.822505][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.823668][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.823668][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.823668][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.823668][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.823668][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.823668][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.823668][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.823668][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.823668][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.823668][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PUBLIC'
  - [-0.823668][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PRIVATE'
  - [-0.827792][Remove Method] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.831297][Remove Method] '<init>(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.833565][Remove Field] 'val$g' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.833565][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.833565][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.833565][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.834975][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.834975][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.834975][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.834975][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.837243][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.839511][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.840542][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.840542][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.840542][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.841573][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.842604][Remove Method] 'get(int)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.843397][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.844191][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.844985][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.845778][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.845778][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.845778][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.844588][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.845778][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.845778][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.846572][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.846572][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.847603][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.848397][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.847801][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.848397][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.848397][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.848397][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.848397][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.847801][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.846152][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.847183][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.847778][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.847778][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.849427][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.849427][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.851077][Remove Field] 'useCount_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.851077][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.851077][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.851077][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.851077][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.851077][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.851077][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.853345][Remove Method] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.853345][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.853345][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.853345][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.853345][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.853345][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.852551][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.851758][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.852551][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.853345][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.853345][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.853345][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.853345][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.853345][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.853345][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.854994][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.856644][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.855850][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.855850][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.856644][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.855850][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.854201][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory.<init>()
  - [-0.854201][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.855232][Inline Method] uk.co.jezuk.mango.collections.MapFactory.<init>() into uk.co.jezuk.mango.collections.MapFactory.createuk.co.jezuk.mango.collections.MapFactory()
  - [-0.856025][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.855232][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.856025][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.856025][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PACKAGE'
  - [-0.856025][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.857056][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryPredicate'
  - [-0.857056][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.858706][Remove Method] 'createuk.co.jezuk.mango.Generators()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.858706][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.858706][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.860355][Remove Method] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.862005][Remove Method] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.862005][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.861211][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.861211][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.862005][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.862005][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.862005][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.861410][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.861410][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.862005][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.862005][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.860814][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.862005][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.862005][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.862005][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.861211][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.862005][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.862005][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.862005][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.862005][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.862005][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.862005][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.860814][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.860814][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.860814][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.862005][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.862005][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.862005][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.862005][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.862005][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.862005][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.862005][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.862005][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.862005][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.862005][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.862005][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.862005][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.861211][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.861211][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.862005][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.862005][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.862005][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.862005][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.862005][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.863036][Remove Method] 'unique(java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.863036][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PUBLIC'
  - [-0.863036][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.863036][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.863036][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.865304][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.865304][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.863654][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.863654][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.863654][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.863654][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.865304][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.866335][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.865541][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.866572][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.867366][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.867366][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.866175][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.864526][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.864526][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.865716][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.866747][Inline Method] uk.co.jezuk.mango.binarypredicates.EqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.EqualTo.createuk.co.jezuk.mango.binarypredicates.EqualTo()
  - [-0.866747][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.866747][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.866747][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PACKAGE'
  - [-0.865953][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.868840][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.869634][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.866747][Introduce Factory] for uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.869015][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.868221][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.867428][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.867428][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.868221][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.869015][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.869015][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.869015][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.867825][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.869015][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.868221][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.868221][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.868221][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.868221][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.869015][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.869015][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.869015][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.869015][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.869015][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.869015][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.871283][Remove Method] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.872314][Inline Method] uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.869933][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.869933][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.869933][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.869933][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PUBLIC'
  - [-0.872314][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.872314][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.872314][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.872314][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.871696][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.871696][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.871696][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.871696][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.873345][Remove Method] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.873345][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.871696][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.871696][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.872726][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.871933][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.870742][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.870742][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.870742][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.870742][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.870742][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.870742][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.870742][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.870742][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.870742][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.872392][Remove Method] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.872392][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.874041][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.876309][Remove Field] 'buffer_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.877500][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.878346][Remove Field] 'zip_' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.878346][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.878346][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.879159][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.879159][Remove Class] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.879159][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.879985][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.879985][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.879985][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.882253][Remove Method] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.882253][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.882253][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.882253][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.883903][Remove Field] 'iterator_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.883903][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.885552][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.885552][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.887202][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.887202][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.888851][Remove Field] 'useCount' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.888851][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.886351][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.885101][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.887601][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.889251][Remove Field] 'item' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.890501][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.889251][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.889251][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.889251][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.889251][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.891519][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.889019][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.889707][Remove Field] 'buffer_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.889707][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.892271][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.893553][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.894584][Remove Method] 'findPosition(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.894584][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.894584][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.894584][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.894584][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.896233][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.All()' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.896233][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.896233][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.896972][Remove Field] 'index' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.898003][Remove Method] 'unique(java.util.Collection,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.899034][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.899034][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.898157][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.898157][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.899034][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.899723][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.899723][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.899723][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.899723][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.899723][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.899723][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.899723][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.899723][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.903847][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.906115][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.906115][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.906115][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.907369][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.906443][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.904794][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.904794][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.904099][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.904099][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.905130][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.905130][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.906056][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.906056][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.907087][Remove Method] 'unique(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.907782][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.907782][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.907782][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.907782][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.907782][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.907782][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.907782][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.906132][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer)
  - [-0.907163][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.907163][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.907163][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.907163][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.907163][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.907163][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.906469][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.905774][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.906469][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.907163][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.904385][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.904385][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.902996][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.905774][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.907163][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.907163][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.907163][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.907163][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.907163][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.905774][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.907163][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.907163][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.907163][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PUBLIC'
  - [-0.907163][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.907163][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.907163][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.907163][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.904385][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.907163][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.907163][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.907163][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.907163][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PACKAGE'
  - [-0.909431][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.909431][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.909431][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.909431][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.909431][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.909431][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.909431][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.909431][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.911699][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.910310][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.911699][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.911699][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.911699][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.911699][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.911005][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.911005][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.911005][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.912654][Remove Method] 'EqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.913349][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.913349][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.913349][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.913349][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.914380][Remove Method] 'find(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.914380][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.914380][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.914380][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.914380][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PUBLIC'
  - [-0.914380][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.914380][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.914380][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.914380][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.916029][Remove Method] 'createuk.co.jezuk.mango.Functions()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.916029][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.916029][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.916029][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.917060][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.917060][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.917060][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.917060][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.917060][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.919328][Remove Method] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.919328][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.917939][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.917939][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.919328][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.919328][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.919328][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.919328][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.919328][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.919328][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.921596][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.921596][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.921596][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PUBLIC'
  - [-0.921596][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.923246][Remove Method] 'IntegerSequence(java.lang.Integer)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.920359][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate)
  - [-0.920359][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.920359][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.920359][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.922627][Inline Method] uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Not.createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)
  - [-0.922627][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.925514][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.925514][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.927782][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.930050][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.930050][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.932318][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.933967][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.934545][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.934545][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.934545][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PACKAGE'
  - [-0.933117][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.933117][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PRIVATE'
  - [-0.930230][Introduce Factory] for uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator)
  - [-0.928802][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.928802][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.931070][Inline Method] uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator) into uk.co.jezuk.mango.iterators.GeneratorIterator.createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)
  - [-0.932498][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.930849][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-0.930849][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.932277][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.933308][Remove Method] 'execute(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.934339][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-0.934339][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.934339][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.935989][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.934560][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.934560][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.933608][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.933608][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.935036][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.933608][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.933608][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.931958][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.933387][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.934418][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.935370][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.933941][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.935370][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.935370][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.933721][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.934751][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.934751][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.933799][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.934751][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.933323][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.933323][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.929199][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.932704][Inline Method] uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nor.createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.931752][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.933181][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.934133][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.934133][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.934133][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.934133][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.934133][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.934133][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.934133][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.934133][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.934133][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.933181][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.933181][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.933181][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.936067][Remove Method] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.936067][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PUBLIC'
  - [-0.937020][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.937020][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PACKAGE'
  - [-0.938050][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.938050][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.938050][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.938050][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.938050][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.936622][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.936622][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.938890][Remove Method] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.940318][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.940318][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.939366][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.939366][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.939366][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.940318][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.938890][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.938890][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.938890][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.938890][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.938890][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.938890][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.940318][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.938890][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.940318][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.939366][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.939366][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.939366][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.939366][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.939366][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.940318][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.940318][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.940318][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.940318][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.940318][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.940318][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.940318][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PACKAGE'
  - [-0.940318][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.941349][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.941349][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.944236][Remove Method] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.945370][Remove Field] 'generator_' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.945370][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.945370][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.945370][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PACKAGE'
  - [-0.945370][Decrease Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PUBLIC'
  - [-0.945370][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.945370][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.945370][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.945370][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.945370][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.946401][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.946401][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.946401][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.946401][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.946401][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.946401][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.946401][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.948050][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.948050][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PUBLIC'
  - [-0.948050][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.948050][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.948050][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.948050][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.948050][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.948050][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.948050][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.950318][Remove Method] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.950318][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-0.950318][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.951349][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.951349][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.951349][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.951349][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.952998][Remove Method] 'BoundedIterator(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.954029][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.954029][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.954029][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.953049][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.953049][Decrease Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PUBLIC'
  - [-0.954029][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.952380][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-0.952380][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.953411][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.953411][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.953411][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.953411][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.953411][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PACKAGE'
  - [-0.956297][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.956297][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.956297][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.956297][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.957328][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.957328][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.957328][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.957328][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.957328][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.957328][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.957328][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.959596][Remove Method] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.959596][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.959596][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.959596][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.959596][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.959596][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.960627][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.960627][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.962277][Remove Field] 's_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.962277][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.962723][Remove Field] 'pos_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.962723][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.962723][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.962723][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.962723][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.962723][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.962723][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.962723][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.961208][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.962723][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.962723][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.962723][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.962723][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.962723][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.962723][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.964373][Remove Method] 'createuk.co.jezuk.mango.functions.Constant()' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.964744][Remove Field] 'value_' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.964744][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.964744][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.964744][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PUBLIC'
  - [-0.964744][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.964744][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.963094][Introduce Factory] for uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object)
  - [-0.963094][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.964125][Inline Method] uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object) into uk.co.jezuk.mango.generators.ConstantSequence.createuk.co.jezuk.mango.generators.ConstantSequence()
  - [-0.964125][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.963083][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.962042][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.963083][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.964125][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.964125][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.964125][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-0.964125][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.964125][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.964125][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.964125][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.964125][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PACKAGE'
  - [-0.964125][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.967012][Remove Method] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.969280][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.971548][Remove Field] 'pred_' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.970506][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.972156][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.973197][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.973486][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.973486][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.973486][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.975135][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.975333][Remove Field] 'seed_' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.975333][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.975333][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.975333][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.975333][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.975333][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.972000][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.975333][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.975333][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.975333][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.975333][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.975333][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.975333][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-0.975333][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.975333][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.975333][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.975333][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PACKAGE'
  - [-0.975333][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.975333][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.976364][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Function'
  - [-0.974697][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.973586][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.975253][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.975253][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.976364][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.976364][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.976364][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.976364][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.976364][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.974715][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.974715][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.974715][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.975746][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.974096][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.974096][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.975127][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.975127][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.975127][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.975127][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.975127][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.975127][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.976777][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.976777][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.976777][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.975110][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.976777][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.978426][Remove Method] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.978426][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.978426][Decrease Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PUBLIC'
  - [-0.975093][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.973426][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.976759][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.978426][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.978426][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.978426][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.978426][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.978426][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.980075][Remove Method] 'createuk.co.jezuk.mango.collections.MapFactory()' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.980075][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.978409][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.980075][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.980075][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.978409][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.980075][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.980075][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.980075][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.980075][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.980075][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.980075][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.980075][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PACKAGE'
  - [-0.981106][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.981106][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PUBLIC'
  - [-0.981106][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.979995][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.979995][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.979995][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.981106][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.979440][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.981106][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.981106][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-0.981106][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.983374][Remove Method] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.983374][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.981708][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.983374][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.982263][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.980597][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.980597][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.982263][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.983374][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.982263][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.982263][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.983374][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.983374][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.983374][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.983374][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.983374][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.983374][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.983374][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PUBLIC'
  - [-0.983374][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.985024][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.985024][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.985024][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.986673][Remove Method] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.986673][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.986673][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.986673][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.986673][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.986673][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.990797][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.993065][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.993065][Remove Class] uk.co.jezuk.mango.unarypredicates.Nor
  - [-0.993781][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.993781][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.993781][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.993781][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.993781][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.993781][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.995431][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.995431][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.997080][Remove Method] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.997080][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.997080][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.997080][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.997080][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.995356][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.997080][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.998730][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.998730][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PACKAGE'
  - [-1.001617][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-1.001617][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.001617][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-1.001617][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.004503][Remove Method] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Iterators'
  - [-1.004503][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.004503][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-1.004503][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-1.004503][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-1.004503][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.004503][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PACKAGE'
  - [-1.007390][Remove Method] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-1.007390][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-1.007390][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.009658][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-1.009658][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-1.009658][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.007934][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-1.007934][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.009658][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-1.009658][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.009658][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-1.009658][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-1.007934][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-1.009658][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-1.009658][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.009658][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-1.009658][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.009658][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-1.007934][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-1.009658][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-1.009658][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.009658][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.009658][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.009658][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.009658][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.009658][Remove Class] uk.co.jezuk.mango.unarypredicates.OneOf
  - [-1.009658][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-1.009658][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-1.012544][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-1.012544][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PUBLIC'
  - [-1.012544][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.013150][Remove Field] 'p_' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-1.013014][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-1.013014][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.011779][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.013014][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-1.013014][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.011162][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-1.013014][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-1.009310][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-1.013014][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-1.013014][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-1.013014][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.011364][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-1.009512][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-1.011364][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-1.011364][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-1.011364][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-1.011364][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.011364][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-1.011364][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-1.011364][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.011364][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-1.013014][Remove Method] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-1.013014][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.013014][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-1.013014][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.014663][Remove Method] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-1.014663][Remove Class] uk.co.jezuk.mango.iterators.ReverseIterator
  - [-1.014663][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.014663][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.013014][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-1.013014][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.013014][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.013014][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.014045][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-1.014045][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.014045][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.014045][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.012193][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.014045][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.014045][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.011158][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate)
  - [-1.013426][Inline Method] uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Not.createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)
  - [-1.013426][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.013426][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.013426][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.013426][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.013426][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-1.013152][Remove Field] 'seed_' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-1.013152][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.013152][Decrease Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PUBLIC'
  - [-1.013152][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.013152][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.013152][Remove Class] uk.co.jezuk.mango.iterators.ReverseIterator
  - [-1.013152][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-1.016039][Remove Method] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-1.016039][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.014757][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.016039][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-1.016039][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-1.015612][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-1.015612][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-1.015612][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PACKAGE'
  - [-1.018498][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-1.018498][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.018498][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-1.020148][Remove Method] 'SingletonIterator(java.lang.Object)' of type 'uk.co.jezuk.mango.Iterators'
  - [-1.020148][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.020148][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.020148][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.020148][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-1.020148][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.020148][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.018148][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.020148][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.020148][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.020148][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.020148][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.020148][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.020148][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.020148][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-1.023034][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-1.023052][Remove Field] 'p_' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-1.023052][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PUBLIC'
  - [-1.023052][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.023052][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-1.022434][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.022434][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-1.022434][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.020350][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-1.022434][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-1.022434][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.021045][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.022434][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-1.022434][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.022434][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-1.022434][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.022434][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.020350][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-1.022434][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-1.022434][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.021045][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.022434][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-1.022434][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-1.022434][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.022434][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.022434][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PACKAGE'
  - [-1.024702][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-1.024702][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-1.022618][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-1.024702][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-1.024702][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.024702][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-1.024702][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.022618][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-1.022618][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.024702][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-1.024702][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.024702][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.024702][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.024702][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.024702][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.024702][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.024702][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-1.024702][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.024702][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.024702][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-1.024702][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.024702][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.024702][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-1.024702][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-1.026970][Remove Method] 'toIterators(java.lang.Object[])' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-1.026970][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.026970][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.026970][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.026970][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.026970][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PACKAGE'
  - [-1.028001][Remove Method] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-1.028001][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.028001][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.028001][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.028001][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.028001][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.025917][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-1.028001][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-1.028001][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-1.028001][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.028001][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.028001][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-1.028001][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.028001][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.028001][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.028001][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-1.028001][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.028001][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-1.030269][Remove Method] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-1.030269][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.030269][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.030269][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-1.030269][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.030269][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-1.028880][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.030269][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-1.030269][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-1.030269][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.030269][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.030269][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-1.028185][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-1.030269][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-1.030269][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-1.031918][Remove Method] 'ArrayIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-1.031918][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.031918][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PACKAGE'
  - [-1.034186][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-1.034186][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.034186][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.034186][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.034186][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.034186][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.034186][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.034186][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-1.034186][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-1.034186][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.034186][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-1.035836][Remove Method] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.037485][Remove Field] 'array_' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.037485][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.037485][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.037485][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.037485][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-1.038516][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-1.038516][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.038516][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to 'PROTECTED'
  - [-1.038516][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.038516][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.038516][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.038516][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.038516][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.038516][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-1.038516][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.038516][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.038516][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.038516][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-1.038516][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.038516][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.038516][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.038516][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.038516][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.038516][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.038516][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.038516][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-1.038516][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.038516][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.038516][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.038516][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-1.039547][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-1.039547][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.039547][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.039547][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.039547][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-1.039547][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.039547][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.039547][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.039547][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.039547][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.039547][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-1.039547][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.039547][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.039547][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.039547][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.039547][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-1.041197][Remove Method] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.042846][Remove Field] 'spent_' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.042846][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.042846][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.042846][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.041457][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.041457][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.042846][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-1.042846][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.042846][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.041457][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.042846][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-1.042846][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.042846][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.042846][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.042846][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.042846][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.042846][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-1.042846][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.042846][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.042846][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.042846][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.042846][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to 'PUBLIC'
  - [-1.042846][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.042846][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.042846][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.042846][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.042846][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.041457][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.042846][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-1.042846][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.042846][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.042846][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.042846][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.042846][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.042846][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.042846][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.042846][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.042846][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.042846][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.042846][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.042846][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.042846][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.042846][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.042846][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.042846][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.042846][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.042846][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.042846][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.042846][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.042846][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.042846][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.042846][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.042846][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.042846][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.042846][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.042846][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.042846][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.042846][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.042846][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.042846][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.042846][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.042846][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.042846][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.042846][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.042846][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.042846][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-1.044496][Remove Method] 'BoundedIterator(java.util.Iterator,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-1.044496][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.044496][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to 'PROTECTED'
  - [-1.044496][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.044496][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.044496][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.044496][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.044496][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.044496][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.044496][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.044496][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.044496][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.044496][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.044496][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.044496][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.044496][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.044496][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.044496][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.044496][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.044496][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-1.044496][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.044496][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.044496][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.044496][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.044496][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.044496][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.044496][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.044496][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.044496][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.044496][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to 'PACKAGE'
  - [-1.045527][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Predicate'
  - [-1.045527][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.045527][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.045527][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.045527][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.045527][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.045527][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.045527][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.045527][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.045527][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.045527][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.045527][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.045527][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.045527][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.045527][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.045527][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.045527][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.045527][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.045527][Remove Class] uk.co.jezuk.mango.Generator
  - [-1.045527][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.045527][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.045527][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.045527][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.045527][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.045527][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.045527][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.045527][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.045527][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-1.045527][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.045527][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.045527][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.045527][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.045527][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.045527][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.045527][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.045527][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.045527][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.045527][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.045527][Remove Class] uk.co.jezuk.mango.iterators.SingletonIterator
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.045527][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.045527][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.045527][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.045527][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-1.045527][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-1.048413][Remove Method] 'createuk.co.jezuk.mango.iterators.BoundedIterator()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-1.049444][Remove Method] '<init>(java.util.Iterator,int,int)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.051094][Remove Field] 'end_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.051094][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.052743][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-1.053774][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.053774][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'

====== Run Result ======

* Name: Mango|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 71.83 seconds
  * Quality Gain: 0.680924
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.379076
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 2.2784
    * numOps: 4.3402
    * iFImpl: 0.4433
    * Dep_In: 2.4227
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 1.1649
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.4043
    * NumDesc: 0.0000

* Final Design:
  * Score: -1.060001
  * Possible Actions: 107
  * Applied Actions: 2753
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 0.3918
    * numOps: 0.3918
    * iFImpl: 0.4433
    * Dep_In: 0.4639
    * nesting: 0.1237
    * numCls: 11.3750
    * numFields: 0.4021
    * abstractness: 0.0268
    * numInterf: 0.7500
    * NOC: 0.0000
    * avrgFieldVisibility: 0.6136
    * NumDesc: 0.0000

* Applied Actions:
  - [-0.377427][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.378458][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.377532][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.378563][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.377946][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.378976][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.378358][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to static 
  - [-0.377741][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.378772][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.378772][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.378772][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.378772][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.378772][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.379802][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.379184][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.379184][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.380215][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.380215][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.380215][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.380215][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.380215][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.380215][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.380215][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.380215][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.380215][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.380832][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.380832][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.381863][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.382894][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.382894][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.382894][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.382894][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.383925][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.384956][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.384956][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.385987][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.385987][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.385987][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.385987][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.385987][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.385987][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.387018][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.388049][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.389080][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.389080][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.389080][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.389080][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.390110][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.390110][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.390110][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.391141][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.391141][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.391141][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.392172][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.392172][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.393203][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.393203][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.394234][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.394234][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.394234][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.394234][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.395265][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.396296][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.396296][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.397327][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.397327][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.397327][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.397327][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.398358][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.398358][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.399389][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.399389][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.399389][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.400420][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.400420][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.401451][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.402482][Remove Method] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.401863][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to static 
  - [-0.402894][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402894][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.401244][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.402275][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.403306][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.403306][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.403306][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403306][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.403306][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.403306][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404337][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.404337][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404337][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404337][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404337][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404337][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.405368][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.406399][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.406399][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.406399][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.406399][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.407430][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.406813][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.406813][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.406813][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.406813][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.406813][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.406194][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.406194][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to static 
  - [-0.407225][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.407225][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.407225][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.408256][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.408256][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.408719][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.408719][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.409750][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.410781][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.411812][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.408925][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate)
  - [-0.408462][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.408462][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.408462][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.408462][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.408462][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.408462][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.408462][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.408462][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.408462][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.410730][Inline Method] uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Not.createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)
  - [-0.411761][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.412792][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.413823][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.413823][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.413823][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.413823][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.413823][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.413823][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.413205][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to static 
  - [-0.413205][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.412587][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.415474][Remove Method] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.417742][Remove Method] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.417279][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.417279][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.417279][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.417279][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.417279][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.417279][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.417279][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.417279][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.416660][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.416660][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.416660][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.416660][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.418928][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.418928][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.418928][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.418002][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.419033][Remove Method] 'containsValue(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.419033][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.419033][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.418107][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.418107][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.418107][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.418107][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.417489][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.417489][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.417489][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.417489][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.417489][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.417489][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.417489][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.417489][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.421613][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.420995][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.420995][Decrease Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.420995][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.420995][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.420995][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.423263][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.423263][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.423263][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.424294][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.424294][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.424294][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.424294][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.425325][Remove Method] 'unique(java.util.Collection,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.425325][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.424862][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.424862][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.425893][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.Object)
  - [-0.425893][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.425893][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.426924][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.426924][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.426924][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.426306][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to static 
  - [-0.428574][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.428574][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.428574][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.428574][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.428574][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.428574][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.429605][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.429605][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.430635][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.430635][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.430635][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.430635][Decrease Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.430635][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.430635][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.430635][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to static 
  - [-0.434759][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.434759][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.434759][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.434759][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.435685][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.435685][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.435685][Decrease Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.436611][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.436611][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.436611][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.437537][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.438463][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.438463][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.439389][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.440315][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.440315][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.440315][Increase Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.440315][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.440315][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.440315][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.441346][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.441346][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.442377][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.443408][Remove Method] 'remove(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.443408][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.443408][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.443408][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.443408][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.442482][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.442482][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.443513][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.443513][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.443513][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.443513][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.444543][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.444543][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.444543][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.444543][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.445469][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.445469][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to static 
  - [-0.445469][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.445469][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.445469][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.445469][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.445469][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.445469][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.445469][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.446500][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.446500][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.445574][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.445574][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.446605][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.446605][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.446605][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.447068][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.449336][Remove Method] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.448718][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to static 
  - [-0.448718][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.448718][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.448718][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.448718][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.448718][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.449749][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.449749][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.449749][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.449749][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.450780][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.451706][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.451706][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to static 
  - [-0.452323][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.452323][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.452323][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.452323][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.452940][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.452477][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.453094][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.453712][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.453712][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.453712][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.453712][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.453712][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.453712][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.453712][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.453712][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.453712][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.453712][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.454329][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.454329][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.454329][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.454329][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.453712][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.454743][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.454743][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.455360][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.455977][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.455051][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.455051][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.455051][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.455051][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.455977][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.455977][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.455977][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.456595][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.457212][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.456593][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.456593][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.457211][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.457211][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.457828][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.458445][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.458445][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.458908][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.458908][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.458908][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.458908][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.458908][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.460558][Remove Method] 'Constant(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.460558][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.460558][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.462207][Remove Method] 'ZipIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.462207][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.462207][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.463238][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.463238][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.463855][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.463855][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.463855][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.464473][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.464473][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.464473][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.465090][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.465553][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.466016][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.466016][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.465397][Freeze Method] Convert 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.465397][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.465860][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.465860][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.466323][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.466323][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.466323][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.466323][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.466323][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.466323][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.466323][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.466323][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.466786][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.466786][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.467817][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.467817][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.468848][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.468848][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.468848][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.468848][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.469311][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.469311][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.469311][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.468692][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to static 
  - [-0.468075][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.469725][Remove Method] 'IntegerSequence(java.lang.Integer)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.469725][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.469725][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.469725][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.469725][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.473848][Remove Method] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.473848][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.473230][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to static 
  - [-0.474879][Remove Method] 'ChainIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.475496][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.475496][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.475033][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.475033][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.477920][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.480188][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.480188][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.479570][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.479570][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.479570][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.482301][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.482301][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.482301][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.482301][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.481838][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.481838][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.483487][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.483487][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.483487][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.482869][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to static 
  - [-0.482869][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.482869][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.482869][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.482869][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.482869][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.484518][Remove Method] 'SingletonIterator(java.lang.Object)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.485549][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.485549][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.485549][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.486580][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.487611][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.487611][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.487611][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.487611][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.488642][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.488642][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.488642][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.488642][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.489105][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.489568][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.489568][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.491836][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.492299][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.492762][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.492144][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.492144][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.492144][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.492144][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.492144][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.493175][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.493175][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.492712][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.493330][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.493793][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.493793][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.493793][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.494256][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.494256][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.494718][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.494718][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.495749][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.494823][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.494823][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.494823][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.494823][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.493898][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.492248][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.492248][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.492248][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.493898][Remove Method] 'EqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.493898][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.494928][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.495854][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.495854][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.495854][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.495854][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.495854][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.495854][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.498122][Remove Method] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.498122][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.498122][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.499153][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.499153][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.498535][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.498535][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.498535][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.498535][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.498535][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.498535][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.498535][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.498535][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.498535][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.498535][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.498535][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.498535][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.499566][Remove Method] 'OneOf(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.499566][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.500597][Inline Method] uk.co.jezuk.mango.Predicates.OneOf(java.util.Iterator) into uk.co.jezuk.mango.Predicates.OneOf(java.lang.Object[])
  - [-0.500597][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.500597][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.500597][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.500597][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.500597][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.500597][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.501523][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.501523][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.502554][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.501935][Freeze Method] Convert 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.501935][Increase Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.501316][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to static 
  - [-0.501316][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.506677][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.506677][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.506677][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.506677][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.506677][Decrease Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.506677][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.506677][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.506677][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.506677][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.506677][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.506677][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.511420][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.511420][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.511420][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.511420][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.513688][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.513688][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.512762][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.513688][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.513688][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.512762][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.512762][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.514411][Remove Method] 'GreaterThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.514411][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.514411][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.515442][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.514979][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.514979][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.514979][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.514361][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.514361][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.514361][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.514361][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.513743][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.513743][Increase Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.514669][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.514669][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.514669][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.515286][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.515286][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.515286][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.515286][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.515749][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.515749][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.515749][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.515749][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.515749][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.515749][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.515749][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.515749][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.515749][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.515749][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.515749][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.515749][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.515749][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.515749][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.515749][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.515749][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.515749][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.517399][Remove Method] 'StringIterator(java.lang.String)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.517399][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.517399][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.517399][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.517399][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.518430][Remove Method] 'findPosition(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.518430][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.519461][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.519461][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.520492][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.520492][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.521523][Inline Method] uk.co.jezuk.mango.Predicates.Any(java.util.Iterator) into uk.co.jezuk.mango.Predicates.Any(java.lang.Object[])
  - [-0.521523][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.520904][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.520904][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.520904][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.520904][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.520904][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.520904][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.520904][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.525028][Remove Method] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.525028][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.527914][Remove Method] 'Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.527914][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.529564][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.529564][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.529564][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.529564][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.529564][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.529564][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.530595][Remove Method] 'put(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.530595][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.530595][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.530595][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.530595][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.530595][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.529976][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.529976][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.529976][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.529976][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.529976][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.529976][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.529976][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.529976][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.531007][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.531007][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.531007][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.531007][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.531007][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.531007][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.531007][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.531007][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.531007][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.531007][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.531007][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.531007][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.531007][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.531007][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.531007][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.531007][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.535131][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.535131][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.535131][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.536780][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.536780][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.536780][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.538430][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.539461][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.538842][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to static 
  - [-0.538224][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to static 
  - [-0.538224][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.538224][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.538224][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.538224][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.539255][Remove Method] 'find(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.539255][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.539255][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.540285][Remove Method] 'values()' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.540285][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.541316][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.541316][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.541316][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.541316][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.540390][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.539928][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.539928][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.539928][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.539928][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.539928][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.539928][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.539928][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.541577][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.542608][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.542608][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.542608][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.543639][Remove Method] 'findPosition(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.544565][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.545028][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.545028][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.545028][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.544409][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.544409][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.544409][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.544409][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.543791][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.543791][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.542865][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.542865][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.542865][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.542865][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.542865][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.542865][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.542865][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.542865][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.545133][Remove Method] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.545133][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.546782][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.548432][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.548432][Decrease Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.548432][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.549463][Remove Method] 'unique(java.util.Collection,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.550494][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.550494][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.550494][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.550494][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.550494][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.550494][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.550494][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.550494][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.551525][Remove Method] 'intersection(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.552555][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.552555][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.552555][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.552555][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.552555][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.552555][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.552555][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.552555][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.552555][Decrease Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.552555][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.552555][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.552555][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.554823][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.557092][Remove Method] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.557092][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.558122][Remove Method] 'True()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.559153][Inline Method] uk.co.jezuk.mango.Adapt.wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)
  - [-0.559153][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.559153][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.560184][Remove Method] 'remove(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.561215][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.562141][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.562141][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.562141][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.562141][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.562141][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.562141][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.562141][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.562141][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.562141][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.562141][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.561678][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.561678][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.561678][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.561678][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.562141][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.562141][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.562141][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.562141][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.562141][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.562141][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.562141][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.562141][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.562141][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.562141][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.564409][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.564409][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.564409][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.564409][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.564409][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.563792][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.563792][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.565441][Remove Method] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.565441][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.564823][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.566472][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.567503][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.568534][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.findNext() into uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.568534][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.567916][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.567916][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.567916][Decrease Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.567916][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.568947][Remove Method] 'unique(java.util.Collection,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.568947][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.569564][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.569564][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.569564][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.569564][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.568638][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.569564][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.569564][Decrease Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.569564][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.569564][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.569564][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.569564][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.571832][Remove Method] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.571832][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.571832][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.571832][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.571369][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.571369][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.571369][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.571369][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.573637][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.573637][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.574100][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.574100][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.574100][Decrease Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.574100][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.574100][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.574100][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.574100][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.574100][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.574100][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.578224][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.578224][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.578224][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.577605][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to static 
  - [-0.576988][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.578019][Remove Method] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.577093][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.577093][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.578019][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.576369][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.575752][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.575752][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.575752][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.576783][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.576783][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.576783][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.576783][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.576783][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to static 
  - [-0.576783][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.576783][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.576783][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.579669][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.579669][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.579669][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.581938][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.581938][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.583587][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.583124][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.585392][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.585392][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.587660][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.588691][Inline Method] uk.co.jezuk.mango.binarypredicates.EqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.EqualTo.createuk.co.jezuk.mango.binarypredicates.EqualTo()
  - [-0.588691][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.589802][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.589802][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.589802][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.589183][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.589183][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.589183][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.588712][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.589743][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.589743][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.589743][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.589743][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.589743][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.589743][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.590371][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.590371][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.590371][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.590371][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.592640][Remove Method] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.592640][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.592640][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.592640][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.592640][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.593670][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.593670][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.593670][Decrease Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.593670][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.593670][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.594299][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.594299][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.594299][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.594299][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.594299][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.594299][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.595330][Remove Method] 'values()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.595802][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.595802][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.595802][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.595802][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.596833][Remove Method] 'find(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.597305][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.597305][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.597305][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.597305][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.597305][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.597305][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.597305][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.597305][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.598336][Remove Method] 'unique(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.596449][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.596449][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.596449][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.596449][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.596449][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.596449][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.598717][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.598717][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.598717][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.598717][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.598717][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.598717][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.600985][Remove Method] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.602872][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.604521][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.604521][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.604521][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.604521][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.604521][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.604521][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.606789][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.606789][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.608439][Remove Method] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.608439][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.610088][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.610088][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.611738][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.611119][Freeze Method] Convert 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.611119][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.611119][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.611119][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.611119][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.610500][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.611531][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.611531][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.610588][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.611531][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.611531][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.612562][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.612562][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.610913][Introduce Factory] for uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String)
  - [-0.610294][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.610294][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.611325][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.611325][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.612356][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.611413][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.611413][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.611413][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.611413][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.611413][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.612444][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.613475][Remove Method] 'values()' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.613475][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.614506][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()
  - [-0.615449][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.615449][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.615449][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.615449][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.615449][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.615449][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.615449][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.615449][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.617717][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.617717][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.617717][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.617717][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.617717][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.618748][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.619779][Remove Method] 'find(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.619307][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.619307][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.619307][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.619307][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.619779][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.619779][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.619779][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.619779][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.619779][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.619779][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.619779][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.619779][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.619779][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.619779][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.619779][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.622047][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.622047][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.623078][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.623078][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.623078][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.623078][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.624109][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.624109][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.624109][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.624109][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.625758][Remove Method] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.626789][Remove Method] 'unique(java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.626789][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.626789][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.626789][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.626789][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.628439][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.628439][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.628439][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.628439][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.627810][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.627810][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.628439][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.628439][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.628439][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.628439][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.629470][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.630500][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.has(int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.630500][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.629872][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.629872][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.630500][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.630500][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.630500][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.630500][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.630500][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.629882][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.629882][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.632150][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.633799][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.fn(uk.co.jezuk.mango.generators.IntegerSequence) into uk.co.jezuk.mango.generators.IntegerSequence.fn()
  - [-0.633799][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.633799][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.633799][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.633799][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.633799][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.633799][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.633799][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.631913][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.631913][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.633799][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.633799][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.635449][Remove Method] 'createuk.co.jezuk.mango.Generators()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.635449][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.635449][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.635449][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.638336][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.638336][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.638336][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.640077][Remove Field] 'p_' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.640077][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.641727][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.641727][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.641727][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.643376][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.643376][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.643376][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.643376][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.645644][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.645644][Decrease Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.645644][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.646675][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.646675][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.646675][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.646675][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.646675][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.648943][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.648943][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.648943][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.648302][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.648943][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.648943][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.648943][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.648943][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.648943][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.648943][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.648943][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.649974][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.649974][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.649013][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.649013][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.649974][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.649974][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.649974][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.651624][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.652655][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.652655][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.652655][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.654923][Remove Method] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.654923][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.655954][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.655954][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.655954][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.655954][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.655954][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.655335][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.655335][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.655335][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.654374][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.656642][Remove Method] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.656642][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.656642][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.658291][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.658291][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.658291][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.658291][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.658291][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.658291][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.658291][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PUBLIC'
  - [-0.658291][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.658291][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.658291][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.661178][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.661178][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.661178][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.663446][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.664477][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.664477][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.664477][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.665508][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.665508][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.665508][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.666469][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.666469][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.665851][Freeze Method] Convert 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.665851][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.665851][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.665851][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.665851][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.666882][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.667913][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.667913][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.667913][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.669562][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.669562][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.669562][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.669562][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.669562][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.669562][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.669081][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.669081][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.671349][Remove Method] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.671830][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.671211][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to static 
  - [-0.671211][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PUBLIC'
  - [-0.671211][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.671211][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.671211][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.670593][Freeze Method] Convert 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.670593][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.670593][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.669631][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.669631][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.669631][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.669631][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.669631][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.671899][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.671899][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.671899][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.671899][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.672930][Remove Method] 'Method(java.lang.Object,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.673961][Remove Method] '<init>(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.673961][Decrease Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.675611][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.675130][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.676204][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.676204][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.676204][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.676204][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.678472][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.679503][Remove Method] 'containsKey(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.677854][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>()
  - [-0.677854][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.677235][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.677235][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.676745][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.676745][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.676745][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.676745][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.679013][Remove Method] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.680663][Remove Method] 'LessThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.682312][Remove Method] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.683343][Inline Method] uk.co.jezuk.mango.Adapt.verifyReturnType(java.lang.reflect.Method,java.lang.Class) into uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)
  - [-0.684374][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThan.createuk.co.jezuk.mango.binarypredicates.GreaterThan()
  - [-0.682725][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.682725][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.683755][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.683755][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.683755][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.684736][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.685226][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.685226][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.685226][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.682339][Introduce Factory] for uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function)
  - [-0.681359][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.681359][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.681359][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.681359][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.680379][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.680379][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.679725][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.681993][Inline Method] uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function) into uk.co.jezuk.mango.iterators.TransformIterator.createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)
  - [-0.682974][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.682974][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.682355][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.683335][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.682717][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.682717][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.682717][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.683748][Remove Method] 'size()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.683748][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.683748][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.684401][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.684892][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.684892][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.684892][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.684892][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.684892][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.684892][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.685922][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.685922][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.685922][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.685922][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.685922][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.684942][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.684942][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.685973][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.687004][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.687984][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.687984][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.687984][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.687984][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.687984][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.687984][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.687984][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.689634][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.688653][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.688653][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.689634][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.689634][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.689144][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.689144][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.689144][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.689634][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.689634][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.689634][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.689634][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.689634][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.688980][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.688980][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.689634][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.689634][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.689634][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.689634][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.690665][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.690665][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.690665][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.690665][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.690665][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.690665][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.690665][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.692314][Remove Method] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.692314][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.692314][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.692314][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.692314][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.692314][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.692314][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.693345][Remove Method] 'findPosition(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.693345][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.694376][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.693396][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.693396][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.693396][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.693396][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.694376][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.694376][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.694376][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PUBLIC'
  - [-0.694376][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.694376][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.694376][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.693886][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.694376][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.694376][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.694376][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.694376][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.693722][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.693722][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.693722][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.694376][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.694376][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.694376][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.694376][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.694376][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.695407][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.695407][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.695407][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.695407][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.695407][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.695407][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.695407][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.695407][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PACKAGE'
  - [-0.695407][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.695407][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.695407][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.698294][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.698294][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.698294][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.698294][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.698294][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.698294][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.696644][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.697675][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.697675][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.697675][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.698706][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.697726][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.697726][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.697726][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.697726][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.696745][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.696745][Decrease Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.696745][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.698395][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.700663][Remove Method] '<init>(uk.co.jezuk.mango.collections.MapFactory$1)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.701694][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.702674][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.703654][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.703654][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.699531][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.699531][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.698877][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.698877][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.697228][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.697228][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.697228][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.700733][Inline Method] uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xnor.createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.700733][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.702382][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.703413][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.703413][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.704444][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.704444][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.704444][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.704444][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.703954][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.704608][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.704608][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.705098][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.705098][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.705098][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.705098][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.705098][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.705098][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.705098][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.706747][Remove Method] 'createuk.co.jezuk.mango.iterators.StringIterator()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.706747][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.706747][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.707778][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.707778][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.708809][Inline Method] uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.Method(java.lang.Class,java.lang.String)
  - [-0.708809][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.708809][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.708809][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.707160][Introduce Factory] for uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class)
  - [-0.708190][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()
  - [-0.707572][Freeze Method] Convert 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.706592][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.707572][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.707082][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.707572][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.706918][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.706918][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.706918][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.706918][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.706265][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.706265][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.706265][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.706265][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.706265][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.706265][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.707914][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.708945][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.709599][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.710252][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.710252][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.710252][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.711283][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.710793][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.711283][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.711283][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.710793][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.713061][Remove Method] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.713551][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.713551][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.713551][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.713551][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.713551][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.712571][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.710610][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.710610][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.712571][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.712571][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.713602][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.713602][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.714582][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.714582][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.716232][Remove Method] 'NotEqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.716232][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.716232][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.716232][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.716232][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.717263][Remove Method] 'get(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.717263][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.717263][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.717263][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PACKAGE'
  - [-0.717263][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.717263][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.717263][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.717263][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.717263][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.717263][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.718912][Remove Method] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.719943][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.720974][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.720974][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.720974][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.722623][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.722623][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.722623][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.722623][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.722133][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.722133][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.725020][Remove Method] 'Method(java.lang.Class,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.725020][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PACKAGE'
  - [-0.727288][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.727288][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.727288][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.728937][Remove Method] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.730008][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.730008][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.730008][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.732895][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.735163][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.737264][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.738581][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.739612][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.738612][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.738112][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.738112][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.739761][Remove Method] 'All(java.util.Iterator)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.740792][Remove Method] '<init>(java.lang.Object,java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.742941][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.741941][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.741941][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.743591][Remove Field] 'val$obj' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.743591][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.744622][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.745653][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.745034][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.745034][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.746684][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.next(uk.co.jezuk.mango.iterators.ZipIterator) into uk.co.jezuk.mango.iterators.ZipIterator.next()
  - [-0.746684][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.747684][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.747184][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.748184][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.749184][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.749684][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.749684][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.749684][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.749017][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.750048][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.750048][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.750048][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.752316][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.752316][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.753360][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.753360][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.753360][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.753360][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.753360][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.755010][Remove Method] 'ReverseIterator(java.util.List)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.753360][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.754391][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.754391][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.754391][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.754391][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.754391][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.753371][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.752350][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.753371][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.754391][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.754391][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.754391][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.754391][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.753881][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.753201][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.753201][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.753201][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.753201][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.754850][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.754850][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.757118][Remove Method] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.758768][Remove Field] 'val$methodName' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.760417][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.761448][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.762442][Remove Field] 'lastClass_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.762442][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.762442][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.762442][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.762442][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.762442][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.763136][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.763136][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.763657][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.763657][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.763657][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.765307][Remove Method] 'ArrayIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.765307][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.766956][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.767987][Inline Method] uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.767466][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.767466][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.767987][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.767987][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.767293][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.766598][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.768248][Remove Method] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.769210][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.769919][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.769919][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.769919][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.769919][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.769919][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.769919][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.769919][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.769919][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.769919][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.771569][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.773218][Remove Method] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.774249][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.774249][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.774249][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.774249][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PACKAGE'
  - [-0.774249][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.774249][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.778373][Remove Method] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.778373][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.778373][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.781878][Remove Method] '<init>(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.781878][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.784146][Remove Field] 'val$g' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.783528][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.783528][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.782464][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.782464][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.782464][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.781755][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.784641][Remove Method] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.784641][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.785672][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.785672][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.787322][Remove Method] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.786612][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.786612][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.788262][Remove Field] 'valid_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.788262][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.790530][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.790530][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.789821][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.789821][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.789821][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.789821][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.789821][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.791470][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.793120][Remove Method] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.793120][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.794617][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.794617][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.794617][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.794617][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.794617][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.794617][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.793892][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.794979][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.794979][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.793892][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.793892][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.793892][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.794979][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.796010][Remove Method] 'count(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.795285][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.796316][Remove Method] 'TeeIterator(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.797347][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.798378][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.798378][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.799409][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.800134][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.798484][Introduce Factory] for uk.co.jezuk.mango.Functions.<init>()
  - [-0.799515][Inline Method] uk.co.jezuk.mango.Functions.<init>() into uk.co.jezuk.mango.Functions.createuk.co.jezuk.mango.Functions()
  - [-0.800240][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.800964][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.799878][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.800964][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.800240][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.800964][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.800240][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.800240][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.800240][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.799153][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.799153][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.799153][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.798609][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.800259][Remove Method] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.801346][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.802070][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.802070][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.802795][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.802795][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.802795][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.805682][Remove Method] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.805682][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.805682][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.805682][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.805682][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.807950][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.808981][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.810012][Remove Method] 'values()' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.810555][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.810555][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.809468][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.811118][Remove Method] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.811118][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.811118][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.811118][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.812205][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.812205][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.812205][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.812205][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.812205][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.811480][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.811480][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.811480][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.811480][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.811480][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.813748][Remove Method] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.814779][Remove Method] 'True()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.815504][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.815504][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.815504][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.815504][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.815504][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.815504][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.816534][Inline Method] uk.co.jezuk.mango.algorithms.SymmetricDifference.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.SymmetricDifference.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.815448][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.816534][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.816534][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.816534][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.816534][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.816534][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.816534][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.816534][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.816534][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.816534][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.817565][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.817565][Decrease Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.817565][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.817565][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.817565][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.817565][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.818596][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.818596][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.818596][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.817509][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.817509][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.819159][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.819159][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.820246][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.820246][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.819521][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.818978][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.818978][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.818978][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.818978][Decrease Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PUBLIC'
  - [-0.818978][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.820627][Remove Method] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.820627][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.822895][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.822895][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.824545][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.822371][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.822371][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.822371][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PRIVATE'
  - [-0.822371][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.824545][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.825576][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.825576][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.826300][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.826300][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.826300][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.826300][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.828568][Remove Method] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.829112][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.829112][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.829112][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PACKAGE'
  - [-0.829112][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.829112][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.831380][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.830655][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.830655][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.830655][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.830655][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.831380][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.831380][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.831380][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.833029][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.834679][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.835579][Remove Field] 'obj_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.835579][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.835579][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.833930][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-0.834961][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-0.832739][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.834961][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.834961][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.834961][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.834961][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.834961][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.834961][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.834961][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.834961][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.834961][Decrease Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.834405][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.834961][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.834961][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.834961][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.834961][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.834961][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.834961][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.834961][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.834961][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.834961][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.832739][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.832739][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.832739][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.831628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.831628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.829978][Introduce Factory] for uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object)
  - [-0.829978][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PACKAGE'
  - [-0.832865][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.832865][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.835087][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.835087][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.836736][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.838386][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.839497][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.840528][Inline Method] uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object) into uk.co.jezuk.mango.generators.ConstantSequence.createuk.co.jezuk.mango.generators.ConstantSequence()
  - [-0.840528][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.840528][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.839417][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.839417][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.839417][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.838306][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.838306][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.837195][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.838306][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.839417][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.839417][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.840528][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.840528][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.840528][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.840528][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.840528][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.842177][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.842177][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.842177][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.840528][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer)
  - [-0.841559][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.841559][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.842590][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.842590][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.842590][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.842590][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.842590][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.841849][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.841849][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.841849][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.842590][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.841849][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.841849][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.842590][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.842590][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.842590][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.842590][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.842590][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.842590][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.844239][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.844239][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.844239][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.844239][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.844239][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.844239][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.845889][Remove Method] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.845889][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.845889][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.845889][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.847538][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.849806][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.849806][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.850673][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.850673][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.850673][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.850673][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.850673][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.850673][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.850673][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.850673][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.850673][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.850054][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.848405][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-0.848405][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.848405][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.848405][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.848405][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.848405][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.849436][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.849436][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.849436][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.849436][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.849436][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.849436][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.849436][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.849436][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.849436][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.849436][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.851704][Remove Method] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.851704][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.851704][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.850946][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.850946][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.850946][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.850189][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.850189][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.849431][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.852318][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.852318][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.854586][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.854586][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.856854][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.856854][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.859122][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.859122][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.858554][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.858554][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.858554][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.857796][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.860064][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.861714][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.861714][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.863363][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.864394][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.866662][Remove Field] 'val$g1' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.866662][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.868930][Remove Field] 'val$g2' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.867794][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.869132][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.870295][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.869677][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.870708][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunction'
  - [-0.871483][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.872258][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.872258][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.872258][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.872258][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.873033][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.873808][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.874586][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.874586][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PACKAGE'
  - [-0.874586][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.876854][Remove Method] 'wrap(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.877449][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.877449][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.877449][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.877449][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.877449][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.877449][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.878480][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.877885][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.876694][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.876694][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.877885][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.877885][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.877885][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.878916][Remove Method] 'remove(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.879511][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.878320][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.879511][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.879511][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.881779][Remove Method] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.881779][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.881779][Decrease Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.881779][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.881779][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.881779][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.881779][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.881779][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.881779][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.879398][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.881779][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.880129][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator)
  - [-0.881160][Inline Method] uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.Any.createuk.co.jezuk.mango.unarypredicates.Any()
  - [-0.879970][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.879970][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.879970][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.879970][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.881160][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.881160][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.881160][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.881160][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.881160][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.881160][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.879970][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.881160][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.882191][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.882191][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.882191][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.879305][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.878114][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.880382][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.880382][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.880382][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.880382][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.881573][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.881573][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.879923][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory.<init>()
  - [-0.880954][Inline Method] uk.co.jezuk.mango.collections.MapFactory.<init>() into uk.co.jezuk.mango.collections.MapFactory.createuk.co.jezuk.mango.collections.MapFactory()
  - [-0.880954][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PACKAGE'
  - [-0.881985][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryPredicate'
  - [-0.880795][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.881985][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.881985][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.879604][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.879604][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.881985][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.881985][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.881985][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.879604][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.881985][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.881985][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.880336][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.880336][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.881367][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.882398][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.881604][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.881604][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.882398][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.882398][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.882398][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.884047][Remove Method] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.882857][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.884047][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.882857][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.884047][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.882857][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.884047][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.883253][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.883253][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.881604][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.882635][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.882635][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.882040][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.882833][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.883428][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.883428][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.883428][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PUBLIC'
  - [-0.883428][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.883428][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.884459][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections$MapBuilder'
  - [-0.884459][Decrease Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.884459][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.884459][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.884459][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.886109][Remove Method] 'createuk.co.jezuk.mango.functions.Constant()' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.886858][Remove Field] 'value_' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.886858][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.886858][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.886858][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.886858][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.886248][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.886248][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.885435][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.886248][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.882125][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.885630][Inline Method] uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.And.createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.884817][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.885630][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.886240][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.886240][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.886240][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.885020][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.886240][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.886240][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.886240][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.886240][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.886240][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.886240][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-0.886240][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.887271][Remove Method] 'remove(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.886661][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.886661][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PACKAGE'
  - [-0.889547][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.888734][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.888734][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.888734][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.889547][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.890157][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.890157][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.890157][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.890157][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.890157][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.890157][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.890157][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.890157][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.892425][Remove Method] 'Any(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.892425][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.894693][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.894693][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.895724][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.895724][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.896755][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.896755][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.896755][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.895536][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.896755][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.896755][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.896755][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.896755][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.896755][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.896755][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.896755][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.896755][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.896755][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.899023][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.897374][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.898405][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.898405][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.898405][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.898405][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.898405][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.899436][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.899436][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.899436][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.899436][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.899436][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.896997][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.899436][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.899436][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.899436][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-0.899436][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.899436][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.896997][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.896997][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.899436][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.899436][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.896549][Introduce Factory] for uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.900673][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.900673][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.900673][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.900673][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.902941][Inline Method] uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SelectingIterator.createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.905209][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.906532][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.906532][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.906532][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.906532][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.905698][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.905698][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.905698][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.905698][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PUBLIC'
  - [-0.905698][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.905698][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PACKAGE'
  - [-0.906729][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.906729][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.906729][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.907760][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.Generator'
  - [-0.907760][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.907135][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.907760][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.907760][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.907760][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.907760][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.907760][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.907760][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.907760][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.907760][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.907760][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.907760][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.905260][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.905260][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.905260][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.905260][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.908147][Remove Method] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.910647][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.910647][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.910647][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.910647][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.910647][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.910647][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.910647][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.910647][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.910647][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.912915][Remove Field] 'transform_' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.914564][Remove Method] 'createuk.co.jezuk.mango.Functions()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.914564][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.914564][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.915199][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.915199][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.915199][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.919323][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.919323][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.921591][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.922790][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.922790][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.922790][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.922790][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.921474][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.922790][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.922790][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.922790][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.922790][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.921474][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.919825][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.919206][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.920856][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.next(uk.co.jezuk.mango.iterators.StringIterator) into uk.co.jezuk.mango.iterators.StringIterator.next()
  - [-0.920856][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.920856][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.922172][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.923203][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.922325][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.922325][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.922325][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.923203][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.923203][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.924080][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.923422][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.924299][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.924299][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.925949][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.All()' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.926826][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.926826][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.926826][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.926826][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.929094][Remove Method] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.929752][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.929133][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.930783][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.932432][Remove Method] 'createuk.co.jezuk.mango.collections.MapFactory()' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.933027][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.933027][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.933027][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.933027][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PUBLIC'
  - [-0.934058][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.933382][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.932481][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.932481][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.929594][Introduce Factory] for uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.931862][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.931187][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.931862][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.932538][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.932538][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.934188][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.935837][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.936348][Remove Field] 'argType_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.936348][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.936348][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.934959][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.936348][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.936348][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.936348][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.936348][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.934959][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.933310][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.934698][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.934698][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.934698][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.934698][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.935729][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.935729][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.935729][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.935729][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.934803][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.935729][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.935729][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.935729][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.937379][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.937379][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.937379][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.937379][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.937379][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PROTECTED'
  - [-0.937379][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.937379][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PACKAGE'
  - [-0.936453][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.937484][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.937484][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.938410][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.938410][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.938410][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.938410][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.937715][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.937715][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.938410][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.937484][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.937484][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.939133][Remove Method] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.936356][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.936356][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.939133][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.939133][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.939133][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.939133][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.937744][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.939133][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.939133][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.940783][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.940783][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.939394][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.939394][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.939394][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.941043][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.941043][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIfNot' to 'PACKAGE'
  - [-0.943930][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.945319][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.945319][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.945319][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.945319][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.945319][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.945319][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.944393][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.945319][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.945319][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.942541][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.945319][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.945319][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.945319][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.945319][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.945319][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.943930][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.945319][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.945319][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.945319][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.943930][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.945319][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.945319][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.943669][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.944700][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.944700][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.944700][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.944700][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PACKAGE'
  - [-0.944700][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.946968][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.946968][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.946968][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.949855][Remove Method] 'createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.949855][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.949855][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.952742][Remove Method] 'createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.955010][Remove Field] 'pred_' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.956659][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.958927][Remove Field] 'pred_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.958927][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.959346][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.958394][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.959346][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.959346][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.958394][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.959346][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.959346][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.958394][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.959346][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.959346][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.959346][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.960996][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.959567][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.959567][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.960996][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.960996][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.960996][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.960996][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.959346][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.960377][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.958949][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.958949][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.960377][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.960377][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.960377][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.960377][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.960377][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.960377][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.960377][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.960377][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.960377][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.960377][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.960377][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.960377][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.960377][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.960377][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.964501][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.964501][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.964501][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.963549][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.965198][Remove Method] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.965517][Remove Field] 'seed_' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.966498][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.966498][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.964848][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.964848][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.963377][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.964848][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.964848][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.965879][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.965879][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.965144][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.964408][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.965144][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.964408][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.965144][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.964163][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.964163][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.965144][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.965879][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.965879][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.965879][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.965879][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.965879][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.968766][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.971034][Remove Field] 'buffer_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.971302][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.971302][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.971302][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.971302][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.968271][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.966756][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.969787][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.971302][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.971302][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.969787][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.969787][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.972673][Remove Method] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.974188][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.974188][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.974188][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.974188][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.974188][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.974188][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.974188][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.974188][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.974188][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.974188][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.974188][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.974188][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.972673][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.974188][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.973178][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.973178][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.973178][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.973178][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.974188][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.974188][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.975838][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Any()' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.976019][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.976019][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.976019][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.977669][Remove Method] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.976627][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.977669][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.977756][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.977756][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.977756][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.977756][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.976143][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.976143][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.977756][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.976143][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.977756][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.976681][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.976681][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.977756][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.977756][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.977756][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.976949][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.977756][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.977756][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.977756][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.976949][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.981073][Remove Method] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.981073][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.981880][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.981880][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.981880][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.983529][Remove Method] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.983529][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.981880][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.982911][Inline Method] uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ChainIterator.createuk.co.jezuk.mango.iterators.ChainIterator()
  - [-0.982911][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.982911][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.982911][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.982911][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.981298][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.979685][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.979685][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.979685][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.981953][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.983566][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.983566][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.985179][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.984372][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.982759][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.984372][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.985179][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.985179][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.985179][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.985179][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.985179][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.985179][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PACKAGE'
  - [-0.987447][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.987447][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.987447][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-0.987447][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.987447][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.985834][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.987447][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.984221][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.987447][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.986371][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.987447][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.984221][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.987447][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.987447][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.987447][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.987447][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.987447][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.987447][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.987447][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.986371][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.986371][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.986371][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.986371][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PUBLIC'
  - [-0.986371][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.986371][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.987402][Remove Method] 'count(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.987402][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.987402][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.987402][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.987402][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.985753][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object)
  - [-0.984946][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.984946][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.984946][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.985977][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()
  - [-0.986784][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.986784][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.986784][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.989052][Remove Method] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.987439][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.989052][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.989052][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.990127][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.991202][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.992278][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.990665][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.992278][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.992278][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.992278][Remove Class] uk.co.jezuk.mango.iterators.ZipIterator
  - [-0.993353][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.991703][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.992779][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.993854][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.993854][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-0.994929][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.995960][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.994885][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.995960][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.996158][Remove Field] 'zip_' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.996158][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.994491][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.996158][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.996158][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.994491][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.994491][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.996158][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.996158][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.997807][Remove Method] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.999457][Remove Field] 'pos_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.999555][Remove Field] 's_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.999555][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.999555][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.996106][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.999555][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.997831][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.997831][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.997831][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.996681][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.997831][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.997831][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.997831][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.999555][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.999555][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.999555][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.997831][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.994382][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.997831][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.999555][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.999555][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-1.000586][Remove Method] 'unique(java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.998936][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.998936][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.998936][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.999967][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.999967][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.999967][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.999967][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.998818][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.999967][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.999967][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.999967][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.999967][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.999967][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.999967][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PUBLIC'
  - [-0.998243][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.999967][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.995843][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.999348][Inline Method] uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xor.createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.999348][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.999348][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.000998][Remove Method] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-1.003266][Remove Method] 'toIterators(java.lang.Object[])' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-1.003266][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.004916][Remove Method] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.004916][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-1.006565][Remove Field] 'array_' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.008214][Remove Method] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.007065][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.008214][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-1.009864][Remove Field] 'spent_' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.009864][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.009864][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.008140][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-1.009864][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-1.009864][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.009864][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.009864][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-1.011513][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-1.011513][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-1.013163][Remove Field] 'index' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-1.014812][Remove Field] 'useCount' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-1.014812][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-1.015843][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-1.015843][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.014694][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.015843][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-1.015843][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-1.015843][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PROTECTED'
  - [-1.015843][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.015843][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.015843][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-1.014119][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-1.015843][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-1.015843][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-1.014119][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.015843][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.015843][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-1.015843][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-1.015843][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-1.017493][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-1.016343][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.017493][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-1.017493][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-1.019142][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-1.019142][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-1.019142][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-1.021410][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-1.021397][Remove Field] 'item' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-1.020207][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.021397][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-1.017274][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-1.020779][Inline Method] uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nor.createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-1.020779][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-1.020779][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.018993][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-1.020779][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-1.020779][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.018993][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-1.020779][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-1.020779][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.020779][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-1.022428][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.024078][Remove Field] 'useCount_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.025727][Remove Field] 'buffer_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.027377][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.026186][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.026186][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.027377][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-1.027377][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-1.031500][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-1.033768][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-1.033632][Remove Field] 'object_' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-1.033977][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-1.030131][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-1.030131][Remove Class] uk.co.jezuk.mango.iterators.ArrayIterator
  - [-1.033977][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-1.031091][Introduce Factory] for uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator)
  - [-1.031091][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to 'PACKAGE'
  - [-1.033359][Inline Method] uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator) into uk.co.jezuk.mango.iterators.GeneratorIterator.createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)
  - [-1.034390][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Function'
  - [-1.034390][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.034390][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.034390][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.034390][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-1.034390][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-1.034390][Remove Class] uk.co.jezuk.mango.Function
  - [-1.034390][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.034390][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.034390][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.034390][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.034390][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.034390][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.034390][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.034390][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.034390][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.034390][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.034390][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.032466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-1.030543][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-1.032466][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-1.034390][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-1.034390][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-1.034390][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.034390][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.034390][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.034390][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-1.035420][Inline Method] uk.co.jezuk.mango.algorithms.Unique.match(java.util.Comparator,java.lang.Object,java.lang.Object) into uk.co.jezuk.mango.algorithms.Unique.execute(java.util.Iterator,java.util.Comparator)
  - [-1.034993][Remove Field] 'iterator_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-1.034993][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-1.034993][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.034993][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.033660][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.033660][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.033660][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-1.033660][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.033660][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.037783][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-1.040051][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-1.041385][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-1.041403][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-1.041403][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.041403][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PACKAGE'
  - [-1.042434][Remove Method] 'execute(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-1.040784][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-1.041815][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-1.041815][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.037649][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-1.041815][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-1.041815][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-1.039732][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-1.039732][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.039732][Remove Class] uk.co.jezuk.mango.Function
  - [-1.041815][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-1.041815][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.041815][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-1.041815][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-1.040426][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.041815][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-1.041815][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-1.041815][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.043465][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-1.043465][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-1.043465][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.043465][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-1.043465][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-1.043465][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.043465][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.043465][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.039298][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-1.039298][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-1.039298][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.043465][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-1.042668][Remove Field] 'index_' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-1.042668][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-1.042668][Decrease Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-1.042668][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.042668][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.040495][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-1.042668][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-1.042668][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.042668][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.042668][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-1.042668][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-1.042668][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.042668][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-1.042668][Decrease Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-1.042668][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-1.042668][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-1.042668][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.042668][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-1.042668][Remove Class] uk.co.jezuk.mango.Function
  - [-1.042668][Remove Class] uk.co.jezuk.mango.Function
  - [-1.038321][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-1.038321][Increase Method Security] 'list(java.util.Collection)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-1.039352][Remove Method] 'list(java.util.Collection)' of type 'uk.co.jezuk.mango.Collections'
  - [-1.039352][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.039352][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.043699][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-1.043699][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-1.043699][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.043699][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.043699][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-1.043699][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-1.043699][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.043699][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.043699][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.043699][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-1.042250][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-1.042250][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-1.043699][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-1.043699][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-1.045967][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-1.045967][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.045967][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-1.045967][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.041844][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-1.041844][Remove Class] uk.co.jezuk.mango.Function
  - [-1.045349][Inline Method] uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nand.createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-1.045349][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.045349][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-1.046380][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-1.046380][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-1.046380][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-1.046380][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-1.048029][Remove Method] 'BoundedIterator(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-1.048029][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.048029][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-1.048029][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-1.049679][Remove Method] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-1.049679][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.049679][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-1.049679][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.049679][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-1.049679][Remove Class] uk.co.jezuk.mango.iterators.ReverseIterator
  - [-1.049679][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PUBLIC'
  - [-1.048660][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-1.048660][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.048660][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.048660][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-1.048660][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-1.048660][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.048660][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.048660][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.048660][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-1.048660][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.048660][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-1.048660][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.048660][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-1.048660][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.048660][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-1.049691][Remove Method] 'list(java.util.Iterator)' of type 'uk.co.jezuk.mango.Collections'
  - [-1.049691][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.049691][Remove Class] uk.co.jezuk.mango.Function
  - [-1.049691][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-1.049691][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.048042][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-1.049073][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-1.049073][Remove Class] uk.co.jezuk.mango.unarypredicates.OneOf
  - [-1.049073][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.049073][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-1.049073][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.049073][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.049073][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-1.049073][Remove Class] uk.co.jezuk.mango.unarypredicates.OneOf
  - [-1.049073][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-1.051959][Remove Method] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-1.051959][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-1.051959][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-1.051959][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-1.051959][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-1.056083][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-1.056083][Increase Method Security] 'list(java.util.Iterator)' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-1.058351][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-1.058351][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.058351][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-1.058351][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.058351][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-1.058351][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-1.058351][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-1.058351][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-1.058351][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-1.058351][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-1.058351][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-1.058351][Remove Class] uk.co.jezuk.mango.iterators.GeneratorIterator
  - [-1.058351][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-1.058351][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-1.058351][Remove Class] uk.co.jezuk.mango.iterators.GeneratorIterator
  - [-1.060001][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-1.060001][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator

====== Task Summary ======

* General Info:
  * Average time across all runs: 82.95 seconds
  * Average quality gain across all runs: 0.668972 (Average Score: -1.048048)
  * Highest quality gain across all runs: 0.684600 (Score: -1.063676)
  * Lowest quality gain across all runs: 0.649951 (Score: -1.029028)
  * Time taken to complete task: 829.48 seconds

* Metric Summary:
  * Dep_Out
    * Average Quality Gain: 1.7799 (Average Score: 0.4985)
    * Highest Quality Gain: 1.8866 (Best Score: 0.3918)
    * Lowest Quality Gain: 1.6598 (Worst Score: 0.6186)
  * numOps
    * Average Quality Gain: 3.9472 (Average Score: 0.3930)
    * Highest Quality Gain: 3.9860 (Best Score: 0.3542)
    * Lowest Quality Gain: 3.8819 (Worst Score: 0.4583)
  * iFImpl
    * Average Quality Gain: 0.0003 (Average Score: 0.4436)
    * Highest Quality Gain: 0.0046 (Best Score: 0.4479)
    * Lowest Quality Gain: -0.0058 (Worst Score: 0.4375)
  * Dep_In
    * Average Quality Gain: 1.9201 (Average Score: 0.5026)
    * Highest Quality Gain: 2.0000 (Best Score: 0.4227)
    * Lowest Quality Gain: 1.8454 (Worst Score: 0.5773)
  * nesting
    * Average Quality Gain: 0.0007 (Average Score: 0.1231)
    * Highest Quality Gain: 0.0091 (Best Score: 0.1146)
    * Lowest Quality Gain: -0.0013 (Worst Score: 0.1250)
  * numCls
    * Average Quality Gain: -0.0375 (Average Score: 11.3375)
    * Highest Quality Gain: 0.0000 (Best Score: 11.3750)
    * Lowest Quality Gain: -0.1250 (Worst Score: 11.2500)
  * numFields
    * Average Quality Gain: 0.7141 (Average Score: 0.4509)
    * Highest Quality Gain: 0.7835 (Best Score: 0.3814)
    * Lowest Quality Gain: 0.6392 (Worst Score: 0.5258)
  * abstractness
    * Average Quality Gain: 0.0002 (Average Score: 0.0270)
    * Highest Quality Gain: 0.0010 (Best Score: 0.0278)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.0268)
  * numInterf
    * Average Quality Gain: 0.0000 (Average Score: 0.7500)
    * Highest Quality Gain: 0.0000 (Best Score: 0.7500)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.7500)
  * NOC
    * Average Quality Gain: 0.0000 (Average Score: 0.0000)
    * Highest Quality Gain: 0.0000 (Best Score: 0.0000)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.0000)
  * avrgFieldVisibility
    * Average Quality Gain: -0.1550 (Average Score: 0.5593)
    * Highest Quality Gain: -0.0778 (Best Score: 0.4821)
    * Lowest Quality Gain: -0.2385 (Worst Score: 0.6429)
  * NumDesc
    * Average Quality Gain: 0.0000 (Average Score: 0.0000)
    * Highest Quality Gain: 0.0000 (Best Score: 0.0000)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.0000)
