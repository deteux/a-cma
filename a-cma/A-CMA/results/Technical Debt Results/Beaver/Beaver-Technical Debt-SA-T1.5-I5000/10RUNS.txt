====== Run Result ======

* Name: Beaver|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 52.12 seconds
  * Quality Gain: 0.179170
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.178859
  * Possible Actions: 509
  * Applied Actions: 364
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.0632
    * numOps: 4.1368
    * iFImpl: 0.0000
    * Dep_In: 4.8526
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.0944
    * NumDesc: 1.1263

* Applied Actions:
  - [0.353187][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.348345][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.343503][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.338661][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.338494][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.338494][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.338494][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.337442][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [0.337442][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.337442][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.341652][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [0.339757][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [0.339757][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.340174][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [0.337858][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.339542][Introduce Factory] for beaver.comp.run.AntTask.<init>()
  - [0.339542][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.338490][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.339121][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [0.339121][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.339677][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.339677][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.335466][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.331887][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.332165][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [0.328586][Inline Method] beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[]) into beaver.spec.ast.Rule.createbeaver.spec.ast.Rule(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [0.328586][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.325007][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.325007][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.321428][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.321428][Make Class Final] beaver.comp.Action$Shift
  - [0.320911][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.320911][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.320911][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [0.321543][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to static 
  - [0.316069][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [0.311227][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [0.311227][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [0.310174][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.310174][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.310338][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.306759][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.306759][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.305075][Inline Method] beaver.Parser$Simulator.increaseStackCapacity(beaver.Parser$Simulator) into beaver.Parser$Simulator.shift(short)
  - [0.305707][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [0.305707][Decrease Method Security] 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.305707][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.305707][Decrease Method Security] 'initStack()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.302893][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.302932][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.303564][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.301248][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.304195][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [0.304827][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [0.304827][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.305458][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [0.303143][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.303181][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.300866][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.300866][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.299813][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [0.298760][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.299177][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.299666][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [0.300298][Move Down Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Accept'
  - [0.300929][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [0.300929][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.300929][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [0.295456][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of type 'beaver.comp.Action$Reduce'
  - [0.290614][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [0.290614][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [0.290614][Make Class Final] beaver.comp.Configuration
  - [0.291245][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [0.288298][Remove Method] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Reduce'
  - [0.288929][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [0.289561][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.287877][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.287916][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.285600][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.283285][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.283285][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.280969][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.280969][Move Down Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [0.281600][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.281600][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.279285][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.276969][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.274653][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.272337][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.272337][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.271285][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.271285][Make Class Non-Final] beaver.comp.Action$Shift
  - [0.271285][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.268969][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.266653][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.266653][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.266653][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.264337][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.264337][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.262022][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.259706][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.260337][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [0.260337][Make Class Final] beaver.comp.State
  - [0.260337][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [0.258022][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.255706][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.253390][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.251706][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.249390][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.249559][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.249842][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.247526][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.247526][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [0.248091][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.245775][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.246407][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [0.244091][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[]) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])
  - [0.244430][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.244995][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [0.244995][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.244400][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.244400][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [0.245031][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.242716][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.242716][Make Class Non-Final] beaver.comp.State
  - [0.242716][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.241663][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [0.239347][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.239347][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.237652][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [0.238284][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [0.236589][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.236114][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.235062][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [0.234009][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [0.232325][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.230658][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.228991][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.231939][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [0.231939][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.229623][Inline Method] beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ConstructorCode.createbeaver.spec.ast.Declaration$ConstructorCode(beaver.Symbol)
  - [0.229623][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.229623][Decrease Method Security] 'reduce(int)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.228570][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.227307][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.226752][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [0.225067][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.226752][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [0.226752][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.225085][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [0.223418][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [0.221752][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [0.220918][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [0.221085][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.221085][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.221085][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.221418][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.219752][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.218488][Instantiate Method] Move static method 'createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])' of 'beaver.spec.Production$RHS' to its parameter type 'beaver.spec.Production$RHS$Item'
  - [0.217436][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.216383][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.215331][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.215331][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [0.215331][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [0.215608][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.215608][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.214556][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.214556][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [0.213503][Inline Method] beaver.spec.parser.GrammarParser.<init>() into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser()
  - [0.213670][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.213630][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.212577][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict'
  - [0.211525][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.210472][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [0.209419][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.209419][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PUBLIC'
  - [0.210051][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [0.210384][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.210384][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [0.209332][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.208279][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [0.208112][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.208112][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [0.208112][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.208112][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.207060][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.207338][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [0.206782][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [0.206782][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.206782][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.206782][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [0.207060][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.206266][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.205214][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.205214][Increase Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.205214][Decrease Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.206047][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [0.204994][Inline Method] beaver.comp.run.AntTask.<init>() into beaver.comp.run.AntTask.createbeaver.comp.run.AntTask()
  - [0.203942][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.203942][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [0.204275][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.204275][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.203222][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [0.203222][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [0.203222][Move Down Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [0.202170][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.202801][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [0.202841][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.201788][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.200736][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.200736][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.200736][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.200736][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.199683][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.200016][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.199516][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.198464][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.198503][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.198503][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.197451][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.197034][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [0.197666][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [0.196613][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.197245][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [0.197245][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [0.197245][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [0.197245][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [0.196192][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.196192][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [0.196183][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.195131][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.195762][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [0.195929][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.195385][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.194333][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.<clinit>()
  - [0.194333][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.194888][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [0.194888][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.193836][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.192783][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.191730][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken(beaver.Parser$TokenStream)
  - [0.192362][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [0.192529][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.192529][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [0.191476][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.190423][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.189371][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.189788][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.189788][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [0.188954][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.188121][Increase Field Security] 'prec' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [0.188399][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.187565][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [0.187732][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.188364][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [0.187252][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.187669][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.187669][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [0.188002][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.186336][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PRIVATE'
  - [0.186502][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.185871][Move Up Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [0.185871][Freeze Method] Convert 'getId()' of 'beaver.comp.Action' to static 
  - [0.185276][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.184720][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [0.185352][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [0.185983][Freeze Method] Convert 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [0.185983][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.184931][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.184653][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.188863][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.189495][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [0.189703][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.189981][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.190022][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.186443][Inline Method] beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [0.185180][Instantiate Method] Move static method 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [0.185180][Decrease Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.185180][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [0.185180][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [0.184127][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.183571][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [0.184203][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.183647][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.183925][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.183382][Make Class Abstract] beaver.comp.Action
  - [0.183144][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [0.183144][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.182727][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.182727][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [0.182727][Make Class Final] beaver.comp.Configuration$Set
  - [0.183359][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.183350][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.183350][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.182934][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [0.182934][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.182975][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.182642][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [0.182642][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.182309][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.182309][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [0.182309][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.181975][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [0.181975][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.181642][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.181880][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [0.183564][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [0.183564][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.182512][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [0.182553][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.183185][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [0.183185][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.182852][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.182557][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.183188][Freeze Method] Convert 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [0.182860][Increase Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.182860][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.182860][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [0.182899][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.182572][Increase Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.182244][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.182244][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [0.182875][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [0.183039][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.182766][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.182766][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.182766][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.182766][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.182134][Instantiate Method] Move static method 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [0.182134][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.182134][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.180871][Instantiate Method] Move static method 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [0.180637][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.181269][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [0.181275][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.181040][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.180806][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.180642][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.180478][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.180478][Increase Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [0.180478][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [0.181298][Decrease Field Security] 'state' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [0.181298][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.181298][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [0.181930][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [0.179614][Inline Method] beaver.spec.ast.Declaration$Goal.visit(beaver.spec.GrammarBuilder) into beaver.spec.ast.Declaration$Goal.accept(beaver.spec.ast.TreeWalker)
  - [0.180245][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [0.180285][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.180121][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.180121][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [0.179957][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [0.179918][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.180549][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [0.180549][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [0.180509][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.180509][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.180673][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PUBLIC'
  - [0.181305][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.178989][Remove Method] 'visit(beaver.spec.ast.Declaration$Goal)' of type 'beaver.spec.GrammarBuilder$3'
  - [0.178949][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.178949][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [0.178909][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.178869][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.178859][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'

====== Run Result ======

* Name: Beaver|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 155.93 seconds
  * Quality Gain: 0.186138
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.171891
  * Possible Actions: 482
  * Applied Actions: 543
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.0211
    * numOps: 4.1053
    * iFImpl: 0.0000
    * Dep_In: 4.9895
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 0.9995
    * NumDesc: 1.1263

* Applied Actions:
  - [0.353187][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.348345][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.347082][Instantiate Method] Move static method 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [0.347082][Make Class Final] beaver.comp.Configuration
  - [0.342240][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.342871][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [0.342871][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.342871][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.343149][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.338307][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.338939][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.339570][Freeze Method] Convert 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to static 
  - [0.339570][Decrease Method Security] 'initStack()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.339609][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.334767][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.330556][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.330556][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to static 
  - [0.330556][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.330556][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.329293][Instantiate Method] Move static method 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [0.329293][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.329293][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.329293][Decrease Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.329293][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.329293][Decrease Method Security] 'getTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.325714][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.322135][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.318556][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.314977][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.314700][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [0.311827][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.312458][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [0.313090][Freeze Method] Convert 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to static 
  - [0.313090][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.313090][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.313090][Move Down Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [0.310774][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.310774][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.310814][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.308498][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.306182][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.306814][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [0.304498][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.302803][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [0.300487][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.298171][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.297404][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.298036][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.295720][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.295720][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [0.293404][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.293404][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.294036][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [0.294036][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.294036][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.294036][Decrease Method Security] 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.292983][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.291931][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [0.288917][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.286601][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.284286][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.284286][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.281970][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.281970][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.281970][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [0.279654][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.278601][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.279233][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [0.279865][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.280152][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.280152][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [0.277836][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.278468][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.276152][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.276783][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [0.276783][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.275731][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.273415][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.273846][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.273846][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [0.271530][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.271530][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [0.269214][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.266899][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.265846][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.265846][Make Class Final] beaver.comp.ParsingTables
  - [0.263530][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.264392][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.265024][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [0.265024][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PUBLIC'
  - [0.263971][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.261172][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.261172][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.258124][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.258124][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.257529][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.257529][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [0.255213][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.252897][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.252719][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.252719][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [0.252719][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.251455][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.249140][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.249140][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.249140][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [0.249140][Make Class Final] beaver.comp.Action$Shift
  - [0.247354][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.247354][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.250301][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [0.247986][Inline Method] beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$PackageName.createbeaver.spec.ast.Declaration$PackageName(beaver.Symbol)
  - [0.246301][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.246301][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.246301][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [0.245249][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.245880][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [0.245285][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.245285][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.243601][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.241917][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.242548][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [0.242548][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [0.242293][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.242293][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.241240][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [0.241872][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to static 
  - [0.240819][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [0.240998][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.240998][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.240998][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [0.239945][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [0.239945][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.240577][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [0.239524][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.240156][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [0.239103][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.238051][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.238408][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.238408][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.238408][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.239039][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.237987][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.238618][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [0.239250][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [0.238197][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.238197][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.238644][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.239275][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [0.239632][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.239632][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.238580][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.237527][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.237527][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.236474][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.236730][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.236730][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.235677][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [0.235718][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.235677][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.235677][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.235677][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.236308][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [0.235256][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.234203][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.233151][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [0.233406][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.235191][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [0.235233][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.233447][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.234340][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [0.234340][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [0.233287][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.233287][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.232235][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.232866][Freeze Method] Convert 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to static 
  - [0.231814][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.231814][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.231992][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [0.231449][Make Class Abstract] beaver.comp.Action
  - [0.230396][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [0.229344][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.228800][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.229395][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.229395][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [0.230027][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [0.230027][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.228974][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.227922][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.227922][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.229606][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [0.228553][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.227501][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.227858][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.228489][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [0.228489][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [0.228936][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.227883][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.226831][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [0.226652][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.226473][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.225421][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.224368][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [0.223315][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.223315][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [0.222406][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.221353][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.221985][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [0.222569][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [0.221517][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.222148][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [0.222733][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.222733][Make Class Non-Final] beaver.comp.Configuration
  - [0.222733][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.222733][Freeze Method] Convert 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to static 
  - [0.221681][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.220628][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.219575][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.218523][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.219154][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [0.219786][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [0.220224][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [0.220856][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [0.220856][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.219803][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.219803][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PACKAGE'
  - [0.218926][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [0.219558][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [0.218954][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.218523][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [0.218523][Make Class Final] beaver.comp.Action$List
  - [0.220247][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [0.218523][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [0.218696][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.218100][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.219785][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String)
  - [0.218732][Inline Method] beaver.spec.Terminal.<init>(java.lang.String) into beaver.spec.Terminal.createbeaver.spec.Terminal()
  - [0.219077][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.219077][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [0.218481][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.218481][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.218481][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [0.216166][Inline Method] beaver.spec.ast.GrammarTreeRoot.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.GrammarTreeRoot.accept(beaver.spec.ast.TreeWalker)
  - [0.216797][Move Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [0.217659][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [0.216797][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [0.216166][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [0.216166][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PUBLIC'
  - [0.215591][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.216223][Move Method] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [0.215591][Move Method] 'scannerError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [0.216223][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [0.216223][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to static 
  - [0.215648][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [0.216079][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.216654][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.216079][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [0.216079][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.215504][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.214929][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [0.215561][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to static 
  - [0.216193][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [0.216193][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.215693][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.215348][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.215348][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.214917][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [0.215348][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.214917][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [0.214917][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.215548][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [0.216180][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [0.215749][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.215318][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [0.217002][Introduce Factory] for beaver.Parser$Exception.<init>(java.lang.String)
  - [0.217634][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [0.218265][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to static 
  - [0.218265][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.218897][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.219528][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [0.218476][Inline Method] beaver.Parser$Exception.<init>(java.lang.String) into beaver.Parser$Exception.createbeaver.Parser$Exception()
  - [0.218476][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.218763][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.215511][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.214879][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [0.214879][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.215511][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [0.215949][Decrease Field Security] 'name' of 'beaver.spec.ast.Declaration' to 'PUBLIC'
  - [0.215511][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [0.215686][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.215247][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [0.215247][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.215540][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.215101][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [0.215142][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.215727][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.215727][Make Class Non-Final] beaver.ParsingTables
  - [0.215727][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.216358][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.216609][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [0.216784][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.216200][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.215849][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.216434][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [0.216258][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [0.216258][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [0.216258][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [0.216258][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.216890][Freeze Method] Convert 'get(int)' of 'beaver.comp.util.IntArray' to static 
  - [0.217182][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.217814][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.218064][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [0.218503][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [0.217918][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.217567][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.217787][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.217436][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.217436][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.220688][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [0.217180][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.222654][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [0.217812][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [0.217812][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.218250][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.216496][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PROTECTED'
  - [0.216496][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.214741][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PACKAGE'
  - [0.214303][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [0.214934][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [0.215285][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.215110][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.214759][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.214467][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.214174][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [0.213924][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.213673][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.214112][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [0.213673][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [0.213632][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.213851][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.213601][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [0.215285][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [0.214232][Inline Method] beaver.comp.run.Options.<init>() into beaver.comp.run.Options.createbeaver.comp.run.Options()
  - [0.214864][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [0.214613][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.215245][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [0.215245][Increase Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [0.215245][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [0.215245][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.215496][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [0.215496][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.211917][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$5'
  - [0.211917][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [0.211917][Make Class Final] beaver.comp.Configuration
  - [0.211917][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.207074][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal) into beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [0.206490][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [0.205905][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [0.205905][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.205946][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.206577][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [0.205992][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [0.205992][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [0.206033][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.204981][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [0.204981][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [0.204981][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [0.199507][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [0.194665][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [0.194080][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [0.194121][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.194752][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.194168][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [0.193583][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [0.193583][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [0.193583][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.194021][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.193437][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [0.192998][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.192660][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [0.193005][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.192143][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [0.192315][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.191970][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.192186][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.192432][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [0.192678][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [0.192925][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.192678][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.192432][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.192186][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [0.192186][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [0.190502][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of type 'beaver.spec.Production$2'
  - [0.190329][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.190157][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.190588][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.191219][Freeze Method] Convert 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to static 
  - [0.190788][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.191605][Move Down Field] 'name' of 'beaver.spec.ast.Declaration' to its child class 'beaver.spec.ast.Declaration$NameContainer'
  - [0.189910][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.189910][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PUBLIC'
  - [0.189910][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [0.189346][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [0.189346][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.188781][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [0.188611][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188442][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188272][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.188272][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [0.188272][Decrease Method Security] 'compressActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [0.188103][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.188063][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.188047][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [0.187893][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.187752][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.187752][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.187711][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.187670][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.187629][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.187629][Increase Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.187605][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [0.187828][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.187787][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.187745][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.187745][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [0.187745][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [0.187745][Decrease Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [0.187745][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [0.185429][Remove Method] 'scannerError(beaver.Scanner$Exception)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [0.185429][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.185471][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.185471][Make Class Non-Final] beaver.comp.Action$Shift
  - [0.185429][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.185429][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.185429][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.185429][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [0.185429][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PACKAGE'
  - [0.185429][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [0.185429][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.185429][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.181850][Remove Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [0.181850][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.182208][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.182208][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [0.182208][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [0.182249][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.182547][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.182547][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [0.182547][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [0.182249][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.182249][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.182249][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.182208][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.182208][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.182839][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [0.183429][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [0.183429][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [0.182823][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.182823][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.182823][Make Class Final] beaver.comp.State$Factory
  - [0.182823][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.182823][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.183025][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [0.183025][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.183025][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [0.183025][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.183207][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [0.183389][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.184020][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [0.184475][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.184475][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [0.184475][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.184020][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [0.184020][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.183838][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.183838][Decrease Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.183657][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.183952][Move Down Field] 'symbols' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [0.183952][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [0.183952][Make Class Final] beaver.comp.State
  - [0.183952][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.183643][Increase Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.183643][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.183458][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.183458][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [0.183458][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [0.183458][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.183458][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [0.183501][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.183458][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.183458][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.183458][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [0.183664][Decrease Field Security] 'elements' of 'beaver.Symbol' to 'PROTECTED'
  - [0.183664][Freeze Method] Convert 'getId()' of 'beaver.comp.Action' to static 
  - [0.183664][Decrease Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.183928][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [0.183928][Move Method] 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [0.183664][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [0.183664][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [0.183664][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [0.183849][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.183849][Move Method] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to its parameter type 'beaver.spec.Terminal'
  - [0.183849][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [0.183849][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [0.183849][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [0.184158][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.183849][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.184312][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [0.184312][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [0.184944][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.185208][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [0.185208][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [0.185208][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [0.184944][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [0.184944][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PUBLIC'
  - [0.184944][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PROTECTED'
  - [0.185407][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.184944][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.184944][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [0.184944][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.185575][Freeze Method] Convert 'addLookahead(beaver.comp.Configuration)' of 'beaver.spec.Terminal' to static 
  - [0.185575][Decrease Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.180102][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [0.180410][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.175568][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [0.175568][Decrease Method Security] 'compressActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.176200][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.175147][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict'
  - [0.175190][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.175190][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.174137][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.<clinit>()
  - [0.174137][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [0.173506][Instantiate Method] Move static method 'addLookahead(beaver.comp.Configuration,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to its parameter type 'beaver.comp.Configuration'
  - [0.172243][Instantiate Method] Move static method 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to its parameter type 'beaver.spec.Terminal'
  - [0.172243][Decrease Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.171934][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.171977][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.171934][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.171934][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.172199][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.171934][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.171934][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.171891][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.171891][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'

====== Run Result ======

* Name: Beaver|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 175.78 seconds
  * Quality Gain: 0.179383
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.178646
  * Possible Actions: 467
  * Applied Actions: 651
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.0211
    * numOps: 4.0947
    * iFImpl: 0.0000
    * Dep_In: 4.9158
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.1217
    * NumDesc: 1.1263

* Applied Actions:
  - [0.353187][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.348345][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.343503][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.338661][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.333819][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.333985][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.329775][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.326196][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.326196][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [0.326196][Decrease Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.326196][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.326827][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.326994][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.326994][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.324126][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.324126][Make Class Final] beaver.comp.Action$List
  - [0.324550][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.320971][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.317392][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.317392][Decrease Method Security] 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [0.318240][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [0.318522][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [0.318522][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.319154][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [0.318101][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [0.318101][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.314522][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.312206][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.312206][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [0.309891][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.309891][Move Up Method] '<init>(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [0.307575][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.305259][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.305428][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.305428][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [0.303113][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.304808][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [0.304808][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.305439][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [0.305609][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.303293][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.303293][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.303924][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [0.302872][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [0.303295][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [0.303295][Decrease Method Security] 'reduce(int)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.303295][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [0.300980][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.300980][Decrease Method Security] 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.300980][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.298664][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.298664][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [0.296348][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.295924][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.293609][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.293648][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.294280][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.State'
  - [0.294280][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [0.288806][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of type 'beaver.comp.Action$Shift'
  - [0.289145][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.283671][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of type 'beaver.comp.Action$Reduce'
  - [0.278829][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [0.278829][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [0.278829][Make Class Final] beaver.comp.Configuration
  - [0.277776][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.277776][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.275461][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.274408][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.269566][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [0.269566][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.270198][Freeze Method] Convert 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to static 
  - [0.270198][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.270198][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [0.269633][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.269633][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.269633][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.269633][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.269633][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.266724][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.267356][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to static 
  - [0.267396][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.265080][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [0.266765][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [0.266765][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.266765][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.267052][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.267052][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.267052][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [0.267684][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [0.267684][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.265368][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.263052][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [0.260736][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [0.260736][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PACKAGE'
  - [0.258420][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [0.258420][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.258420][Make Class Final] beaver.comp.Action$Shift
  - [0.261368][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [0.260315][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.260947][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [0.260126][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.260126][Decrease Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.260126][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.260126][Decrease Method Security] 'zzUnpackTrans(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.260757][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.261389][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.261101][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.261101][Decrease Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.258786][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.256470][Inline Method] beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$Goal.createbeaver.spec.ast.Declaration$Goal(beaver.Symbol)
  - [0.256470][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.256470][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.256470][Decrease Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.255207][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [0.252891][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.250575][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.248259][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.248259][Decrease Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.247207][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [0.247552][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.247552][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.246499][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.244815][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.245102][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.245102][Decrease Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.246826][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [0.244510][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [0.242195][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.241142][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.241142][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.241142][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [0.238826][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.237102][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [0.237102][Make Class Non-Final] beaver.comp.Configuration
  - [0.237734][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [0.236009][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PRIVATE'
  - [0.236641][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [0.234917][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.234917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [0.233864][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [0.232180][Inline Method] beaver.Parser$Simulator.increaseStackCapacity(beaver.Parser$Simulator) into beaver.Parser$Simulator.shift(short)
  - [0.230496][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.228812][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.227127][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int,beaver.comp.util.BitSet) into beaver.comp.util.BitSet.add(int)
  - [0.227343][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.227975][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [0.226711][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.226927][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.225874][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [0.224822][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.223769][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.225453][Introduce Factory] for beaver.spec.Grammar$Exception.<init>(java.lang.String)
  - [0.225453][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [0.225453][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.225453][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.224401][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.224745][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.223693][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.223865][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.224497][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [0.224497][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.221440][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.221440][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.220388][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.219335][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.218282][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.217230][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.217270][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.216218][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.216218][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.216849][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [0.216849][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.215797][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.215972][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.215972][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.215972][Make Class Final] beaver.comp.State
  - [0.216148][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.215095][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.214844][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.214844][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [0.215476][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.215476][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.214423][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.213371][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.213371][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.212318][Inline Method] beaver.ParsingTables.<init>(java.lang.String) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [0.212318][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.212318][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.211265][Inline Method] beaver.spec.Grammar$Exception.<init>(java.lang.String) into beaver.spec.Grammar$Exception.createbeaver.spec.Grammar$Exception()
  - [0.210213][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.210463][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [0.210463][Decrease Method Security] 'getOutputFileName()' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [0.211095][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.211136][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.210083][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict'
  - [0.210715][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [0.209662][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.210294][Freeze Method] Convert 'findFirstTerminal(int)' of 'beaver.ParsingTables' to static 
  - [0.210118][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.210118][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [0.207802][Inline Method] beaver.spec.ast.Declaration$Error.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Error.accept(beaver.spec.ast.TreeWalker)
  - [0.208434][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.208873][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.209457][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [0.208405][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.208446][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [0.208884][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.207832][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.207832][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.207872][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.208504][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [0.208796][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.207744][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.208375][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [0.207323][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.206270][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.205217][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.205217][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [0.205217][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.205217][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.205217][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [0.205258][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.205258][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.204663][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.203400][Instantiate Method] Move static method 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [0.203400][Increase Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.202347][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.<clinit>()
  - [0.201295][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.201295][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.201295][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.201926][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [0.202558][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [0.202558][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.202599][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.201546][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.200493][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.200493][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [0.200493][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [0.201125][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [0.201125][Decrease Method Security] 'getOutputFileName()' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [0.201125][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.200072][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.200072][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.200072][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.199020][Inline Method] beaver.spec.ast.Declaration$ConstructorCode.visit() into beaver.spec.ast.Declaration$ConstructorCode.accept(beaver.spec.ast.TreeWalker)
  - [0.199195][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.198142][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [0.197090][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [0.196037][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.196037][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [0.194984][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.194984][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.194984][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.193932][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.194563][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [0.194563][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [0.193686][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [0.193686][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.192809][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [0.192809][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [0.192809][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [0.191932][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [0.191932][Freeze Method] Convert 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to static 
  - [0.191756][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.191756][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [0.191756][Decrease Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.191756][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [0.191797][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.191797][Decrease Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.190920][Increase Field Security] 'prec' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [0.190043][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [0.190043][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [0.189166][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [0.189750][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [0.188873][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [0.188873][Decrease Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [0.187801][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.186924][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [0.186292][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action'
  - [0.185697][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.185948][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [0.185948][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.185948][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.186579][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to static 
  - [0.186579][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.185995][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [0.186579][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.185995][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [0.185410][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.184825][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.184825][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PUBLIC'
  - [0.185457][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.187141][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [0.187141][Decrease Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.187772][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.186720][Inline Method] beaver.spec.Production$RHS.<init>() into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS()
  - [0.186135][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.186135][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.186385][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [0.188140][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [0.188140][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [0.193614][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [0.193654][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.193654][Move Method] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [0.193654][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [0.188812][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [0.189444][Freeze Method] Convert 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to static 
  - [0.189444][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [0.189444][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.189795][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [0.190233][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.190409][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.188654][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PRIVATE'
  - [0.188654][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [0.186900][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PRIVATE'
  - [0.185847][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [0.186479][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [0.186479][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.186479][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [0.186771][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.185936][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.185976][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [0.185432][Make Class Abstract] beaver.comp.Action
  - [0.185432][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [0.184889][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.184389][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.185020][Freeze Method] Convert 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to static 
  - [0.185020][Make Class Non-Final] beaver.comp.Action$Shift
  - [0.185020][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.185308][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.184777][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.184354][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.184354][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [0.183930][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.183506][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [0.183291][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.182957][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.182957][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [0.182918][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.182584][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.182584][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.182251][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.183084][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [0.182751][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.182473][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.182473][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [0.183105][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [0.183438][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.184271][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [0.184271][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [0.184903][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to static 
  - [0.184070][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [0.184067][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.183733][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [0.183733][Decrease Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.183733][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.183733][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.183774][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.184607][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [0.183774][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.183774][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.183774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.183774][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [0.183142][Move Method] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to its parameter type 'beaver.Symbol'
  - [0.182904][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.182666][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.182666][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.182428][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [0.182190][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.181982][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [0.182315][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.182315][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [0.182315][Make Class Final] beaver.comp.ParsingTables
  - [0.182315][Make Class Final] beaver.comp.Configuration$Set
  - [0.182482][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [0.182482][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.182482][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [0.182482][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [0.182482][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [0.182299][Move Up Field] 'name' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [0.181731][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.181731][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.181731][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.181564][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.181564][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.181524][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.181357][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.181190][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.181190][Increase Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.181429][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.181190][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.181190][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.181024][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.181064][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.181064][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [0.180898][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.180898][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [0.180731][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.180772][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.180771][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.183718][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [0.181402][Inline Method] beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity) into beaver.spec.Terminal.createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)
  - [0.180139][Instantiate Method] Move static method 'createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [0.179973][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.179973][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.179806][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.179805][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.179762][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.179762][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [0.180040][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.179762][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.179595][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.179553][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.179510][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.179510][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [0.179467][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.179424][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.179591][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.179548][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.179506][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.179463][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.179463][Make Class Final] beaver.comp.Action$Shift
  - [0.179630][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.179963][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.179630][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.179630][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.179630][Make Class Non-Final] beaver.comp.State
  - [0.179630][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [0.180261][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.180261][Freeze Method] Convert 'nextToken()' of 'beaver.Scanner' to static 
  - [0.180271][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.180271][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.180229][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.180229][Make Class Final] beaver.comp.Action$Accept
  - [0.180229][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [0.180229][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.180229][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.180229][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [0.180229][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.180467][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [0.180467][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.181099][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [0.180861][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [0.180861][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.181492][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.181730][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [0.182362][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.182362][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.182124][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [0.182332][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.182332][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [0.182124][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [0.182755][Freeze Method] Convert 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to static 
  - [0.183589][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [0.182755][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [0.182797][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.182797][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.182839][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.182839][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.182797][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.182797][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.182964][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PUBLIC'
  - [0.183130][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.182964][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.183797][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [0.182964][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.182922][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.182922][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [0.182964][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.182922][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.182922][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.182922][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [0.182922][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.183200][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.183533][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.183200][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.183831][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Symbol' to static 
  - [0.183498][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.183540][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.183540][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PUBLIC'
  - [0.183778][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [0.183445][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.183445][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.183445][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.183111][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.183111][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.183667][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.183667][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.183667][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.183111][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.182778][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.182736][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.182736][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [0.182736][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [0.182736][Increase Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.183368][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to static 
  - [0.183368][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.183368][Increase Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.183368][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [0.183368][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.183368][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.183368][Make Class Non-Final] beaver.comp.Action$Accept
  - [0.183368][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.183368][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [0.183368][Increase Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.183409][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.183368][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.183646][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.183646][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [0.183854][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.183576][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [0.183909][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.184187][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.184425][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.184187][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.184187][Increase Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.184187][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PACKAGE'
  - [0.184187][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.184465][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.184465][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.184187][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.184425][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [0.184148][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.184148][Decrease Method Security] 'insert(beaver.Symbol,beaver.Parser$TokenStream,beaver.Symbol)' of 'beaver.Symbol' to 'PUBLIC'
  - [0.183909][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.183909][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.183951][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.183951][Move Up Field] 'code' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [0.183389][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.183347][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.184097][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.184944][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [0.184944][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.185576][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [0.185576][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [0.185576][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.184826][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.184826][Make Class Non-Final] beaver.comp.ParsingTables
  - [0.184826][Make Class Non-Final] beaver.comp.Configuration$Set
  - [0.184826][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [0.185458][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [0.185670][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [0.185670][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [0.186093][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.186263][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.186263][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.186263][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.186263][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to static 
  - [0.186263][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [0.186263][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [0.186263][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.184579][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of type 'beaver.spec.Production$2'
  - [0.184579][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.184579][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [0.182263][Remove Method] 'unexpectedTokenRemoved(beaver.Symbol)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [0.181631][Instantiate Method] Move static method 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [0.181631][Decrease Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.180368][Instantiate Method] Move static method 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [0.180368][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.180368][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.180650][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.180368][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.180368][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.180368][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [0.180368][Decrease Method Security] 'shift(beaver.Symbol,short,beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [0.180368][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [0.180378][Move Down Field] 'zzAtBOL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.180420][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.180378][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.180337][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.180337][Freeze Method] Convert 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action,beaver.comp.State)' of 'beaver.comp.Action' to static 
  - [0.180337][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PUBLIC'
  - [0.180337][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [0.180337][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [0.180579][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.180337][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.181371][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.181371][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PUBLIC'
  - [0.180337][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.180506][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PUBLIC'
  - [0.180506][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [0.181138][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [0.181770][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [0.181770][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.181770][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.182335][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [0.181770][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [0.181770][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.181770][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.181811][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.181811][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.181770][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.182335][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.181770][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.181811][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.181770][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.181770][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.181770][Make Class Non-Final] beaver.ParsingTables
  - [0.182401][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [0.182613][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [0.182613][Decrease Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [0.182855][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [0.182855][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [0.182613][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [0.182896][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [0.182896][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.183138][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [0.183307][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.183307][Make Class Final] beaver.comp.Action$Reduce
  - [0.183307][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.183307][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [0.183939][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [0.184278][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.183939][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.183939][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [0.183939][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [0.183939][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.183939][Make Class Final] beaver.comp.State$Factory
  - [0.184108][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.184108][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.184108][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.184108][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [0.184108][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [0.184447][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.184108][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.184108][Increase Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.184108][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.184108][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.184108][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.184108][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.184108][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.184108][Make Class Final] beaver.comp.State
  - [0.184119][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.184079][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.184079][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [0.181763][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [0.181763][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PUBLIC'
  - [0.181763][Decrease Method Security] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action,beaver.comp.State)' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.181932][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.181763][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.181763][Increase Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [0.181763][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [0.178816][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [0.178646][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.178888][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [0.178929][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.178686][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [0.178646][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.178985][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.178646][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.178646][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'

====== Run Result ======

* Name: Beaver|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 81.54 seconds
  * Quality Gain: 0.173687
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.184343
  * Possible Actions: 521
  * Applied Actions: 420
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.0632
    * numOps: 4.2000
    * iFImpl: 0.0000
    * Dep_In: 4.9053
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.0545
    * NumDesc: 1.1263

* Applied Actions:
  - [0.355713][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.350871][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.346029][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.345474][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.343158][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.338316][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.338649][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.340316][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [0.340947][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [0.341579][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.341746][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.340482][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [0.342167][Introduce Factory] for beaver.Symbol.<init>(short)
  - [0.342583][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [0.344268][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [0.341952][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.340899][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.340899][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [0.336057][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.336057][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.336689][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [0.336855][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.332013][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.327803][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.328434][Freeze Method] Convert 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to static 
  - [0.327382][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.323803][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.323803][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [0.324434][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.324672][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [0.324881][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.321302][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.321302][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.321302][Decrease Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.321340][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.321972][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser$Simulator' to static 
  - [0.318393][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.316077][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.316494][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.317126][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [0.317126][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [0.317126][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.316959][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.316920][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.316920][Decrease Method Security] 'zzUnpackAction(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.314604][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.311025][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.310205][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.307414][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.308046][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [0.305730][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.305730][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.305730][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.303414][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.303414][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.303414][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [0.301730][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.301730][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [0.302362][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [0.302362][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [0.302362][Decrease Method Security] 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.302400][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.300085][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.297769][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.297769][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [0.297769][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.295453][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.295453][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [0.295453][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PUBLIC'
  - [0.293137][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.293769][Freeze Method] Convert 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [0.293769][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [0.293769][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [0.293769][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PUBLIC'
  - [0.293270][Move Up Field] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.290954][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.290954][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.291227][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.291227][Decrease Method Security] 'getTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.291227][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.288911][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.288911][Decrease Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.286596][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.286596][Move Up Method] '<init>(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [0.284280][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.283227][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.282174][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.279859][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.279859][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.277543][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.280292][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [0.281815][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.279091][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [0.277828][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.276188][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [0.273873][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.274504][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [0.274504][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.272188][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.272188][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [0.272188][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.272820][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.273270][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.273270][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.272943][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.272943][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.270627][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.271446][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [0.271619][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.271619][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.271947][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.270894][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.270894][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.268578][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.269210][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [0.269210][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [0.269210][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [0.266894][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.267128][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [0.264812][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.263128][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.261444][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.261486][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.261322][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.261322][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.261322][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.261650][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.259966][Inline Method] beaver.Parser$Simulator.reduce(int,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.259966][Make Class Final] beaver.comp.Action$List
  - [0.259966][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [0.258326][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [0.258654][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.258696][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.257057][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.257057][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [0.256004][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.256004][Move Up Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its super class 'beaver.comp.Action$Type$Conflict'
  - [0.254365][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [0.254997][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to static 
  - [0.254997][Make Class Final] beaver.comp.State$Factory
  - [0.255628][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.255628][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [0.257267][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.255583][Inline Method] beaver.Parser$Simulator.increaseStackCapacity(beaver.Parser$Simulator) into beaver.Parser$Simulator.shift(short)
  - [0.253944][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [0.253944][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.254576][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [0.254576][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [0.254576][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PROTECTED'
  - [0.254903][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.255067][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.255067][Decrease Method Security] 'trimCode(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.255067][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.253428][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [0.253428][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PACKAGE'
  - [0.253428][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PACKAGE'
  - [0.251789][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [0.253473][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [0.251833][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.251560][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.252192][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [0.251139][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [0.251771][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [0.250718][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.250718][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [0.251128][Decrease Field Security] 'txt' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [0.251760][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [0.251760][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.251760][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.250707][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [0.250707][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.250707][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.249654][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.250286][Freeze Method] Convert 'isRemovable()' of 'beaver.comp.Action$Type' to static 
  - [0.250559][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [0.249506][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.249506][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.249506][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.248454][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [0.248454][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.249085][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.248033][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.248033][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.246980][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.247144][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.247964][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [0.246911][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [0.246911][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.246911][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.248595][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [0.248595][Make Class Non-Final] beaver.ParsingTables
  - [0.248637][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.247585][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.246532][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.246883][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.246883][Move Down Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [0.245831][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.246650][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [0.246692][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.246020][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.246081][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.245029][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.245702][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [0.246334][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [0.245281][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.245554][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.245554][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to static 
  - [0.246186][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [0.246350][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.246350][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [0.246555][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.246555][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.245502][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.244449][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.244449][Move Method] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.Action$List'
  - [0.244449][Decrease Method Security] 'checkBraces(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.244492][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.243440][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.243440][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [0.243850][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.242797][Inline Method] beaver.comp.ParserGenerator.<init>() into beaver.comp.ParserGenerator.createbeaver.comp.ParserGenerator()
  - [0.242797][Make Class Non-Final] beaver.comp.Action$List
  - [0.245601][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.245439][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.242633][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.243265][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [0.243265][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.243265][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.242212][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.242212][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.242759][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.242595][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.242595][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.241542][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.240489][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.240763][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.239710][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.239710][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.238657][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.238657][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [0.238657][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.233184][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [0.233815][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [0.228973][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [0.227920][Inline Method] beaver.comp.Action$Type$Conflict.<init>(java.lang.String,java.lang.String) into beaver.comp.Action$Type$Conflict.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.226868][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.226911][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.226911][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.227543][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [0.224654][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.224654][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.223602][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.222549][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [0.221497][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.221497][Make Class Final] beaver.comp.State
  - [0.220444][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.220111][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.219058][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [0.219690][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [0.219856][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.220488][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to static 
  - [0.219435][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.218383][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.218591][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.219222][Freeze Method] Convert 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to static 
  - [0.219778][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [0.218725][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.219559][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [0.220190][Move Down Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Accept'
  - [0.220190][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.214717][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of type 'beaver.comp.Action$Reduce'
  - [0.214717][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [0.214717][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.214717][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.214717][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [0.214717][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.209874][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict'
  - [0.210152][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.210196][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.210196][Increase Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.207880][Inline Method] beaver.spec.ast.Declaration$Imports.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Imports.accept(beaver.spec.ast.TreeWalker)
  - [0.207924][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.206872][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.207288][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.206236][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.205183][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.<clinit>()
  - [0.205190][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.205023][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.204190][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [0.203356][Increase Field Security] 'prec' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [0.203988][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.203155][Increase Field Security] 'prec' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [0.203155][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.203200][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.201533][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.201533][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [0.201533][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [0.200700][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [0.200700][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [0.201331][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to static 
  - [0.201331][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.200498][Increase Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [0.199665][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [0.199665][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [0.198911][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.199542][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [0.200174][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.199542][Instantiate Method] Move static method 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [0.199820][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.200028][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.200028][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.198765][Instantiate Method] Move static method 'misspelledTokenReplaced(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [0.198765][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.199397][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [0.198765][Move Up Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [0.198720][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.198125][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.197530][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.197530][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [0.196974][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.197606][Freeze Method] Convert 'start()' of 'beaver.comp.util.Log$Record$List' to static 
  - [0.198237][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [0.198237][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.197663][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.197663][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.198209][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.198209][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.198209][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.198619][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.198619][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [0.198619][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.198455][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.199087][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [0.198267][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.198223][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.197676][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [0.197130][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.197124][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.196890][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.196890][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [0.196890][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.197218][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.196671][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.196128][Make Class Abstract] beaver.comp.Action
  - [0.196948][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [0.196948][Increase Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [0.197357][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.196538][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [0.195994][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.195494][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.195494][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to static 
  - [0.195042][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.195042][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.195673][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [0.195837][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.195837][Decrease Method Security] 'misspelledTokenReplaced()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.195603][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [0.195603][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.195603][Increase Method Security] 'misspelledTokenReplaced()' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.195193][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.195193][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.195193][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.194784][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [0.194784][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [0.194374][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [0.194374][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.194374][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PROTECTED'
  - [0.194374][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [0.194374][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.191288][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [0.191288][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.190924][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.190501][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.190686][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [0.191019][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.191069][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.191278][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.190794][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.190628][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [0.190794][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.191128][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [0.188090][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.188039][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.187700][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.187361][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.187022][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.187653][Freeze Method] Convert 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [0.187519][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.187237][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.186898][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.186898][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.186898][Decrease Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [0.186898][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.186898][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [0.186559][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.186276][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.185994][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.185738][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.185496][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.185276][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.185907][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [0.185907][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [0.185907][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.185907][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [0.185907][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.185907][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [0.185907][Decrease Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [0.185686][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.185328][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.184735][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.184735][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.184735][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.184735][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.184520][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [0.184520][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.184475][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.184431][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.184387][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.184343][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.184343][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PACKAGE'

====== Run Result ======

* Name: Beaver|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 101.53 seconds
  * Quality Gain: 0.187215
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.170814
  * Possible Actions: 466
  * Applied Actions: 655
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.0211
    * numOps: 4.0526
    * iFImpl: 0.0000
    * Dep_In: 4.9368
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.0729
    * NumDesc: 1.1263

* Applied Actions:
  - [0.357474][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.352632][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.353263][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.353895][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [0.354526][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [0.353263][Instantiate Method] Move static method 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [0.353263][Decrease Method Security] 'trimCode(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.353895][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.353895][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [0.353895][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [0.354173][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [0.352909][Instantiate Method] Move static method 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [0.353076][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.348234][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.348234][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.347181][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [0.347181][Make Class Final] beaver.comp.State$Factory
  - [0.345497][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.345497][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.345536][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.340694][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.340527][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.340527][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.341360][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [0.339045][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.339045][Decrease Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.339676][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [0.341343][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [0.341343][Decrease Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.336501][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.336501][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.336501][Decrease Method Security] 'zzUnpackAttribute(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.331659][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.332290][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.332290][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [0.328711][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.329343][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [0.329065][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.329065][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.329482][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.329898][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.329898][Make Class Final] beaver.comp.ParsingTables
  - [0.329898][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.326319][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.326319][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.324653][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [0.325486][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [0.321907][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.318328][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.318328][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.318328][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [0.318960][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.318960][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [0.316644][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.316882][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.315829][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.313514][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.313514][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.311198][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.308882][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.308882][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [0.306566][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.306566][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PACKAGE'
  - [0.306400][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.307031][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [0.306753][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [0.305069][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.305625][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [0.305625][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.305625][Move Up Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its super class 'beaver.comp.Action$Type$Conflict'
  - [0.305625][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [0.305069][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.305069][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.305069][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.305625][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [0.305625][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.305664][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.305664][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [0.303348][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.301032][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.298716][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.296400][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.295348][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.295387][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.295625][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.295625][Decrease Method Security] 'hasCollisions()' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.295625][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [0.294572][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [0.294572][Decrease Method Security] 'getTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.294572][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.292905][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [0.292905][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [0.290590][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.288274][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.288905][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.289537][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to static 
  - [0.287221][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.287221][Increase Method Security] 'trimCode(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.284905][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.285239][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.285794][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [0.283478][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.283478][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.282426][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.282426][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.281831][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.281664][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.281872][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.281872][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [0.279556][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.279834][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.277518][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.275203][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.272887][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.272331][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.270015][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.270015][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.270432][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [0.270432][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [0.264958][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [0.264958][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.264958][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [0.260116][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [0.257801][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.257801][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [0.255485][Inline Method] beaver.spec.ast.Rule$Definition$Element.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Rule$Definition$Element.accept(beaver.spec.ast.TreeWalker)
  - [0.254432][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.254670][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.252354][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.252393][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.252393][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PACKAGE'
  - [0.250077][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.250077][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [0.250709][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.250709][Increase Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [0.248393][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.246407][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.245354][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [0.245354][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.245354][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.245986][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [0.245986][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [0.245986][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.245986][Make Class Final] beaver.comp.Action$Reduce
  - [0.244291][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [0.242596][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [0.242596][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [0.240901][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.241532][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [0.239838][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [0.238143][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [0.237090][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.237090][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [0.237722][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [0.237761][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.237761][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.237761][Make Class Non-Final] beaver.comp.ParsingTables
  - [0.236066][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.236698][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.236940][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [0.236940][Move Down Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [0.235245][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.235245][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [0.235245][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.233982][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.232929][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.232929][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.232929][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.231876][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.230824][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.230824][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [0.229771][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.229771][Decrease Method Security] 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.229771][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.229771][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.228719][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.228719][Freeze Method] Convert 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to static 
  - [0.228719][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [0.228719][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.230403][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [0.230615][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.229562][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.229562][Increase Method Security] 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.229901][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.229901][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [0.229901][Move Down Method] 'isResolved()' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [0.228848][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.228848][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.227796][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.226743][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.227082][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.227082][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [0.226029][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [0.224977][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.223924][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.224263][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.224263][Freeze Method] Convert 'nextToken()' of 'beaver.Scanner' to static 
  - [0.224546][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [0.224546][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.224376][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.224376][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.224715][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.224715][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.223662][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.223874][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.222822][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.223245][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.223245][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [0.222193][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.222193][Decrease Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.221769][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [0.221769][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.221769][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.220716][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.220547][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.220547][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [0.220547][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.218231][Inline Method] beaver.spec.ast.Declaration$TypeOf.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$TypeOf.accept(beaver.spec.ast.TreeWalker)
  - [0.217179][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.217179][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [0.217179][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.216126][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [0.215073][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.214021][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.212968][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.211915][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.211915][Decrease Method Security] 'getTerminals()' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [0.210863][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.209810][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.209810][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.208757][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.207853][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.207853][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to static 
  - [0.206800][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.206800][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.207432][Freeze Method] Convert 'readToken()' of 'beaver.Parser$TokenStream' to static 
  - [0.207432][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.207432][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.207432][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [0.207848][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [0.207848][Decrease Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [0.206164][Inline Method] beaver.Parser$TokenStream.readToken(beaver.Parser$TokenStream) into beaver.Parser$TokenStream.nextToken()
  - [0.205112][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.205528][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.205528][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [0.206160][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [0.205107][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.205524][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.205524][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.205524][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [0.205524][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.204471][Inline Method] beaver.comp.Action$Type$Conflict.<init>(java.lang.String,java.lang.String) into beaver.comp.Action$Type$Conflict.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.204805][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.203752][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.202699][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.202779][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.202779][Freeze Method] Convert 'getId()' of 'beaver.comp.Action' to static 
  - [0.202779][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.201726][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.200673][Inline Method] beaver.spec.Production$List.<init>() into beaver.spec.Production$List.createbeaver.spec.Production$List()
  - [0.199621][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.200252][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [0.199200][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.199831][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [0.198998][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [0.198998][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [0.198998][Make Class Final] beaver.comp.ParsingTables
  - [0.198383][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.198792][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.199202][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.198607][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.198607][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [0.199239][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [0.199870][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [0.199324][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [0.198777][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [0.198231][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [0.197687][Make Class Abstract] beaver.comp.Action
  - [0.197144][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.197472][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.196972][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.196562][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [0.196562][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.197194][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [0.197194][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [0.197194][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.197194][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.197521][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.197112][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [0.196702][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [0.196702][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [0.196292][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.195882][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [0.195882][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.196210][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.196210][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.196210][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.196841][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [0.196514][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.196514][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.197145][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to static 
  - [0.197145][Increase Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.197777][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.197777][Make Class Final] beaver.comp.Configuration$Set
  - [0.197941][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.197941][Decrease Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.197613][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.197285][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.197285][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.197917][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [0.198548][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [0.199180][Freeze Method] Convert 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [0.198852][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.198524][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.198196][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.197868][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.198500][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.198910][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.198910][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.198500][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.198500][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.198172][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.198445][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.198445][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [0.198117][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [0.198749][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to static 
  - [0.198486][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.198486][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.198716][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [0.198716][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [0.198486][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.198486][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [0.198256][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [0.198294][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.199100][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [0.199331][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [0.199331][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [0.199331][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [0.198524][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [0.198524][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.198524][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PROTECTED'
  - [0.199156][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [0.199788][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to static 
  - [0.197472][Remove Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of type 'beaver.spec.GrammarBuilder$3'
  - [0.197702][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [0.199386][Introduce Factory] for beaver.comp.Action$Type.<init>(int,java.lang.String)
  - [0.199386][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [0.198334][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.createbeaver.comp.Action$Type()
  - [0.198372][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.198372][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.198367][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.198367][Increase Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.201314][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [0.201314][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.201475][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.201475][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PUBLIC'
  - [0.202107][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [0.199791][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [0.199561][Increase Field Security] 'id' of 'beaver.comp.State' to 'PACKAGE'
  - [0.199330][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.199100][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [0.199100][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.199100][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.199100][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [0.199100][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.198869][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.198869][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PUBLIC'
  - [0.198639][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.198639][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.200252][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [0.201058][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [0.202047][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.202494][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.202494][Make Class Non-Final] beaver.comp.State$Factory
  - [0.200881][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PRIVATE'
  - [0.200881][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.201082][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.201082][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.200276][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [0.200276][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.200276][Increase Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.200276][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.199829][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.199829][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [0.199829][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.199829][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [0.198841][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.199378][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.198841][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.198841][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [0.198841][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.198209][Instantiate Method] Move static method 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [0.198209][Make Class Final] beaver.comp.Action$Accept
  - [0.198209][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.196946][Instantiate Method] Move static method 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [0.197577][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [0.197577][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [0.197577][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [0.197385][Move Down Field] 'log' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [0.196579][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [0.196781][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.196166][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.196798][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [0.196636][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.197268][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to static 
  - [0.197900][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [0.197738][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.197577][Increase Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PRIVATE'
  - [0.197577][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.197416][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.198047][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [0.198047][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [0.198047][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.197886][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.197886][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PUBLIC'
  - [0.197886][Make Class Final] beaver.comp.Action$Shift
  - [0.197886][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.197725][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.197725][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.197563][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.197524][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.197793][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.197524][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [0.197485][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.197646][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.197607][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.198238][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [0.198199][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.198199][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.198160][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.198321][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.198482][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.198482][Make Class Non-Final] beaver.comp.Action$Shift
  - [0.198482][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [0.198482][Increase Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.198482][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.198482][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [0.198482][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.198713][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [0.198482][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [0.199114][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type$Conflict' to static 
  - [0.199114][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [0.199745][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [0.200149][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [0.200780][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.200819][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.201804][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.200819][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.200780][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.200780][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [0.200780][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.200780][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [0.199096][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of type 'beaver.comp.Action$List$1'
  - [0.199096][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.199096][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [0.199096][Make Class Non-Final] beaver.comp.Configuration$Set
  - [0.199096][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.199096][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.199096][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [0.199096][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.199096][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.199096][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [0.199096][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.199418][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.199418][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PUBLIC'
  - [0.199418][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PUBLIC'
  - [0.199418][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.199418][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [0.193945][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [0.189103][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict'
  - [0.189103][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [0.187418][Inline Method] beaver.comp.Action$Type.createbeaver.comp.Action$Type() into beaver.comp.Action$Type.<clinit>()
  - [0.187418][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [0.187822][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.187015][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [0.187553][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.186746][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.186746][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [0.184431][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [0.184431][Increase Method Security] 'getTypeName(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [0.184661][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [0.184661][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [0.184661][Make Class Final] beaver.comp.Action$List
  - [0.185199][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.183579][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.185263][Introduce Factory] for beaver.comp.io.SrcReader.<init>(java.io.File)
  - [0.185303][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.184250][Inline Method] beaver.comp.io.SrcReader.<init>(java.io.File) into beaver.comp.io.SrcReader.createbeaver.comp.io.SrcReader()
  - [0.184882][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [0.184335][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.183789][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.183379][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.183379][Decrease Method Security] 'scannerError()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.183379][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.183389][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.183389][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.183154][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [0.183115][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.183115][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.183747][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.187957][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [0.187957][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [0.187957][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [0.184378][Inline Method] beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production) into beaver.comp.Action$Reduce.createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)
  - [0.187438][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [0.187639][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.187639][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [0.188271][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [0.188271][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [0.188271][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [0.184935][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.184935][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.185566][Freeze Method] Convert 'isRemovable()' of 'beaver.comp.Action$Type' to static 
  - [0.185566][Make Class Non-Final] beaver.comp.Action$Reduce
  - [0.182619][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [0.179671][Remove Method] 'visit(beaver.spec.ast.Rule)' of type 'beaver.spec.GrammarBuilder$1'
  - [0.179671][Decrease Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.178032][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PROTECTED'
  - [0.178196][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.178196][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [0.176557][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PACKAGE'
  - [0.176393][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.176354][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.176682][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.176354][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.176354][Decrease Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.176354][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.176588][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [0.176998][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.176588][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [0.176588][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [0.180798][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.177220][Inline Method] beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [0.177424][Decrease Field Security] 'assoc' of 'beaver.spec.GrammarSymbol' to 'PUBLIC'
  - [0.177424][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.177424][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.177424][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PACKAGE'
  - [0.177752][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.178299][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.178299][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.178299][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.178930][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.179562][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [0.179015][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [0.178688][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.178688][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PROTECTED'
  - [0.179319][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [0.179319][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.179319][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.179319][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PACKAGE'
  - [0.179358][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.179397][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.179358][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.179631][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.179631][Decrease Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.179631][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.179358][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.179319][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.179319][Increase Method Security] 'getTypeName(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [0.179358][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.179358][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PUBLIC'
  - [0.179358][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.179358][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.177674][Remove Method] 'getTypeName(beaver.spec.ast.Declaration$TypeOf)' of type 'beaver.spec.ast.Declaration$TypeOf'
  - [0.178002][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.178002][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.178002][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [0.177674][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.177674][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [0.177674][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [0.177635][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.177635][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.177635][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [0.178181][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.178181][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [0.178345][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [0.178345][Decrease Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.178345][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [0.176661][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of type 'beaver.comp.Action$1'
  - [0.176115][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.176934][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.176934][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PACKAGE'
  - [0.173987][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action$1'
  - [0.174315][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.173987][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.173987][Make Class Final] beaver.comp.Configuration$Set
  - [0.173987][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.173823][Move Down Field] 'n_terms' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [0.173987][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.174315][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.174315][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [0.174315][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.173987][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.173987][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PACKAGE'
  - [0.173987][Make Class Final] beaver.comp.State
  - [0.173659][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.173893][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [0.173659][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [0.173987][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [0.175535][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.173987][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.174192][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.174520][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.174684][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.174684][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [0.174684][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [0.174684][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to static 
  - [0.174918][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [0.175082][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.175082][Decrease Method Security] 'isResolved(beaver.comp.Action$Type$Conflict)' of 'beaver.comp.Action$Type$Conflict' to 'PROTECTED'
  - [0.175082][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.175082][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [0.174848][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.174848][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [0.174848][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.174887][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.172571][Remove Method] 'scannerError(beaver.Scanner$Exception)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [0.173202][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to static 
  - [0.173202][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [0.173612][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.173612][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.173612][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [0.173448][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.173612][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.173573][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.173807][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.173573][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.173573][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.174205][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.174205][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.174836][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [0.174836][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.174836][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [0.172521][Remove Method] 'errorPhraseRemoved(beaver.Symbol)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [0.172521][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [0.173152][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [0.173386][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [0.173621][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.173386][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.173386][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.173621][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [0.174252][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [0.174018][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [0.174018][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [0.174057][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.174057][Increase Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [0.174018][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.174018][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.174291][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.171137][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.171137][Increase Method Security] 'isResolved(beaver.comp.Action$Type$Conflict)' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [0.170860][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.170860][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to static 
  - [0.170814][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [0.170814][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'

====== Run Result ======

* Name: Beaver|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 89.22 seconds
  * Quality Gain: 0.170437
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.187592
  * Possible Actions: 498
  * Applied Actions: 416
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.0842
    * numOps: 4.1684
    * iFImpl: 0.0000
    * Dep_In: 4.9263
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.0933
    * NumDesc: 1.1263

* Applied Actions:
  - [0.355713][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.352134][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.349819][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.344345][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.344977][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [0.344977][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.run.Options'
  - [0.345608][Freeze Method] Convert 'removeResolvedActions()' of 'beaver.comp.Action$List' to static 
  - [0.345608][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.345846][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [0.341004][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.341171][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.341171][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.336329][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.335276][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.330434][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.326855][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.325592][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [0.329802][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.328539][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.329171][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [0.329802][Freeze Method] Convert 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to static 
  - [0.326223][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1) into beaver.comp.Configuration$Set.createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)
  - [0.326462][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [0.325409][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.325409][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.326041][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [0.326041][Decrease Method Security] 'zzUnpackAttribute(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.322462][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.323093][Freeze Method] Convert 'start()' of 'beaver.spec.Production$List' to static 
  - [0.322926][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.323558][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [0.323558][Decrease Method Security] 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.319979][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.320611][Freeze Method] Convert 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to static 
  - [0.319558][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.318295][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log,beaver.comp.run.Make)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [0.314716][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.311851][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.309535][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.307219][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.307219][Move Up Method] '<init>(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [0.307219][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.307219][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.307558][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.307558][Make Class Final] beaver.comp.Action$Reduce
  - [0.307840][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.308472][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [0.308684][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.309315][Freeze Method] Convert 'size()' of 'beaver.comp.util.Log$Record$List' to static 
  - [0.307000][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.304684][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.305315][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.303000][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.303000][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.301947][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.301986][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.299671][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.299671][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.299671][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.297355][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.297524][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.296929][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.296364][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.299312][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [0.299351][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.297035][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.297035][Decrease Method Security] 'reduce(int)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.294719][Inline Method] beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser$Events.createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)
  - [0.295351][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [0.293035][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.293035][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.290719][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.290719][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.291143][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [0.288827][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.287132][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.284817][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)
  - [0.282501][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.282501][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.282501][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [0.280185][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.280524][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.278208][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.275892][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.275892][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.275892][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to static 
  - [0.273577][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.271261][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.271600][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.272024][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [0.272363][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.270047][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.270470][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.268155][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.268155][Decrease Method Security] 'zzUnpackAction(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.268155][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [0.265839][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.265669][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.265669][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [0.266008][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.266008][Increase Method Security] 'reduce(int)' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [0.266008][Decrease Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.266008][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.265839][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.265839][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.265839][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.264786][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [0.262470][Inline Method] beaver.spec.ast.Rule$Definition$Element.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Rule$Definition$Element.accept(beaver.spec.ast.TreeWalker)
  - [0.261418][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [0.262049][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [0.262681][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [0.261628][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.263313][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [0.263313][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.262260][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.260565][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [0.260565][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [0.260565][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [0.260735][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.261366][Freeze Method] Convert 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.261366][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.259050][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.257355][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [0.257355][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [0.259050][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [0.259050][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [0.259050][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.259474][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.259716][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.259677][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.259677][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.259677][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.257982][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.258021][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.256326][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PRIVATE'
  - [0.255903][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [0.254208][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [0.254208][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.252513][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [0.252513][Move Down Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [0.252513][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.250829][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill(beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.251460][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [0.250197][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Make)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.run.Make'
  - [0.250829][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to static 
  - [0.250829][Move Up Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its super class 'beaver.comp.Action$Type$Conflict'
  - [0.250829][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [0.251040][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.251283][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.251283][Decrease Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.248967][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.247283][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.247525][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [0.245840][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.245840][Decrease Method Security] 'encode(byte[])' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.245840][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.245880][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.244827][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.246511][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [0.246511][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [0.245459][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.245459][Decrease Method Security] 'init()' of 'beaver.Parser' to 'PACKAGE'
  - [0.245459][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PACKAGE'
  - [0.243775][Inline Method] beaver.comp.Action$List.removeResolvedActions(beaver.comp.Action$List) into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.243775][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.242511][Instantiate Method] Move static method 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to its parameter type 'beaver.comp.Configuration$Set$Factory'
  - [0.241968][Make Class Abstract] beaver.comp.Action
  - [0.241968][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PROTECTED'
  - [0.241968][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.242600][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [0.239652][Inline Method] beaver.comp.Configuration$Set$Factory.createbeaver.comp.Configuration$Set(beaver.comp.Configuration$1) into beaver.comp.Configuration$Set$Factory.getCore()
  - [0.238600][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.238600][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.238600][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.239231][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.238179][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.237126][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [0.237126][Make Class Final] beaver.comp.Action$Shift
  - [0.236073][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [0.236073][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [0.235021][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.235303][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.235303][Decrease Method Security] 'encode(byte[])' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.235545][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [0.234493][Inline Method] beaver.comp.util.Log$Record$List.<init>() into beaver.comp.util.Log$Record$List.createbeaver.comp.util.Log$Record$List()
  - [0.234323][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.233270][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.233835][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.233835][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.233835][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.233835][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [0.233835][Decrease Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.232783][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.232783][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [0.232783][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.232016][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.230963][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.230963][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.230794][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.230794][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [0.229741][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.228689][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.229028][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.229028][Decrease Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.227975][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [0.227975][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.226922][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.226680][Increase Field Security] 'conf_set' of 'beaver.comp.State' to 'PACKAGE'
  - [0.225628][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.224575][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.224999][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [0.223946][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [0.223946][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.222893][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.222893][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [0.221841][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.226051][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [0.226051][Move Down Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [0.222472][Inline Method] beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol) into beaver.spec.ast.Declaration$TypeOf.createbeaver.spec.ast.Declaration$TypeOf(beaver.Symbol[],beaver.Symbol)
  - [0.221420][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.220367][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.220706][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [0.219654][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.220285][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [0.220003][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.220634][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [0.219582][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [0.218529][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.218868][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.219207][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.218868][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.220552][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [0.221184][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [0.221223][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.220170][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.220413][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.219360][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.218307][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.218939][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [0.219571][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [0.218518][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.217465][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.216413][Inline Method] beaver.spec.Production$List.<init>() into beaver.spec.Production$List.createbeaver.spec.Production$List()
  - [0.216170][Increase Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [0.215118][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.214065][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.213407][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.214039][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.214671][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [0.214837][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.214837][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.214282][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.214560][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.214560][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [0.213652][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.213057][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.212510][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.212920][Decrease Field Security] 'txt' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [0.212920][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [0.212374][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.212374][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [0.212210][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.212756][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.213084][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.213084][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.212538][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [0.212538][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.211994][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.212228][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [0.211728][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.211318][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.210909][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [0.210909][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.210909][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.210909][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.210578][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.210578][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.210255][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.210255][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.207294][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.206966][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.207598][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [0.207270][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.207816][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.208448][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [0.209079][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [0.209079][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.209899][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [0.209079][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [0.209899][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [0.210445][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.209626][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [0.210257][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [0.210257][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.210257][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.207205][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.207205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.207205][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [0.207205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.206649][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.206094][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [0.206725][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [0.206934][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.206600][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.207156][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [0.207195][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.207195][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [0.207195][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.207195][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.207195][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [0.207195][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [0.206640][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [0.206307][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.206938][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [0.206938][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.207570][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [0.207236][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.207868][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.207868][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [0.207868][Make Class Final] beaver.comp.State$Factory
  - [0.207868][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.207590][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.207590][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.207590][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.207312][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [0.207590][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.207312][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [0.207035][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [0.207035][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [0.206757][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.206519][Increase Field Security] 'id' of 'beaver.comp.State' to 'PACKAGE'
  - [0.207150][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [0.207150][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.207782][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [0.207544][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.207782][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.207782][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.208413][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [0.208413][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [0.208175][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [0.208175][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PUBLIC'
  - [0.208175][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.208342][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.208104][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.207866][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [0.207866][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [0.208699][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [0.207866][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.207628][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.207390][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.207667][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.207667][Make Class Final] beaver.comp.State
  - [0.208223][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [0.207667][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [0.207390][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [0.208021][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.207783][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.208061][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.208061][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [0.208061][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PUBLIC'
  - [0.208061][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [0.208061][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.208061][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.208299][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [0.208299][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.202825][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [0.197983][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [0.197983][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.198261][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.197983][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [0.198615][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [0.198615][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.198337][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [0.198754][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.198516][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.198277][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.198277][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [0.198277][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.198111][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.197944][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.197944][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.198277][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.198238][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.198238][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [0.198238][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.198198][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.199774][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.198198][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.198158][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.201284][Move Down Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its child class 'beaver.spec.ast.Declaration$TypeOf'
  - [0.201284][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.198158][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.198119][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.198119][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [0.199785][Decrease Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [0.200417][Freeze Method] Convert 'yycharat(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.200750][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.200750][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.201382][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.199715][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.200132][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [0.200764][Freeze Method] Convert 'start()' of 'beaver.comp.util.Log$Record$List' to static 
  - [0.200347][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [0.200585][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.200252][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.200014][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.200014][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [0.200014][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.200014][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [0.194540][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [0.194540][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [0.189698][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict'
  - [0.189698][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PUBLIC'
  - [0.188645][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict'
  - [0.188645][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.187592][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.<clinit>()

====== Run Result ======

* Name: Beaver|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 92.98 seconds
  * Quality Gain: 0.170240
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.187789
  * Possible Actions: 466
  * Applied Actions: 629
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.0000
    * numOps: 4.1474
    * iFImpl: 0.0000
    * Dep_In: 5.0737
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.0784
    * NumDesc: 1.1263

* Applied Actions:
  - [0.353187][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.348345][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.347082][Instantiate Method] Move static method 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [0.342240][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.342871][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [0.343109][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [0.343741][Freeze Method] Convert 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.343741][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [0.345425][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [0.345425][Decrease Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.345425][Decrease Method Security] 'zzUnpackAttribute(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.340583][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.338899][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.334057][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.329846][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.330478][Freeze Method] Convert 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to static 
  - [0.326899][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.327232][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.327232][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.323653][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.323891][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [0.323891][Decrease Method Security] 'zzUnpackAction(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.323891][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.320312][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.319260][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.315681][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.312821][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.312652][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.312652][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.312652][Freeze Method] Convert 'getId()' of 'beaver.comp.Action' to static 
  - [0.313283][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [0.313915][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.311599][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.309283][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.306967][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.306967][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.304652][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.303599][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.303599][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.303599][Decrease Method Security] 'zzUnpackAttribute(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.304231][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [0.304862][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [0.304862][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.304862][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [0.304862][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.303809][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.303809][Make Class Final] beaver.comp.Action$Accept
  - [0.301494][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.299178][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.300873][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [0.298557][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.298557][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.298981][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.299404][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.297089][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.297089][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.297089][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.296847][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [0.296847][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.294531][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.294531][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.294531][Decrease Method Security] 'zzUnpackTrans(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.294570][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.294570][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.294570][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [0.292254][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.289939][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.289939][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [0.290570][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.288254][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.291202][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [0.291241][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.288925][Inline Method] beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar) into beaver.comp.Configuration$Set$Factory.createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)
  - [0.288925][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.288925][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [0.288925][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.288925][Move Down Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$RuleWalker'
  - [0.288925][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.288925][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.288925][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [0.287873][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.285557][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.283241][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.283241][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [0.283241][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [0.280925][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.280925][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.280925][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.280925][Decrease Method Security] 'zzUnpackAction()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.278610][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.278610][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.278649][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.277596][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [0.277596][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.277596][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.274677][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.275308][Freeze Method] Convert 'getTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [0.275940][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.275940][Increase Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.276572][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [0.276572][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.276572][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [0.276572][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.274256][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.271940][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.271940][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.271940][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.269624][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.270256][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [0.270256][Make Class Final] beaver.comp.Action$Shift
  - [0.267940][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.265624][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.263308][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.260993][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.258677][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.258717][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.258246][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.258878][Freeze Method] Convert 'readToken()' of 'beaver.Parser$TokenStream' to static 
  - [0.259509][Freeze Method] Convert 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to static 
  - [0.257814][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.259498][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [0.262446][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [0.261393][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.260341][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.261188][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [0.261527][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.264414][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.263580][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [0.260680][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.260680][Decrease Method Security] 'zzUnpackRowMap(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.257679][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.260626][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [0.260914][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.261545][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [0.261832][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.259517][Inline Method] beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ClassCode.createbeaver.spec.ast.Declaration$ClassCode(beaver.Symbol)
  - [0.257201][Inline Method] beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Terminals.createbeaver.spec.ast.Declaration$Terminals(beaver.Symbol[])
  - [0.257201][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.257832][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.258464][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [0.258464][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.258464][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [0.258464][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.258464][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.259096][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [0.259096][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [0.259096][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.257315][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.255561][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.255561][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.256000][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.254245][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PRIVATE'
  - [0.254245][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [0.254877][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [0.254877][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.252561][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [0.252386][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.252386][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.250631][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.250807][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.249122][Remove Method] 'parseOptions(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [0.249122][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.250807][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [0.251026][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.251201][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.249517][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int,beaver.comp.util.BitSet) into beaver.comp.util.BitSet.add(int)
  - [0.249558][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.249733][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.249733][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$RuleWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [0.249693][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.247377][Inline Method] beaver.spec.ast.Declaration$LeftAssoc.visit(beaver.spec.GrammarBuilder$RuleWalker) into beaver.spec.ast.Declaration$LeftAssoc.accept(beaver.spec.ast.TreeWalker)
  - [0.247627][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [0.247627][Decrease Method Security] 'shift(short)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.247627][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.245943][Inline Method] beaver.spec.GrammarBuilder.getTerminals(beaver.spec.GrammarBuilder) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.244259][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.244259][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [0.242575][Inline Method] beaver.Parser$TokenStream.readToken(beaver.Parser$TokenStream) into beaver.Parser$TokenStream.nextToken()
  - [0.241312][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.241943][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.241943][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [0.241943][Increase Method Security] 'zzUnpackAction(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.242382][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.240698][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.241329][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [0.240277][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.240277][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.240277][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PUBLIC'
  - [0.240277][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.241154][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [0.242031][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [0.240978][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.239926][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.238873][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.239165][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.239165][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.239206][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.239206][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [0.239206][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.239206][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.238154][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.238154][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [0.237101][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [0.236048][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [0.236048][Decrease Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.234996][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.234996][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.234996][Decrease Method Security] 'checkBraces(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.234645][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.234896][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.233843][Inline Method] beaver.comp.run.Make.<init>() into beaver.comp.run.Make.createbeaver.comp.run.Make()
  - [0.232790][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [0.232195][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.232195][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PUBLIC'
  - [0.231844][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.231844][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.231844][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [0.232476][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [0.232476][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.233107][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [0.233546][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PUBLIC'
  - [0.232493][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.231441][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.230388][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [0.230388][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.233335][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [0.233335][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [0.233511][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.231195][Inline Method] beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Implements.createbeaver.spec.ast.Declaration$Implements(beaver.Symbol[])
  - [0.234291][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [0.234923][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.234923][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.235554][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.235554][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.235554][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [0.232458][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [0.233335][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [0.233335][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.233335][Move Up Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its super class 'beaver.comp.Action$Type$Conflict'
  - [0.232283][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [0.232324][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.232324][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.232324][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.232499][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.231446][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.231446][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.230394][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.230394][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.229341][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [0.228288][Remove Method] 'printUsage()' of type 'beaver.comp.run.Make'
  - [0.229166][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [0.229166][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [0.229166][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [0.228113][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [0.228745][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to static 
  - [0.230499][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [0.228745][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [0.227692][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.227692][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.226639][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.226639][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.227039][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [0.227263][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.226210][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.225157][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.224105][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.224105][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [0.224736][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [0.224736][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.223684][Remove Method] 'printVersion()' of type 'beaver.comp.run.Make'
  - [0.223684][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PUBLIC'
  - [0.223684][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [0.223684][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [0.223684][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [0.223684][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [0.223684][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [0.222631][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.222185][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [0.222185][Increase Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.222185][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [0.222185][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.221132][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.220079][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.220377][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [0.220377][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [0.219324][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.219324][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.219503][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.219503][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [0.218450][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [0.218450][Increase Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.217398][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.218029][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [0.218327][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.218368][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.217316][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.217571][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [0.217124][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [0.217756][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [0.216863][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [0.215970][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.215792][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.216423][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [0.217055][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [0.217055][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.216162][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.217055][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [0.216162][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [0.216794][Freeze Method] Convert 'start()' of 'beaver.spec.Production$List' to static 
  - [0.217091][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [0.216198][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [0.216240][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.216597][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.216597][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [0.216597][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.216597][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.216597][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.218281][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [0.217229][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [0.217675][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.216782][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.217414][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [0.217414][Move Up Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its super class 'beaver.comp.Action$Type$Conflict'
  - [0.218045][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [0.218045][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.218677][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.218975][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.218975][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [0.218379][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [0.218379][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.218677][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.218082][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.217486][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.216891][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [0.217338][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.217338][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [0.217338][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [0.217040][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.216683][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.216683][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.216683][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.216088][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [0.215195][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [0.215195][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PUBLIC'
  - [0.214004][Move Up Field] 'name' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [0.214004][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.214302][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.210955][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.211137][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.210594][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.210594][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [0.210594][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.210050][Make Class Abstract] beaver.comp.Action
  - [0.209550][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.209095][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [0.209095][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.210005][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [0.210005][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [0.210005][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.210005][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [0.210047][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.210047][Make Class Non-Final] beaver.comp.Action$Shift
  - [0.210047][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PUBLIC'
  - [0.210047][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.209806][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.208913][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.209509][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.209509][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.209509][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.209062][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.209062][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.208467][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.208764][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [0.208318][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [0.208318][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.207999][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.207999][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [0.207999][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to static 
  - [0.208041][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.208391][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.208391][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.208391][Make Class Final] beaver.comp.State$Factory
  - [0.208041][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.208625][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.208625][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.208041][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [0.207690][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.207687][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.208125][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.208757][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [0.208406][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.208092][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.208092][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [0.207654][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.207905][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PUBLIC'
  - [0.208081][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [0.208081][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [0.208712][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.208712][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [0.208712][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.208712][Freeze Method] Convert 'nextToken()' of 'beaver.Scanner' to static 
  - [0.208755][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.208974][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.208343][Instantiate Method] Move static method 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [0.207079][Instantiate Method] Move static method 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [0.206521][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.205936][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [0.205979][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.205394][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [0.205219][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.205176][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.204474][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.204767][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.205017][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PUBLIC'
  - [0.205017][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.205017][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [0.205015][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.205015][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [0.205059][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.203534][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.203534][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.203534][Decrease Method Security] 'countStates()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.203534][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.203242][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.203242][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [0.202949][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.202949][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.202657][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.202406][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [0.202406][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.202156][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [0.202156][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.202594][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.202344][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.202093][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [0.201842][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [0.201989][Move Up Field] 'code' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [0.202621][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [0.201827][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.202458][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.203259][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.202458][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.202459][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.203091][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.203448][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.203448][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.203091][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.203091][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [0.202836][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.203091][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [0.203091][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.203270][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.203015][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.202759][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.202759][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [0.202759][Increase Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [0.203117][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.203748][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [0.203748][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.203391][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.203748][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.203493][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.205279][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [0.202426][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [0.202608][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.201510][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.201650][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [0.201694][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.199354][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.199354][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.199299][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.199344][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.199299][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.199299][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.199253][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.199299][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [0.199930][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [0.199885][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.199840][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.199840][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.200457][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [0.200827][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.201396][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.201661][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.201043][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.200475][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.200475][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.200475][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.201106][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [0.201106][Make Class Non-Final] beaver.comp.State$Factory
  - [0.200842][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.200797][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.201364][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.200797][Move Down Field] 'zzEndRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.200751][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.201383][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [0.201648][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [0.201383][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [0.205594][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [0.205594][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [0.202015][Inline Method] beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[]) into beaver.spec.ast.GrammarTreeRoot.createbeaver.spec.ast.GrammarTreeRoot(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [0.202646][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [0.204330][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [0.204330][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [0.204285][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.204285][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [0.204240][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.204425][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [0.204690][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.204690][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.204690][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.204425][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.204380][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.204335][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.204335][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.204290][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.204660][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.204660][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.204290][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.204290][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [0.204245][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.204199][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.204385][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.204385][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.204385][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.204396][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.204396][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [0.204859][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.204859][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.204396][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.205028][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [0.204984][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.205169][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [0.205801][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [0.205801][Decrease Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.206727][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [0.205801][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [0.205801][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [0.205801][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.205801][Decrease Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [0.206432][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [0.206432][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.206476][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.206432][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.207064][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [0.207064][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.207681][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.207064][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.207064][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [0.210011][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [0.210643][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [0.208327][Inline Method] beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser$Events.createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)
  - [0.208558][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.208558][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.210410][Decrease Field Security] 'terminals' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [0.210534][Decrease Field Security] 'name' of 'beaver.Symbol' to 'PUBLIC'
  - [0.210049][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [0.209420][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [0.208682][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.209314][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.209314][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [0.209578][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [0.204104][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [0.199262][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict'
  - [0.199447][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [0.199633][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.199677][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.199677][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [0.199492][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [0.199447][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.199818][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.199818][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [0.199818][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.199818][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [0.200449][Freeze Method] Convert 'start()' of 'beaver.comp.util.Log$Record$List' to static 
  - [0.201067][Decrease Field Security] 'n_rules' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.201067][Make Class Non-Final] beaver.ParsingTables
  - [0.201067][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.201067][Move Method] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [0.201067][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.202751][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [0.203382][Freeze Method] Convert 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [0.202330][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [0.202961][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [0.202961][Increase Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.202961][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.202961][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [0.202961][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.202961][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.202961][Increase Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [0.202961][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.202961][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.203006][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.205953][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [0.206570][Decrease Field Security] 'n_rules' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.206570][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [0.206570][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.207187][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [0.204872][Inline Method] beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Imports.createbeaver.spec.ast.Declaration$Imports(beaver.Symbol[])
  - [0.202556][Remove Method] 'misspelledTokenReplaced(beaver.Symbol)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [0.201939][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.201894][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.201939][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.201894][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.201894][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.202357][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.202357][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.202989][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [0.202989][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.202989][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.202989][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.203221][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.202758][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [0.202758][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [0.200442][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [0.200442][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [0.200210][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [0.200210][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [0.200210][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.200210][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.200210][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.200210][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.200210][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [0.194737][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [0.189894][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict'
  - [0.189894][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [0.188842][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict'
  - [0.187789][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.<clinit>()
  - [0.187789][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'

====== Run Result ======

* Name: Beaver|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 58.18 seconds
  * Quality Gain: 0.165400
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.192629
  * Possible Actions: 509
  * Applied Actions: 444
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.1263
    * numOps: 4.1789
    * iFImpl: 0.0000
    * Dep_In: 4.9368
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.1016
    * NumDesc: 1.1263

* Applied Actions:
  - [0.353187][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.353354][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.353354][Decrease Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.353393][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.355077][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [0.355077][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.352761][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.352761][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.352761][Decrease Method Security] 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [0.350445][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.350445][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.350445][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.350445][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.350445][Decrease Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.350445][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PACKAGE'
  - [0.350445][Move Method] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [0.350445][Decrease Method Security] 'trimCode(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.348129][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [0.348761][Freeze Method] Convert 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [0.343919][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.339077][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.339077][Make Class Final] beaver.comp.State
  - [0.338910][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.339118][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.334276][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.334315][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.334732][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.329890][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.330521][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [0.330521][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.330799][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [0.330838][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.326627][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.328294][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [0.324715][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.324715][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [0.322399][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.322566][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.318987][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.318987][Decrease Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.316671][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.313092][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.313425][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.313425][Move Method] 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [0.313425][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [0.312162][Instantiate Method] Move static method 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [0.312794][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [0.312000][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.312000][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.312039][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.312039][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.311801][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [0.312356][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [0.312356][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.312356][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [0.312356][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.312356][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.309530][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.307214][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.307044][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.307044][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.307383][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.307722][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.305406][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.305745][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.303430][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.301114][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.301114][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.301283][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.301283][Decrease Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.301283][Decrease Method Security] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.301707][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.301164][Make Class Abstract] beaver.comp.Action
  - [0.298848][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.296532][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.296532][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.297164][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [0.296111][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [0.296111][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.296111][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.296743][Freeze Method] Convert 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [0.296985][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [0.296389][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.294074][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.291758][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.291758][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PUBLIC'
  - [0.292097][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.292097][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [0.289781][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.290205][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.287889][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.287889][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.287889][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [0.285573][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.283257][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.280942][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.278626][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.278868][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [0.276552][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.277184][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [0.277184][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [0.277184][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.277184][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.276845][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.274529][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.277476][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [0.277516][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.275200][Inline Method] beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity) into beaver.spec.Terminal.createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)
  - [0.272884][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.271189][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PRIVATE'
  - [0.271821][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [0.270126][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.268863][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.269202][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [0.269202][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.267507][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.265812][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [0.265812][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.265851][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [0.264799][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.264375][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [0.264375][Make Class Final] beaver.comp.Action$Shift
  - [0.262680][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [0.260985][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.259722][Instantiate Method] Move static method 'createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [0.258027][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [0.256332][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [0.256332][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [0.256756][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [0.256756][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.256586][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.256586][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [0.256586][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [0.254271][Inline Method] beaver.spec.ast.Declaration$NonAssoc.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$NonAssoc.accept(beaver.spec.ast.TreeWalker)
  - [0.252586][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.250902][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.249218][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.247534][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.247703][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.246440][Instantiate Method] Move static method 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [0.246440][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.246271][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.246271][Make Class Non-Final] beaver.comp.Action$Shift
  - [0.245007][Instantiate Method] Move static method 'buildActions(beaver.spec.Grammar,beaver.comp.ParserGenerator)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParserGenerator'
  - [0.242692][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.241429][Instantiate Method] Move static method 'countStates(beaver.comp.ParsingTables)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParsingTables'
  - [0.241429][Make Class Non-Final] beaver.comp.State
  - [0.240376][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.239323][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.239323][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.239323][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [0.239955][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.238902][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.239534][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.240165][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [0.240797][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.240966][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PUBLIC'
  - [0.239914][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.240545][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.240545][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.240969][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.240969][Make Class Final] beaver.comp.Action$List
  - [0.239916][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.242864][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [0.243429][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.243429][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [0.243429][Decrease Method Security] 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.241113][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[]) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])
  - [0.241113][Decrease Method Security] 'init()' of 'beaver.Parser' to 'PACKAGE'
  - [0.241152][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.239889][Instantiate Method] Move static method 'createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])' of 'beaver.spec.Production$RHS' to its parameter type 'beaver.spec.Production$RHS$Item'
  - [0.238837][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.239006][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.239006][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.239638][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.239880][Decrease Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [0.239880][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.238827][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [0.237775][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.236722][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [0.237569][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [0.236517][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.235464][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.234412][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.234412][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.235158][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.234105][Inline Method] beaver.comp.run.Make.<init>() into beaver.comp.run.Make.createbeaver.comp.run.Make()
  - [0.233053][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.233219][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.233219][Decrease Method Security] 'init()' of 'beaver.Parser' to 'PROTECTED'
  - [0.233219][Increase Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.233219][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.232167][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [0.232167][Decrease Method Security] 'init()' of 'beaver.Parser' to 'PUBLIC'
  - [0.232167][Decrease Method Security] 'zzUnpackAction()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.231114][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.231114][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PUBLIC'
  - [0.231114][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [0.230061][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.229466][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.228414][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.227361][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.227599][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [0.226546][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.225494][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.224441][Inline Method] beaver.spec.ast.Declaration$Goal.visit() into beaver.spec.ast.Declaration$Goal.accept(beaver.spec.ast.TreeWalker)
  - [0.224441][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [0.224441][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [0.224441][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [0.224441][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.225073][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to static 
  - [0.225704][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [0.225704][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.222705][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.222744][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.222179][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.221127][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.221127][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PRIVATE'
  - [0.220074][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.220706][Freeze Method] Convert 'findNextState(int,short)' of 'beaver.ParsingTables' to static 
  - [0.220706][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [0.220706][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [0.219653][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.218600][Inline Method] beaver.comp.ParsingTables.countStates() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.218600][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [0.218600][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.218600][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.218600][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [0.218600][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [0.217548][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.216495][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [0.216495][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.215442][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.214390][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.213337][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.213337][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.212285][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.212916][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.211864][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.210811][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.211442][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [0.210390][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.209337][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.209377][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.209377][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [0.208324][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.208536][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.208748][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.209171][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.209341][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [0.208288][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.207949][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.206897][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.205844][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.206409][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [0.206409][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [0.205356][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [0.205988][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.206027][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.205180][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.203485][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.204117][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [0.203269][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [0.203027][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [0.203066][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.202501][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.201936][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.201393][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.204340][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [0.204340][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [0.204340][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.202025][Inline Method] beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$PackageName.createbeaver.spec.ast.Declaration$PackageName(beaver.Symbol)
  - [0.201525][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.201525][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [0.202156][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [0.202788][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.202788][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [0.202788][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [0.202788][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [0.202364][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.202996][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [0.202572][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.202854][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.202318][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.201901][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [0.201901][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.202179][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.201845][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.202012][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.201679][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.201679][Make Class Final] beaver.comp.Action$Shift
  - [0.201401][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.201440][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.202273][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [0.202829][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.202573][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.202847][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.202847][Increase Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.202300][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.202300][Make Class Final] beaver.comp.ParsingTables
  - [0.202534][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [0.202300][Increase Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [0.202300][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.202066][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.201832][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [0.202463][Freeze Method] Convert 'start()' of 'beaver.comp.util.Log$Record$List' to static 
  - [0.202463][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [0.202229][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [0.202229][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.201995][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.201995][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.201995][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [0.201761][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.201597][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.201597][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.201433][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.201269][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.201105][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.201105][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.201925][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [0.203483][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.203945][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.204576][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.205208][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [0.204388][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [0.204388][Decrease Method Security] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to 'PUBLIC'
  - [0.203568][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.204200][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [0.203648][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.203189][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.202179][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.202811][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [0.203442][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [0.203482][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.203810][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.203482][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.203318][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.203950][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [0.203950][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.203950][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.204581][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [0.204417][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.204254][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.204294][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.204130][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.203966][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.203966][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [0.203802][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.203802][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [0.204036][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [0.204036][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [0.204036][Make Class Non-Final] beaver.comp.ParsingTables
  - [0.204076][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.205760][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String)
  - [0.205760][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PUBLIC'
  - [0.205994][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PUBLIC'
  - [0.206626][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.207446][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [0.206393][Inline Method] beaver.spec.Terminal.<init>(java.lang.String) into beaver.spec.Terminal.createbeaver.spec.Terminal()
  - [0.205573][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.205573][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.205573][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.205573][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.205339][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [0.205339][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.205339][Make Class Non-Final] beaver.comp.Action$Shift
  - [0.206159][Decrease Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PROTECTED'
  - [0.206159][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.206159][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [0.205376][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.205337][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.205298][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.205298][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [0.205259][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.205220][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.205181][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.205142][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.205552][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.205513][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.205677][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.205677][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.205513][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.205474][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.205435][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.206066][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.206027][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.206027][Make Class Final] beaver.comp.Action$Accept
  - [0.206066][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.206027][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.206301][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [0.206301][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.206301][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [0.206847][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [0.206301][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [0.206301][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [0.206261][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.206893][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [0.206932][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.206932][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.206893][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.206893][Make Class Final] beaver.comp.ParsingTables
  - [0.207098][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.207262][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.207262][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [0.207223][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.207223][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [0.207223][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.207223][Increase Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.204907][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [0.204868][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.205415][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.206046][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [0.205500][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.205461][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.205500][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.205714][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.206345][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.206131][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.206131][Make Class Final] beaver.comp.Action$Reduce
  - [0.206092][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.206053][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.206053][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.202923][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.202923][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.202908][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [0.203190][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.202908][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.202908][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [0.202908][Decrease Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.202908][Decrease Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.204508][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.202908][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.203247][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.203586][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [0.203755][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.203755][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [0.203997][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [0.203997][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [0.203997][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [0.203997][Make Class Non-Final] beaver.comp.Action$Reduce
  - [0.198524][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [0.193682][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [0.191997][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [0.192629][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 

====== Run Result ======

* Name: Beaver|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 70.28 seconds
  * Quality Gain: 0.168648
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.189381
  * Possible Actions: 480
  * Applied Actions: 637
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.0316
    * numOps: 4.1474
    * iFImpl: 0.0000
    * Dep_In: 5.0421
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.0944
    * NumDesc: 1.1263

* Applied Actions:
  - [0.353187][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.348345][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.343503][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.341836][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [0.341836][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.336994][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.332152][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.332485][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.328275][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.327222][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [0.327500][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [0.323921][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.324254][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.324254][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [0.323202][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.323202][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [0.317728][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [0.312886][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [0.312886][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.309307][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.309863][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [0.309863][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.306284][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.305231][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.305231][Freeze Method] Convert 'nextToken()' of 'beaver.Scanner' to static 
  - [0.305648][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.302069][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.302700][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.301437][Instantiate Method] Move static method 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [0.301437][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.301437][Decrease Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [0.300384][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [0.301016][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [0.301016][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.301016][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.298700][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.299534][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [0.296678][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.296848][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.297480][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [0.300240][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.300240][Make Class Final] beaver.comp.Action$Accept
  - [0.300240][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.300574][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.301205][Freeze Method] Convert 'removeResolvedActions()' of 'beaver.comp.Action$List' to static 
  - [0.301483][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.302039][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [0.301483][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.298640][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.298809][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.299441][Freeze Method] Convert 'findFirstTerminal(int)' of 'beaver.ParsingTables' to static 
  - [0.299441][Decrease Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.299441][Move Up Method] '<init>(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [0.299441][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.299441][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to static 
  - [0.296597][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.294281][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.294958][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.292642][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.293274][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [0.293905][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.291590][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.292221][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [0.289905][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.289340][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [0.289764][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.287448][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.285133][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.285133][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.285133][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.282817][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.282817][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.280501][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.280925][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.280925][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PACKAGE'
  - [0.278609][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.276293][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.276293][Make Class Final] beaver.comp.Action$List
  - [0.276293][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.276293][Decrease Method Security] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.275446][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [0.276077][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [0.276077][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [0.273761][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.273761][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [0.273761][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.276556][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.276794][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.277211][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.277843][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [0.275059][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.272743][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.272955][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.270639][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.269587][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.269587][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.267271][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.267610][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.267892][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [0.267892][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [0.266629][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [0.266799][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.266799][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.265535][Instantiate Method] Move static method 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Terminal'
  - [0.263220][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.264904][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [0.264904][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.265535][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [0.263220][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.263259][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.260943][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.258627][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.256312][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.255768][Make Class Abstract] beaver.comp.Action
  - [0.255768][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.255808][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.254755][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.254755][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.252439][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.252681][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [0.252923][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [0.251229][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.251229][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.251229][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.251229][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.251229][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.251229][Decrease Method Security] 'init()' of 'beaver.Parser' to 'PACKAGE'
  - [0.251229][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.251229][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.249534][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [0.249534][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [0.247839][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [0.246154][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.244470][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.243418][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.241733][Inline Method] beaver.comp.Action$List.removeResolvedActions(beaver.comp.Action$List) into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.241733][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.240049][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.240049][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [0.238365][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill(beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.238365][Move Down Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [0.238365][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [0.238997][Freeze Method] Convert 'start()' of 'beaver.comp.util.Log$Record$List' to static 
  - [0.238997][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.237733][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.238365][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [0.238404][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.238404][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.237352][Inline Method] beaver.comp.run.Make.<init>() into beaver.comp.run.Make.createbeaver.comp.run.Make()
  - [0.236299][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.235247][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.234194][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.233141][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.234836][Decrease Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [0.234497][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.232802][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [0.233226][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.233226][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.233650][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [0.232597][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.232880][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.233511][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [0.233511][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [0.233511][Decrease Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.233511][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.232459][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.232882][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [0.232600][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.231547][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.231547][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [0.231547][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.230495][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.230495][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.229442][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.229442][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.229724][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [0.228672][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.228672][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.228077][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.228359][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.228359][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.228359][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.227306][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [0.227589][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.227165][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.226112][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.225060][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.225302][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [0.225341][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.225341][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.225341][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.225341][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.224289][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.224289][Decrease Method Security] 'writeMarkersClass(java.io.Writer)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [0.224289][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.224289][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [0.224289][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.224289][Decrease Method Security] 'countReferencedSymbols()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [0.223236][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.223236][Make Class Final] beaver.comp.Action$Reduce
  - [0.222897][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [0.221845][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.220792][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.219739][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.218687][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [0.217634][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.216581][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.216793][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.216624][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.218308][Introduce Factory] for beaver.comp.io.SrcReader.<init>(java.io.File)
  - [0.217255][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.216203][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.215150][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.215150][Decrease Method Security] 'writeMarkersClass(java.io.Writer)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [0.215150][Move Down Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$RuleWalker'
  - [0.215150][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [0.215150][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [0.214097][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [0.214729][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.213676][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.213676][Move Down Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [0.213716][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.212663][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.212833][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.213464][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [0.212412][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$2'
  - [0.212451][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.212209][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.211156][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.211156][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.211156][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [0.210104][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.209051][Inline Method] beaver.comp.io.SrcReader.<init>(java.io.File) into beaver.comp.io.SrcReader.createbeaver.comp.io.SrcReader()
  - [0.209333][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PUBLIC'
  - [0.208281][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.207393][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.207393][Move Up Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$RuleWalker' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.206850][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.206850][Decrease Method Security] 'writeMarkersClass(java.io.Writer)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [0.207132][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [0.207093][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.207053][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.207053][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [0.207053][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.206458][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.206740][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.206175][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [0.205611][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.205611][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [0.205111][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.205742][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [0.208674][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [0.208712][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.208712][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.208712][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [0.209344][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [0.209677][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.206752][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [0.207384][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [0.207142][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [0.207773][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [0.207604][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.207604][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [0.207039][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [0.207039][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [0.207039][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.205344][Move Up Field] 'name' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [0.205975][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to static 
  - [0.205975][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.206145][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [0.206145][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.205721][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.205552][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.206399][Decrease Field Security] 'terminals' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [0.206399][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.205552][Increase Field Security] 'terminals' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [0.205552][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [0.205552][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.205552][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.205128][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.205128][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.205128][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.204704][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [0.204744][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.204744][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [0.204320][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [0.203896][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [0.203896][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.203547][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.203127][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.203339][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [0.202830][Move Up Field] 'code' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [0.202830][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.203461][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.203461][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.203461][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.203806][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.203846][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.203702][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.203243][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.201613][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.204609][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.204609][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [0.201613][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.203874][Move Down Field] 'name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [0.201613][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.201613][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [0.201086][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.201717][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [0.202068][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [0.201743][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.201743][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.201398][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.201644][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [0.201644][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.201299][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.201299][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.198984][Remove Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of type 'beaver.spec.GrammarBuilder$3'
  - [0.198984][Increase Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.198696][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.198409][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.198450][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.198450][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [0.198737][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.199168][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.198922][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [0.198922][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [0.198491][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.198318][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.198031][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [0.198031][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.198031][Decrease Method Security] 'init()' of 'beaver.Parser' to 'PROTECTED'
  - [0.198031][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.197744][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.197497][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [0.198129][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [0.198129][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.197883][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [0.197636][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.197636][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.197780][Decrease Field Security] 'code' of 'beaver.Symbol' to 'PROTECTED'
  - [0.194551][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.194902][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.194897][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.194546][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.194295][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.194295][Make Class Non-Final] beaver.ParsingTables
  - [0.194045][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.193869][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.193912][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.193737][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.193561][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.193561][Make Class Final] beaver.comp.State$Factory
  - [0.193386][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.194463][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.193386][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.194463][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.194463][Make Class Non-Final] beaver.comp.State$Factory
  - [0.193386][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.193210][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.193210][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [0.193035][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.192859][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.192859][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.193110][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [0.193461][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.194092][Freeze Method] Convert 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to static 
  - [0.197040][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [0.197040][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.197671][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.197671][Increase Method Security] 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [0.197629][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.195313][Inline Method] beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ListType.createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)
  - [0.195313][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder' to static 
  - [0.195313][Decrease Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [0.194962][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.194962][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [0.194711][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [0.194711][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.194711][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [0.194536][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.194536][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.194360][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.194992][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [0.195284][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.195242][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.195417][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.195592][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.195943][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.195592][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.195592][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [0.195550][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.195550][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PUBLIC'
  - [0.195507][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.195507][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [0.195550][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.193865][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [0.193823][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.193780][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.193780][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to static 
  - [0.193737][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.193694][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.193694][Make Class Non-Final] beaver.comp.Action$Accept
  - [0.194326][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [0.194957][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [0.195589][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [0.195589][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [0.195881][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.195881][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.195881][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PUBLIC'
  - [0.193566][Inline Method] beaver.spec.ast.Declaration$Implements.visit(beaver.spec.GrammarBuilder) into beaver.spec.ast.Declaration$Implements.accept(beaver.spec.ast.TreeWalker)
  - [0.193273][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.193624][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.193667][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.193667][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.193316][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.193316][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.193535][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.194167][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [0.194167][Decrease Method Security] 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to 'PUBLIC'
  - [0.193875][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.193875][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.193832][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.194709][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [0.194752][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.195337][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [0.195337][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.194459][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [0.193875][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.193875][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.190499][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.190722][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.190722][Decrease Method Security] 'countReferencedSymbols()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.190679][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.191310][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [0.192203][Decrease Field Security] 'terminals' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [0.192203][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.191310][Increase Field Security] 'terminals' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [0.191942][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.192197][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PUBLIC'
  - [0.192554][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.193186][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.193229][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.193186][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.193817][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.196765][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [0.196765][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.194449][Inline Method] beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$RightAssoc.createbeaver.spec.ast.Declaration$RightAssoc(beaver.Symbol[])
  - [0.195081][Freeze Method] Convert 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.195304][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.195482][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.195482][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.196114][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [0.196114][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [0.196293][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [0.196924][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [0.196924][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [0.196924][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.197179][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [0.197179][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.197811][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to static 
  - [0.197854][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.197854][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.197811][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.197811][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.197811][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [0.197811][Decrease Method Security] 'writeReduceActionCode(java.io.Writer)' of 'beaver.spec.Production' to 'PACKAGE'
  - [0.197811][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.197811][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [0.201158][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [0.201408][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [0.201701][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.201701][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.198364][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [0.198364][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.198587][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.198587][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.198035][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.198035][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [0.198035][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.194652][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.194652][Increase Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.194235][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.194278][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.194023][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [0.194202][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PUBLIC'
  - [0.194158][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.194158][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.194158][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.194516][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.194516][Increase Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.194516][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [0.194516][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.192831][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.192831][Increase Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [0.192875][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.191822][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.190770][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.190813][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.190770][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.190726][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.190726][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.191619][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [0.191619][Decrease Method Security] 'countReferencedSymbols()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [0.191619][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PACKAGE'
  - [0.190726][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [0.190770][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.193717][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [0.191401][Inline Method] beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration) into beaver.comp.Configuration$PropagationLink.createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)
  - [0.190138][Instantiate Method] Move static method 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to its parameter type 'beaver.comp.Configuration'
  - [0.190495][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [0.190793][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [0.190793][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.191090][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.190793][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.191473][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [0.191517][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.191517][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.190836][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.190836][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.191517][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [0.191560][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.190880][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.190880][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.190836][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.190880][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.190880][Decrease Method Security] 'init()' of 'beaver.Parser' to 'PUBLIC'
  - [0.190880][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [0.190836][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.190793][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.190793][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.190793][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.190749][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.191381][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [0.191827][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.192082][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [0.191636][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [0.192268][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [0.192268][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.192268][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.192268][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PUBLIC'
  - [0.192899][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [0.193078][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.193078][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.192446][Instantiate Method] Move static method 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [0.191183][Instantiate Method] Move static method 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [0.191814][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [0.191814][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PUBLIC'
  - [0.191993][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.192625][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.193256][Freeze Method] Convert 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to static 
  - [0.193888][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [0.193888][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [0.195572][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [0.194519][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [0.194563][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.194920][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.194920][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.194563][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.194519][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.194563][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.194563][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.195195][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [0.195151][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.195151][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [0.195406][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PUBLIC'
  - [0.195406][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [0.195406][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.195406][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.195406][Freeze Method] Convert 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to static 
  - [0.195406][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.195406][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [0.196299][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [0.196299][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [0.196299][Decrease Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [0.196299][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.195406][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [0.195406][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.195585][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.196216][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [0.196216][Make Class Non-Final] beaver.comp.Action$Reduce
  - [0.196216][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [0.196471][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [0.196216][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.196260][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.196260][Increase Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PACKAGE'
  - [0.196081][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [0.196260][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PUBLIC'
  - [0.196216][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.196216][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.196848][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.196848][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.197479][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.198111][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [0.198155][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.198111][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.198743][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to static 
  - [0.198743][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [0.198743][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [0.199374][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.199553][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.199553][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.199808][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [0.199986][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.199986][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.199986][Increase Method Security] 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [0.199986][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [0.199986][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.199986][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [0.194513][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [0.194513][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [0.194513][Make Class Non-Final] beaver.comp.Action$List
  - [0.189671][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [0.190302][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [0.190302][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.192088][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [0.192768][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [0.192768][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.190982][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [0.189930][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict'
  - [0.190561][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [0.190919][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.189866][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.<clinit>()
  - [0.189866][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.189186][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.189441][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [0.189084][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.189530][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.189828][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.189828][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.189828][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [0.189828][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.189828][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.189828][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [0.189828][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [0.189381][Increase Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.189381][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'

====== Run Result ======

* Name: Beaver|Technical Debt|SA|T1.5|I5000
  * Run Info: Simulated Annealing. Initial Temperature: 1.500000. Iterations: 5000.
  * Time Taken: 81.12 seconds
  * Quality Gain: 0.185488
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.172542
  * Possible Actions: 395
  * Applied Actions: 1050
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 4.8632
    * numOps: 4.0316
    * iFImpl: 0.0000
    * Dep_In: 5.2842
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1579
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.0081
    * NumDesc: 1.1263

* Applied Actions:
  - [0.358661][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [0.359292][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [0.359292][Decrease Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.359924][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [0.355082][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.355082][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.350240][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.345398][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.345398][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.340556][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.339503][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.340134][Freeze Method] Convert 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [0.340766][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [0.340766][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.340766][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.340766][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.340933][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.339670][Instantiate Method] Move static method 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [0.334827][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.330617][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.330617][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [0.328301][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.328301][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.328301][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.328301][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.328301][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.322827][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [0.322827][Decrease Method Security] 'zzUnpackTrans(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.323459][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [0.324091][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [0.319249][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [0.315670][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.318617][Introduce Factory] for beaver.comp.Action$Accept.<init>(beaver.spec.Grammar)
  - [0.318617][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [0.319249][Freeze Method] Convert 'findNextState(int,short)' of 'beaver.ParsingTables' to static 
  - [0.315670][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.315670][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [0.316003][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.316211][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.315616][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.316248][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.312669][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.309807][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.309807][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [0.310439][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.307479][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.307479][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.307479][Decrease Method Security] 'hasCollisions()' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.306426][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.306426][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.307058][Freeze Method] Convert 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [0.304110][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.304110][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [0.304110][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.304110][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.303058][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.300742][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.300742][Decrease Method Security] 'zzUnpackAttribute(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.298426][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.296110][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.296742][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [0.294426][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.295058][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [0.295058][Increase Method Security] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.295345][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.293029][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.293029][Decrease Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.293029][Make Class Final] beaver.comp.Action$Accept
  - [0.290713][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.289661][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.287345][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.287345][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [0.287345][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [0.285029][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.286713][Introduce Factory] for beaver.Parser$Exception.<init>(java.lang.String)
  - [0.286713][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.287345][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [0.287345][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [0.288207][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [0.287154][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.287154][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [0.287154][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.287442][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.287442][Move Method] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.290389][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [0.288073][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.287021][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.287652][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.289336][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [0.289336][Decrease Method Security] 'shift(short)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.291021][Introduce Factory] for beaver.spec.Grammar$Exception.<init>(java.lang.String)
  - [0.291021][Decrease Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.291365][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.291365][Freeze Method] Convert 'getId()' of 'beaver.comp.Action' to static 
  - [0.291997][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [0.291997][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to static 
  - [0.291997][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.292037][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.292037][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.289721][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.287406][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.285090][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.285090][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.285090][Decrease Method Security] 'init()' of 'beaver.Parser' to 'PACKAGE'
  - [0.282774][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.282774][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [0.282774][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.280458][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)
  - [0.278142][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.275827][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.275827][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [0.275827][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [0.273511][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.271195][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.271367][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.269052][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.269052][Make Class Final] beaver.comp.Configuration$Set
  - [0.269224][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.269224][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.269856][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [0.270028][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.270028][Decrease Method Security] 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.267712][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.267712][Move Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [0.265396][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.263081][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.263368][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [0.263368][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.263368][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.263368][Decrease Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.261052][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.258736][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.258983][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [0.256667][Inline Method] beaver.comp.Action$Accept.<init>(beaver.spec.Grammar) into beaver.comp.Action$Accept.createbeaver.comp.Action$Accept(beaver.spec.Grammar)
  - [0.256667][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.256667][Decrease Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.253653][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.251899][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.251899][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.251941][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.252572][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [0.251520][Inline Method] beaver.Parser$Exception.<init>(java.lang.String) into beaver.Parser$Exception.createbeaver.Parser$Exception()
  - [0.251520][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.249835][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.249835][Make Class Non-Final] beaver.comp.Configuration$Set
  - [0.250467][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.State'
  - [0.253414][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [0.252362][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken(beaver.Parser$TokenStream)
  - [0.252993][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [0.252993][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.253034][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.252449][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.246976][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of type 'beaver.comp.Action$Shift'
  - [0.246976][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [0.250028][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [0.250028][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.250028][Decrease Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [0.248976][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.244133][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [0.244133][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [0.244133][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.241081][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [0.241081][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [0.238765][Inline Method] beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log) into beaver.spec.GrammarBuilder.createbeaver.spec.GrammarBuilder(beaver.comp.util.Log)
  - [0.238765][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.238765][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.238765][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.238473][Increase Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.238824][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.237139][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.237139][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.237139][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.235876][Instantiate Method] Move static method 'serializeParsingTables(int[],beaver.spec.NonTerminal,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [0.235876][Move Up Field] 'name' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [0.235876][Increase Method Security] 'zzUnpackTrans(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.235876][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [0.235876][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [0.236315][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [0.236946][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.237578][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [0.237578][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [0.237578][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.234425][Move Up Field] 'code' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [0.235057][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [0.234004][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.233504][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.232452][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [0.231399][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.232031][Freeze Method] Convert 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [0.232072][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.231020][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.231020][Decrease Method Security] 'zzUnpackAttribute(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.231020][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.231020][Decrease Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.231651][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.231651][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.230598][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict'
  - [0.229546][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.228493][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.227441][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.226388][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.225335][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.224283][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.224640][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.224045][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.224045][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [0.222992][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.<clinit>()
  - [0.221939][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.220887][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [0.221518][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.221741][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.220689][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.220689][Make Class Final] beaver.comp.State$Factory
  - [0.221091][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.221091][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.220038][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.218986][Inline Method] beaver.spec.Grammar$Exception.<init>(java.lang.String) into beaver.spec.Grammar$Exception.createbeaver.spec.Grammar$Exception()
  - [0.218986][Decrease Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.219617][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [0.219799][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.218746][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.219378][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [0.218325][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [0.217273][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.216220][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.215978][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.214925][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [0.217873][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [0.218236][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.218539][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.218539][Decrease Method Security] 'init()' of 'beaver.Parser' to 'PROTECTED'
  - [0.218721][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.218115][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.218375][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [0.220059][Introduce Factory] for beaver.Parser$Events.<init>()
  - [0.220059][Decrease Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.220059][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.220101][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.220101][Decrease Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [0.220283][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.217968][Inline Method] beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$Header.createbeaver.spec.ast.Declaration$Header(beaver.Symbol)
  - [0.217968][Decrease Method Security] 'writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [0.218010][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.216747][Instantiate Method] Move static method 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.NonTerminal'
  - [0.215694][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.214641][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.214641][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.214641][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.215273][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [0.214220][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.213168][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.213799][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [0.213799][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.212747][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.212747][Make Class Final] beaver.comp.Configuration
  - [0.212747][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [0.213378][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [0.213378][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.212326][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.212326][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [0.212957][Move Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [0.213589][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [0.216536][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [0.216536][Decrease Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [0.216536][Increase Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.214220][Inline Method] beaver.comp.Action$List.<init>(beaver.comp.State) into beaver.comp.Action$List.createbeaver.comp.Action$List(beaver.comp.State)
  - [0.214220][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.214584][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.215216][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.216550][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.216550][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.215955][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.215998][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.214663][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.214663][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.214663][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.214663][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.214663][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.214620][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.214578][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.214578][Decrease Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [0.213315][Instantiate Method] Move static method 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.State'
  - [0.213315][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.211631][Inline Method] beaver.comp.State.createbeaver.comp.Action$List() into beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [0.211934][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.210881][Inline Method] beaver.Parser$Events.<init>() into beaver.Parser$Events.createbeaver.Parser$Events()
  - [0.210444][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [0.209391][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.209391][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.209615][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.208562][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.208603][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.209199][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [0.209199][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.210984][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [0.211342][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.211342][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.209556][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [0.210187][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [0.209135][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.209135][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [0.209594][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.208541][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.211685][Move Down Field] 'assoc' of 'beaver.spec.GrammarSymbol' to its child class 'beaver.spec.Terminal'
  - [0.208541][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.207489][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.208120][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [0.208120][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.208163][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [0.208163][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [0.208422][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PUBLIC'
  - [0.207370][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.207370][Make Class Non-Final] beaver.ParsingTables
  - [0.206317][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.206949][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [0.207312][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.207085][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [0.207127][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.206075][Inline Method] beaver.comp.run.Options.<init>() into beaver.comp.run.Options.createbeaver.comp.run.Options()
  - [0.205607][Move Down Field] 'log' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [0.205607][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [0.206053][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.206351][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.204565][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [0.203579][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.206526][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [0.206526][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.204210][Inline Method] beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ListType.createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)
  - [0.204842][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [0.204842][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [0.204842][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.203789][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [0.204421][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [0.203756][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.206699][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.206699][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [0.207330][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to static 
  - [0.207330][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.207330][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.204387][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.204818][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.204818][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.206502][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String)
  - [0.206330][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.205277][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [0.205277][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [0.204415][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [0.204846][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.205478][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [0.204616][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [0.204616][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.202892][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [0.203523][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [0.201799][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [0.202144][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.201512][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [0.201552][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.203237][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [0.202184][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [0.203868][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String)
  - [0.203868][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.203868][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.202816][Inline Method] beaver.spec.Terminal.<init>(java.lang.String) into beaver.spec.Terminal.createbeaver.spec.Terminal()
  - [0.202471][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.201839][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action'
  - [0.201264][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [0.200721][Make Class Abstract] beaver.comp.Action
  - [0.201066][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.201066][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [0.201312][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [0.201352][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.201568][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.202199][Freeze Method] Convert 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to static 
  - [0.202199][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.202199][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [0.202199][Increase Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.203061][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [0.203061][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.200746][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [0.201377][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [0.201377][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.200515][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.199972][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.199541][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.200172][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to static 
  - [0.199741][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.199310][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.199483][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.200345][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [0.200976][Freeze Method] Convert 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to static 
  - [0.200976][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [0.200976][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.198029][Remove Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [0.197167][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [0.197798][Freeze Method] Convert 'size()' of 'beaver.comp.util.Log$Record$List' to static 
  - [0.202009][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.202640][Freeze Method] Convert 'start()' of 'beaver.spec.Production$List' to static 
  - [0.199061][Inline Method] beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables) into beaver.comp.ParserGenerator$CompiledParser.createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.199406][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.199021][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.199237][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.198797][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.199141][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [0.199773][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [0.199773][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.199428][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.199428][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.199083][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [0.199715][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [0.199370][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.199370][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.199370][Increase Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [0.199370][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [0.199025][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.200749][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [0.200749][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [0.201381][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [0.201381][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.199657][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PRIVATE'
  - [0.199312][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.199312][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.198967][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.199599][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule' to static 
  - [0.200461][Decrease Field Security] 'terminals' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [0.200461][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [0.200461][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [0.200116][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.199771][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [0.199944][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.199656][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.199656][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [0.199848][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [0.199848][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.199848][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [0.199560][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [0.200192][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [0.199905][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.200336][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.200336][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.199905][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.199905][Decrease Method Security] 'serializeParsingTables(int[])' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [0.199648][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.199648][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [0.199406][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.199164][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.199588][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.199588][Make Class Final] beaver.comp.Action$Shift
  - [0.199164][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.202111][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [0.202111][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.202450][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.202450][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.202450][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.200134][Inline Method] beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ClassCode.createbeaver.spec.ast.Declaration$ClassCode(beaver.Symbol)
  - [0.199796][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.199553][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.199311][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [0.199943][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [0.200282][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.199943][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.199731][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [0.199731][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.200363][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to static 
  - [0.200605][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [0.200435][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.200266][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.200266][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [0.200266][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.200605][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.200605][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PROTECTED'
  - [0.200605][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.197393][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.197434][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.197434][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [0.197434][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [0.197434][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.197434][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [0.197434][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.194486][Remove Method] 'visit(beaver.spec.ast.Rule)' of type 'beaver.spec.GrammarBuilder$1'
  - [0.194486][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [0.194142][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.195866][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [0.194142][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [0.193969][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [0.193969][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.193969][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [0.193969][Make Class Final] beaver.comp.Configuration$Set
  - [0.192917][Remove Method] 'setLocation(int,int)' of type 'beaver.spec.ast.Node'
  - [0.192917][Increase Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.192917][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.191864][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.192496][Freeze Method] Convert 'findFirstTerminal(int)' of 'beaver.ParsingTables' to static 
  - [0.192323][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.192323][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.192151][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.192397][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [0.192828][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.192582][Increase Field Security] 'id' of 'beaver.comp.State' to 'PACKAGE'
  - [0.192582][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [0.193213][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [0.193558][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.193599][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.194231][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [0.194231][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [0.190906][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [0.191157][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.191157][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.191157][Increase Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.191157][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.190525][Instantiate Method] Move static method 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [0.189262][Instantiate Method] Move static method 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [0.188767][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.188416][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.189048][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.190732][Introduce Factory] for beaver.Symbol.<init>()
  - [0.191363][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [0.191614][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.191865][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [0.192303][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.192479][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [0.194163][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [0.193110][Inline Method] beaver.spec.parser.GrammarParser.<init>() into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser()
  - [0.192860][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [0.193491][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [0.193316][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.193608][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.194240][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [0.193947][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.193947][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [0.192895][Inline Method] beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser() into beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [0.193526][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [0.194158][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [0.194790][Freeze Method] Convert 'get(int)' of 'beaver.comp.util.IntArray' to static 
  - [0.195228][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.194790][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [0.194539][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.194288][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.194288][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.194288][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.194639][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.194464][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.194815][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.194815][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.194815][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.195446][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [0.195095][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.195446][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.195271][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.195095][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.194920][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.195271][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.194920][Move Up Field] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.194920][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [0.195551][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.195902][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.196534][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [0.196534][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.197165][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [0.197516][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [0.197341][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.197633][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.197282][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.197282][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.197575][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.197282][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.197282][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.197282][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.197324][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.197032][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [0.197032][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [0.196155][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [0.196276][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.195383][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [0.195383][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [0.193597][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [0.193954][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.192169][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [0.192169][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [0.191651][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.194598][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [0.191651][Inline Method] beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser(beaver.comp.util.Log)
  - [0.191114][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.191471][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.191471][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [0.191471][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.191471][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.191471][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.191292][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.191516][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.191337][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.191337][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.191337][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.191592][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [0.191531][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.191531][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.191531][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.191573][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.191397][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.191397][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.191356][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.191314][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.191314][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [0.191945][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.191904][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.191862][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.191820][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.191820][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [0.191778][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.191778][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.191778][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [0.191778][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [0.192217][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.192217][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.192217][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.192217][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [0.192217][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.192217][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [0.188638][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$5'
  - [0.183796][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal) into beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [0.183357][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [0.183357][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.182919][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [0.182919][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.182480][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.182522][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.182522][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.182522][Make Class Final] beaver.comp.Action$Reduce
  - [0.182522][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.182522][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [0.182522][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.182522][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.182480][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.182480][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.182480][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [0.180164][Remove Method] 'missingTokenInserted(beaver.Symbol)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [0.180122][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.180122][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [0.180122][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.180122][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.180081][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.180081][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [0.180081][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [0.180081][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [0.180081][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.180039][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.180039][Make Class Final] beaver.comp.ParsingTables
  - [0.180039][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [0.179997][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.179997][Make Class Non-Final] beaver.comp.ParsingTables
  - [0.179955][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.179955][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.179997][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.179955][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.179955][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.179914][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.180545][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [0.180545][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.180796][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [0.180545][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [0.180984][Decrease Field Security] 'txt' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [0.180984][Increase Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.180984][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.181026][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.180984][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.180984][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.181615][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [0.181615][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.181615][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.181657][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.182096][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.182096][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.182054][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.182096][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.182096][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.182096][Make Class Non-Final] beaver.comp.State$Factory
  - [0.182096][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.182054][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.185001][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [0.185177][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.185218][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.185850][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.185850][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [0.185850][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.185850][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [0.183534][Inline Method] beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration) into beaver.comp.Configuration$PropagationLink.createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)
  - [0.183885][Move Down Field] 'log' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [0.184061][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.184061][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.184236][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PUBLIC'
  - [0.182552][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of type 'beaver.spec.GrammarSymbol$1'
  - [0.182552][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [0.181289][Instantiate Method] Move static method 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to its parameter type 'beaver.comp.Configuration'
  - [0.181289][Decrease Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [0.181289][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PUBLIC'
  - [0.181289][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [0.180938][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.180762][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.180762][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [0.181394][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.181352][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.181352][Make Class Non-Final] beaver.comp.Configuration$Set
  - [0.181394][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.181394][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.181394][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.181833][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [0.182464][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [0.182422][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.182422][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [0.182422][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [0.182598][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.182817][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.183449][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.185133][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [0.185133][Increase Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.185133][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.185133][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [0.185308][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.185387][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.185387][Decrease Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [0.185826][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.185826][Make Class Final] beaver.comp.State$Factory
  - [0.185826][Make Class Final] beaver.comp.ParsingTables
  - [0.184773][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [0.184773][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.184773][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PROTECTED'
  - [0.184773][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.184334][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.184159][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.183984][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.183905][Move Down Field] 'defs' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [0.183905][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [0.183905][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [0.184536][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [0.184536][Increase Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.185168][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [0.185800][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [0.186431][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [0.186431][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PUBLIC'
  - [0.186431][Make Class Non-Final] beaver.comp.Action$Reduce
  - [0.185800][Instantiate Method] Move static method 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [0.184536][Instantiate Method] Move static method 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [0.184578][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.184536][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.184536][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [0.184712][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.184536][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.184536][Increase Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.184536][Increase Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.184536][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.184536][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.184536][Make Class Final] beaver.comp.State
  - [0.184536][Increase Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.184887][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.185138][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.185138][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.185138][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [0.185138][Make Class Non-Final] beaver.comp.ParsingTables
  - [0.184787][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.184536][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.184712][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.184712][Increase Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.184754][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.184712][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.184712][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [0.184712][Decrease Method Security] 'unexpectedTokenRemoved()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.184712][Increase Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [0.184962][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [0.184712][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [0.184887][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PUBLIC'
  - [0.184887][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.184887][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [0.185238][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.185238][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [0.185238][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [0.185280][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.185631][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.186216][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.185631][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [0.185631][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.185280][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [0.184929][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.184929][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [0.184929][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [0.185180][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [0.184929][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [0.184929][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [0.184929][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.184929][Decrease Method Security] 'increaseStackCapacity(beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [0.185180][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [0.185180][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [0.185138][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.186822][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [0.185769][Inline Method] beaver.spec.Production$RHS.<init>() into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS()
  - [0.186120][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.186752][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [0.186752][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [0.186752][Increase Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [0.186401][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.186401][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.187033][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [0.187033][Decrease Method Security] 'errorPhraseRemoved()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.186682][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.186682][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.186682][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.186682][Decrease Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [0.186682][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [0.186724][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.186724][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.186373][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.186373][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.186373][Increase Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.186373][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.186022][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.185671][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.185320][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.185612][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.185612][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [0.185262][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.185262][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [0.184969][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.184927][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.185178][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [0.185178][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.184927][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [0.184927][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [0.185006][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.185357][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.185357][Decrease Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PUBLIC'
  - [0.187041][Introduce Factory] for beaver.Symbol.<init>(short)
  - [0.187041][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [0.187217][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.188901][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [0.188901][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [0.188901][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [0.188901][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [0.185953][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [0.185953][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.184269][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of type 'beaver.spec.Production$2'
  - [0.184269][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [0.184520][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [0.184562][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.184311][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [0.184269][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.184620][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [0.184971][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.184620][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.184620][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.184620][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [0.184871][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [0.185748][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [0.185790][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.185790][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PACKAGE'
  - [0.185539][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.185539][Make Class Final] beaver.comp.Configuration$Set
  - [0.185539][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.182592][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action$1'
  - [0.181715][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [0.182065][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.181715][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.181673][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.182111][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [0.181673][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [0.181965][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.181965][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [0.181673][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.181673][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [0.182304][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [0.182304][Decrease Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [0.182346][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.182304][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.182480][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.184136][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.182480][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.182772][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.182850][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.182772][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.182772][Freeze Method] Convert 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action,beaver.comp.State)' of 'beaver.comp.Action' to static 
  - [0.182772][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [0.182814][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.182772][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.182772][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [0.182772][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [0.182814][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.182772][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.182772][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.182772][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PUBLIC'
  - [0.182772][Make Class Non-Final] beaver.comp.State
  - [0.182772][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [0.182772][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PUBLIC'
  - [0.182772][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [0.182772][Make Class Non-Final] beaver.comp.State$Factory
  - [0.182772][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.182948][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.182948][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [0.183579][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [0.183579][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.Rule)' of 'beaver.spec.ast.Rule' to 'PUBLIC'
  - [0.184018][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.184018][Increase Method Security] 'unexpectedTokenRemoved()' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.183579][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.183579][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PUBLIC'
  - [0.183579][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.183930][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.183579][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.183228][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.183667][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.183959][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.184210][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [0.183918][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.186865][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [0.187303][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [0.187303][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.184988][Inline Method] beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity) into beaver.spec.Terminal.createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)
  - [0.183725][Instantiate Method] Move static method 'createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [0.183725][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [0.184163][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [0.184163][Increase Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.183725][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [0.183725][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.185409][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [0.184356][Inline Method] beaver.comp.run.Make.<init>() into beaver.comp.run.Make.createbeaver.comp.run.Make()
  - [0.184356][Decrease Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [0.184532][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.184882][Move Down Field] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [0.184532][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.184532][Make Class Final] beaver.comp.ParsingTables
  - [0.188742][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.188742][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.188742][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [0.188810][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.188810][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [0.188851][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.189027][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [0.189027][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [0.185448][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1) into beaver.comp.Configuration$Set.createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)
  - [0.185380][Move Down Field] 'defs' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [0.185339][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.185514][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.185514][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [0.184882][Instantiate Method] Move static method 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [0.183619][Instantiate Method] Move static method 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [0.183619][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [0.182567][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [0.182608][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.182608][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [0.183486][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [0.182608][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [0.183486][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [0.182608][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.182608][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [0.181731][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.181731][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [0.181689][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.181982][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.182613][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [0.182613][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.182321][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.182363][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.182655][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [0.182697][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.182697][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.183329][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [0.183287][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.185041][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [0.185480][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.185480][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [0.185831][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.185831][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.184076][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.184118][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.184160][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.183809][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.183809][Decrease Method Security] 'errorPhraseRemoved()' of 'beaver.Parser$Events' to 'PUBLIC'
  - [0.184634][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.184634][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [0.183809][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.183767][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.183725][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.184278][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [0.184863][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.184278][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [0.183725][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.183725][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.184310][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [0.183725][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [0.184076][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.184327][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [0.184076][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [0.184034][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.184473][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [0.185350][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [0.185982][Freeze Method] Convert 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [0.185982][Freeze Method] Convert 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to static 
  - [0.185105][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [0.184666][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [0.184958][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.184958][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [0.185309][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [0.185485][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.185134][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.184841][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [0.184841][Make Class Non-Final] beaver.comp.Configuration
  - [0.185473][Move Method] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [0.184841][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [0.184841][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [0.184666][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.184666][Increase Method Security] 'errorPhraseRemoved()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.184666][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [0.184734][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.185084][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.184734][Increase Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [0.184558][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.184558][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [0.184600][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.184424][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.184424][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [0.184249][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.184074][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.183898][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.183898][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.183898][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [0.183898][Decrease Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [0.184074][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.181758][Remove Method] 'visit(beaver.spec.ast.Rule)' of type 'beaver.spec.GrammarBuilder$5'
  - [0.179442][Remove Field] 'lhs_sym' of type 'beaver.spec.GrammarBuilder$5'
  - [0.179442][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.180074][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [0.179898][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.179957][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.179957][Decrease Method Security] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action,beaver.comp.State)' of 'beaver.comp.Action' to 'PROTECTED'
  - [0.176520][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.178306][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [0.178306][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.176520][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [0.176520][Decrease Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.176520][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [0.176563][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.176563][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PACKAGE'
  - [0.176563][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [0.176563][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [0.176563][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [0.172984][Remove Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [0.172805][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.172627][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.172584][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.172941][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.172584][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [0.172542][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.172899][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.172542][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [0.172542][Decrease Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'

====== Task Summary ======

* General Info:
  * Average time across all runs: 95.87 seconds
  * Average quality gain across all runs: 0.176581 (Average Score: 0.181449)
  * Highest quality gain across all runs: 0.187215 (Score: 0.170814)
  * Lowest quality gain across all runs: 0.165400 (Score: 0.192629)
  * Time taken to complete task: 958.68 seconds

* Metric Summary:
  * Dep_Out
    * Average Quality Gain: 0.7389 (Average Score: 5.0295)
    * Highest Quality Gain: 0.9053 (Best Score: 4.8632)
    * Lowest Quality Gain: 0.6421 (Worst Score: 5.1263)
  * numOps
    * Average Quality Gain: 0.9263 (Average Score: 4.1263)
    * Highest Quality Gain: 1.0211 (Best Score: 4.0316)
    * Lowest Quality Gain: 0.8526 (Worst Score: 4.2000)
  * iFImpl
    * Average Quality Gain: 0.0000 (Average Score: 0.0000)
    * Highest Quality Gain: 0.0000 (Best Score: 0.0000)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.0000)
  * Dep_In
    * Average Quality Gain: 0.2242 (Average Score: 4.9863)
    * Highest Quality Gain: 0.3579 (Best Score: 4.8526)
    * Lowest Quality Gain: -0.0737 (Worst Score: 5.2842)
  * nesting
    * Average Quality Gain: 0.0000 (Average Score: 0.6526)
    * Highest Quality Gain: 0.0000 (Best Score: 0.6526)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.6526)
  * numCls
    * Average Quality Gain: 0.0000 (Average Score: 11.8750)
    * Highest Quality Gain: 0.0000 (Best Score: 11.8750)
    * Lowest Quality Gain: 0.0000 (Worst Score: 11.8750)
  * numFields
    * Average Quality Gain: 0.0011 (Average Score: 3.1674)
    * Highest Quality Gain: 0.0105 (Best Score: 3.1579)
    * Lowest Quality Gain: 0.0000 (Worst Score: 3.1684)
  * abstractness
    * Average Quality Gain: 0.0278 (Average Score: 0.1108)
    * Highest Quality Gain: 0.0278 (Best Score: 0.1108)
    * Lowest Quality Gain: 0.0278 (Worst Score: 0.1108)
  * numInterf
    * Average Quality Gain: 0.0000 (Average Score: 0.0000)
    * Highest Quality Gain: 0.0000 (Best Score: 0.0000)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.0000)
  * NOC
    * Average Quality Gain: 0.0000 (Average Score: 0.4842)
    * Highest Quality Gain: 0.0000 (Best Score: 0.4842)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.4842)
  * avrgFieldVisibility
    * Average Quality Gain: 0.2328 (Average Score: 1.0719)
    * Highest Quality Gain: 0.3052 (Best Score: 0.9995)
    * Lowest Quality Gain: 0.1829 (Worst Score: 1.1217)
  * NumDesc
    * Average Quality Gain: 0.0000 (Average Score: 1.1263)
    * Highest Quality Gain: 0.0000 (Best Score: 1.1263)
    * Lowest Quality Gain: 0.0000 (Worst Score: 1.1263)
