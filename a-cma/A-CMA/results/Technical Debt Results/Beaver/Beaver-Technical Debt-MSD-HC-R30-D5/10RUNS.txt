====== Run Result ======

* Name: Beaver|Technical Debt|MSD-HC|R30|D5
  * Run Info: Steepest Descent Hill Climbing. Restart Count: 30. Depth: 5.
  * Time Taken: 31.03 seconds
  * Quality Gain: 0.182504
  * Metric Mode: Aggregate
  * Expanded Designs: 111838

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.175525
  * Possible Actions: 555
  * Applied Actions: 129
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.1684
    * numOps: 4.2211
    * iFImpl: 0.0000
    * Dep_In: 4.5895
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.0716
    * NumDesc: 1.1263

* Applied Actions:
  - [0.353187][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.348345][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.343503][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.338661][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.333819][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.329608][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.326029][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.322450][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.318871][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.315292][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.312419][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.310103][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.307787][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.305472][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.303156][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.300840][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.298524][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.296208][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.293893][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.291577][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.289261][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.286945][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.284629][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.282314][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.279998][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.277682][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.275366][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.273050][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.270735][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.268419][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.266103][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.263787][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.261472][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.259156][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.256840][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.255145][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.253450][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [0.251755][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [0.250060][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.248365][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [0.246670][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.244976][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [0.243291][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.241607][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.239923][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.238660][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.237607][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.236554][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.235502][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [0.234449][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.233397][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [0.232344][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.231291][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [0.230239][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.229186][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.228133][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.227081][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.226028][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.224976][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [0.223923][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.222870][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [0.221818][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.220765][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.219712][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.218660][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.217607][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.216554][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.215502][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.214449][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.213397][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.212344][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.211291][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.210239][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.209186][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.208133][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.207081][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.206028][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.204976][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.203923][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.202870][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.201818][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.200765][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.199712][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.198660][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.197607][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.196554][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.195788][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.195193][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.194597][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.194032][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.193467][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.192902][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.192126][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.191582][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.191039][Make Class Abstract] beaver.comp.Action
  - [0.190539][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.190205][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.189967][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.189729][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.189491][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.189324][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.189158][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188991][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188824][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188658][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188491][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188324][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.188158][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.188197][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.188197][Make Class Final] beaver.comp.Configuration$Set
  - [0.191309][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [0.191309][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.191309][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [0.187922][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.187739][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.187739][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [0.187739][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [0.187739][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.187739][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [0.187739][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.184578][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.185209][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [0.185209][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [0.185209][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [0.186894][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [0.186894][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [0.181420][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [0.176578][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [0.175525][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()

====== Run Result ======

* Name: Beaver|Technical Debt|MSD-HC|R30|D5
  * Run Info: Steepest Descent Hill Climbing. Restart Count: 30. Depth: 5.
  * Time Taken: 35.29 seconds
  * Quality Gain: 0.189231
  * Metric Mode: Aggregate
  * Expanded Designs: 129478

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.168798
  * Possible Actions: 541
  * Applied Actions: 159
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.1158
    * numOps: 4.1895
    * iFImpl: 0.0000
    * Dep_In: 4.6105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.0548
    * NumDesc: 1.1263

* Applied Actions:
  - [0.353187][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.348345][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.343503][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.338661][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.333819][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.329608][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.326029][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.322450][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.318871][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.315292][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.312419][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.310103][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.307787][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.305472][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.303156][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.300840][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.298524][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.296208][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.293893][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.291577][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.289261][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.286945][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.284629][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.282314][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.279998][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.277682][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.275366][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.273050][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.270735][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.268419][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.266103][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.263787][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.261472][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.259156][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.256840][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.255145][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [0.253450][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.251755][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [0.250060][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.248365][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [0.246670][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [0.244976][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.243291][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.241607][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.239923][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.238660][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.237607][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.236554][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.235502][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [0.234449][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [0.233397][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.232344][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.231291][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.230239][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.229186][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [0.228133][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.227081][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.226028][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.224976][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.223923][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.222870][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.221818][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.220765][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.219712][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.218660][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.217607][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.216554][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [0.215502][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.214449][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.213397][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.212344][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.211291][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.210239][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.209186][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [0.208133][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.207081][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.206028][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.204976][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [0.203923][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.202870][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.201818][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.200765][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.199712][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.198660][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.197607][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.196554][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.195788][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.195193][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.194597][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.194032][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.193467][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.192902][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.192126][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.191582][Make Class Abstract] beaver.comp.Action
  - [0.191039][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.190539][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.190205][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.189967][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.189729][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.189491][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.189324][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.189158][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188991][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188824][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188658][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188491][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188324][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188158][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.188158][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.188789][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [0.188789][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.188789][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [0.188789][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.187737][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.186684][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.186684][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.189797][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [0.190429][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [0.190702][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.191334][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [0.187951][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.186284][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PROTECTED'
  - [0.184617][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PACKAGE'
  - [0.184340][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [0.184340][Decrease Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.184340][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [0.187501][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [0.187665][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.187665][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.184142][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.184309][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.185993][Introduce Factory] for beaver.Parser$Exception.<init>(java.lang.String)
  - [0.191467][Introduce Factory] for beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.192099][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [0.192376][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.187534][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)
  - [0.185640][Instantiate Method] Move static method 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [0.182061][Inline Method] beaver.comp.Action$Reduce.createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.State) into beaver.comp.Action$Reduce.resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)
  - [0.181008][Inline Method] beaver.Parser$Exception.<init>(java.lang.String) into beaver.Parser$Exception.createbeaver.Parser$Exception()
  - [0.184155][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [0.184787][Freeze Method] Convert 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to static 
  - [0.186471][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [0.187291][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [0.187291][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.184157][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [0.183104][Inline Method] beaver.comp.util.Log.<init>() into beaver.comp.util.Log.createbeaver.comp.util.Log()
  - [0.182124][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [0.181140][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.179614][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.178767][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [0.178683][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.181987][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [0.182411][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [0.182411][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.182411][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [0.182411][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.176937][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [0.172095][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [0.168798][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'

====== Run Result ======

* Name: Beaver|Technical Debt|MSD-HC|R30|D5
  * Run Info: Steepest Descent Hill Climbing. Restart Count: 30. Depth: 5.
  * Time Taken: 33.34 seconds
  * Quality Gain: 0.180141
  * Metric Mode: Aggregate
  * Expanded Designs: 120972

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.177888
  * Possible Actions: 556
  * Applied Actions: 123
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.1579
    * numOps: 4.2211
    * iFImpl: 0.0000
    * Dep_In: 4.5789
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.1078
    * NumDesc: 1.1263

* Applied Actions:
  - [0.353187][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.348345][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.343503][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.338661][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.333819][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.329608][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.326029][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.322450][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.318871][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.315292][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.312419][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.310103][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.307787][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.305472][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.303156][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.300840][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.298524][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.296208][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.293893][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.291577][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.289261][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.286945][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.284629][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.282314][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.279998][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.277682][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.275366][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.273050][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.270735][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.268419][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.266103][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.263787][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.261472][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.259156][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.256840][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.255145][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.253450][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.251755][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [0.250060][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [0.248365][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [0.246670][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [0.244976][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.243291][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.241607][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.239923][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.238660][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.237607][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.236554][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.235502][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.234449][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [0.233397][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.232344][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [0.231291][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.230239][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.229186][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [0.228133][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.227081][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.226028][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.224976][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.223923][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.222870][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.221818][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [0.220765][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.219712][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.218660][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.217607][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.216554][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.215502][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.214449][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [0.213397][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.212344][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [0.211291][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.210239][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.209186][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.208133][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.207081][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.206028][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.204976][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.203923][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.202870][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.201818][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.200765][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.199712][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.198660][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.197607][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.196554][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.195788][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.195193][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.194597][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.194032][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.193467][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.192902][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.192126][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.191582][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.191039][Make Class Abstract] beaver.comp.Action
  - [0.190539][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.190205][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.189967][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.189729][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.189491][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.189324][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.189158][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.188991][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188824][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188658][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.188936][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.188936][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [0.188936][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.189174][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [0.192121][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [0.189805][Inline Method] beaver.comp.State.<init>(int,beaver.comp.Configuration$Set) into beaver.comp.State.createbeaver.comp.State(beaver.comp.Configuration$Set)
  - [0.188542][Instantiate Method] Move static method 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Configuration$Set'
  - [0.188087][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.187852][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [0.187852][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [0.190910][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [0.193857][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [0.193857][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [0.193857][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [0.188384][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [0.183541][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [0.180204][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.177888][Inline Method] beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ClassCode.createbeaver.spec.ast.Declaration$ClassCode(beaver.Symbol)

====== Run Result ======

* Name: Beaver|Technical Debt|MSD-HC|R30|D5
  * Run Info: Steepest Descent Hill Climbing. Restart Count: 30. Depth: 5.
  * Time Taken: 34.84 seconds
  * Quality Gain: 0.185255
  * Metric Mode: Aggregate
  * Expanded Designs: 127815

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.172774
  * Possible Actions: 552
  * Applied Actions: 137
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.1368
    * numOps: 4.2105
    * iFImpl: 0.0000
    * Dep_In: 4.5895
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.0735
    * NumDesc: 1.1263

* Applied Actions:
  - [0.353187][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.348345][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.343503][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.338661][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.333819][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.329608][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.326029][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.322450][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.318871][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.315292][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.312419][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.310103][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.307787][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.305472][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.303156][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.300840][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.298524][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.296208][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.293893][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.291577][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.289261][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.286945][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.284629][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.282314][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.279998][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.277682][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.275366][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.273050][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.270735][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.268419][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.266103][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.263787][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.261472][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.259156][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.256840][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.255145][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.253450][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.251755][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [0.250060][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [0.248365][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.246670][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [0.244976][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [0.243291][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.241607][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.239923][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.238660][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.237607][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.236554][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.235502][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.234449][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [0.233397][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.232344][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.231291][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.230239][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.229186][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.228133][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.227081][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.226028][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.224976][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.223923][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.222870][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.221818][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [0.220765][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.219712][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.218660][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [0.217607][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.216554][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.215502][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [0.214449][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.213397][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.212344][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.211291][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.210239][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.209186][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.208133][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.207081][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [0.206028][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.204976][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.203923][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.202870][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.201818][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.200765][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.199712][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.198660][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.197607][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.196554][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [0.195788][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.195193][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.194597][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.194032][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.193467][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.192681][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.192126][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.191582][Make Class Abstract] beaver.comp.Action
  - [0.191039][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.190539][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.190205][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.189967][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.189729][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.189491][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.189324][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.189158][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188991][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188824][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188658][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188491][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188324][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188158][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.187991][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.187991][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [0.187991][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.188623][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to static 
  - [0.188623][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [0.190307][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [0.184833][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [0.179991][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [0.178939][Inline Method] beaver.spec.Grammar.<init>() into beaver.spec.Grammar.createbeaver.spec.Grammar()
  - [0.180623][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [0.181254][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [0.181254][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [0.186728][Introduce Factory] for beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.187006][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [0.182164][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)
  - [0.180269][Instantiate Method] Move static method 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [0.176690][Inline Method] beaver.comp.Action$Reduce.createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.State) into beaver.comp.Action$Reduce.resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)
  - [0.175637][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [0.178749][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [0.178749][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.179568][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [0.180200][Freeze Method] Convert 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to static 
  - [0.180405][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.177311][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [0.176477][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.175644][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [0.174496][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.172830][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [0.172774][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'

====== Run Result ======

* Name: Beaver|Technical Debt|MSD-HC|R30|D5
  * Run Info: Steepest Descent Hill Climbing. Restart Count: 30. Depth: 5.
  * Time Taken: 34.52 seconds
  * Quality Gain: 0.185088
  * Metric Mode: Aggregate
  * Expanded Designs: 125985

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.172941
  * Possible Actions: 544
  * Applied Actions: 147
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.1579
    * numOps: 4.1895
    * iFImpl: 0.0000
    * Dep_In: 4.6211
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.0647
    * NumDesc: 1.1263

* Applied Actions:
  - [0.353187][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.348345][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.343503][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.338661][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.333819][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.329608][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.326029][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.322450][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.318871][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.315292][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.312419][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.310103][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.307787][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.305472][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.303156][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.300840][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.298524][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.296208][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.293893][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.291577][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.289261][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.286945][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.284629][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.282314][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.279998][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.277682][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.275366][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.273050][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.270735][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.268419][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.266103][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.263787][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.261472][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.259156][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.256840][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.255145][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.253450][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [0.251755][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [0.250060][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.248365][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.246670][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [0.244976][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [0.243291][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.241607][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.239923][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.238660][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.237607][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [0.236554][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.235502][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.234449][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.233397][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.232344][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.231291][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.230239][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.229186][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.228133][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.227081][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.226028][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.224976][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.223923][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.222870][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [0.221818][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [0.220765][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.219712][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [0.218660][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [0.217607][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.216554][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.215502][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.214449][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.213397][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.212344][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.211291][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.210239][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.209186][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.208133][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.207081][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.206028][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.204976][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [0.203923][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.202870][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.201818][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.200765][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.199712][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.198660][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.197607][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [0.196554][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.195788][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.195193][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.194597][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.194032][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.193467][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.192902][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.192126][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.191582][Make Class Abstract] beaver.comp.Action
  - [0.191039][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.190539][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.190205][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.189967][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.189729][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.189491][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.189324][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.189158][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188991][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188824][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188658][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.188491][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188324][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188158][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.187991][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.191107][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [0.191107][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.192791][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [0.195806][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.196075][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.192784][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.189679][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.188626][Inline Method] beaver.spec.Production$List.<init>() into beaver.spec.Production$List.createbeaver.spec.Production$List()
  - [0.187793][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [0.186959][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [0.186126][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [0.185293][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [0.184459][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [0.184081][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.184081][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [0.184286][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.187865][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [0.190812][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [0.191444][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [0.188497][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)
  - [0.186181][Inline Method] beaver.comp.Action$List.<init>(beaver.comp.State) into beaver.comp.Action$List.createbeaver.comp.Action$List(beaver.comp.State)
  - [0.184918][Instantiate Method] Move static method 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.State'
  - [0.183233][Inline Method] beaver.comp.State.createbeaver.comp.Action$List() into beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [0.183233][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [0.186181][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [0.186181][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.186181][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [0.186812][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [0.181339][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [0.176497][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [0.174181][Inline Method] beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$RightAssoc.createbeaver.spec.ast.Declaration$RightAssoc(beaver.Symbol[])
  - [0.174181][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.174181][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [0.174812][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.174812][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.175047][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [0.173994][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.172941][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()

====== Run Result ======

* Name: Beaver|Technical Debt|MSD-HC|R30|D5
  * Run Info: Steepest Descent Hill Climbing. Restart Count: 30. Depth: 5.
  * Time Taken: 33.59 seconds
  * Quality Gain: 0.172399
  * Metric Mode: Aggregate
  * Expanded Designs: 123684

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.185630
  * Possible Actions: 549
  * Applied Actions: 126
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.2211
    * numOps: 4.2105
    * iFImpl: 0.0000
    * Dep_In: 4.6526
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.1137
    * NumDesc: 1.1263

* Applied Actions:
  - [0.353187][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.348345][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.343503][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.338661][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.333819][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.329608][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.326029][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.322450][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.318871][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.315292][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.312419][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.310103][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.307787][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.305472][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.303156][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.300840][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.298524][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.296208][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.293893][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.291577][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.289261][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.286945][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.284629][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.282314][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.279998][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.277682][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.275366][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.273050][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.270735][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.268419][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.266103][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.263787][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.261472][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.259156][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.256840][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.255145][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [0.253450][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.251755][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [0.250060][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [0.248365][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [0.246670][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.244976][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.243291][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.241607][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.239923][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.238660][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.237607][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.236554][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.235502][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.234449][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.233397][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.232344][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [0.231291][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [0.230239][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.229186][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.228133][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.227081][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.226028][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.224976][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.223923][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.222870][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.221818][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.220765][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.219712][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.218660][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.217607][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.216554][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.215502][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.214449][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [0.213397][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.212344][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.211291][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.210239][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.209186][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.208133][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.207081][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.206028][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [0.204976][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [0.203923][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.202870][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.201818][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.200765][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.199712][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.198660][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.197607][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.196554][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.195788][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.195193][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.194597][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.194032][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.193467][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.192681][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.192126][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.191582][Make Class Abstract] beaver.comp.Action
  - [0.191039][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.190539][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.190205][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.189967][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.189729][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.189491][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.189324][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.189158][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188991][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.188824][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188658][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188491][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.188658][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.192237][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [0.193921][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [0.193921][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.194159][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [0.191212][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)
  - [0.190159][Inline Method] beaver.comp.util.BitSet.<init>(int) into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [0.189106][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.188054][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.187816][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [0.190921][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [0.193868][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [0.194032][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [0.196945][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.197176][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [0.193896][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.190893][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.188578][Inline Method] beaver.comp.Action$List.<init>(beaver.comp.State) into beaver.comp.Action$List.createbeaver.comp.Action$List(beaver.comp.State)
  - [0.187314][Instantiate Method] Move static method 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.State'
  - [0.185630][Inline Method] beaver.comp.State.createbeaver.comp.Action$List() into beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)

====== Run Result ======

* Name: Beaver|Technical Debt|MSD-HC|R30|D5
  * Run Info: Steepest Descent Hill Climbing. Restart Count: 30. Depth: 5.
  * Time Taken: 34.99 seconds
  * Quality Gain: 0.183743
  * Metric Mode: Aggregate
  * Expanded Designs: 127037

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.174287
  * Possible Actions: 549
  * Applied Actions: 147
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.1474
    * numOps: 4.2211
    * iFImpl: 0.0000
    * Dep_In: 4.6316
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.0466
    * NumDesc: 1.1263

* Applied Actions:
  - [0.353187][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.348345][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.343503][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.338661][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.333819][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.329608][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.326029][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.322450][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.318871][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.315292][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.312419][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.310103][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.307787][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.305472][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.303156][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.300840][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.298524][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.296208][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.293893][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.291577][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.289261][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.286945][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.284629][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.282314][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.279998][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.277682][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.275366][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.273050][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.270735][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.268419][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.266103][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.263787][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.261472][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.259156][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.256840][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.255145][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [0.253450][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.251755][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.250060][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [0.248365][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [0.246670][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [0.244976][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.243291][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.241607][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.239923][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.238660][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.237607][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.236554][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.235502][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.234449][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.233397][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.232344][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.231291][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [0.230239][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.229186][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.228133][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [0.227081][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.226028][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.224976][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.223923][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [0.222870][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.221818][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.220765][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.219712][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.218660][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.217607][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.216554][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.215502][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.214449][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.213397][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.212344][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [0.211291][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.210239][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.209186][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.208133][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.207081][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.206028][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.204976][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.203923][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [0.202870][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.201818][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.200765][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.199712][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.198660][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.197607][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.196554][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.195788][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.195193][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.194597][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.194032][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.193467][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.192681][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.192126][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.191582][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.191039][Make Class Abstract] beaver.comp.Action
  - [0.190539][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.190205][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.189967][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.189729][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.189491][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.189324][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.189158][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188991][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188824][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188658][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188491][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188324][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188158][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.187991][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.187991][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [0.188623][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [0.191738][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [0.193423][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [0.194242][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [0.190866][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.189199][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PROTECTED'
  - [0.187532][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PACKAGE'
  - [0.186480][Inline Method] beaver.spec.parser.GrammarParser$Terminals.<init>() into beaver.spec.parser.GrammarParser$Terminals.createbeaver.spec.parser.GrammarParser$Terminals()
  - [0.185647][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.186278][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [0.189225][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [0.189225][Make Class Final] beaver.comp.Configuration
  - [0.189642][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.192800][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [0.189642][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [0.187326][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [0.186322][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [0.185898][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [0.185605][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.184122][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.184022][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.184062][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.184693][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [0.184693][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [0.184693][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [0.184693][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.179220][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [0.174378][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [0.174297][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.174928][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.175560][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [0.175842][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [0.180053][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [0.180392][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [0.176813][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [0.175550][Instantiate Method] Move static method 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)' of 'beaver.spec.Production' to its parameter type 'beaver.spec.NonTerminal'
  - [0.174287][Instantiate Method] Move static method 'createbeaver.spec.Production(beaver.spec.Production$RHS)' of 'beaver.spec.NonTerminal' to its parameter type 'beaver.spec.Production$RHS'

====== Run Result ======

* Name: Beaver|Technical Debt|MSD-HC|R30|D5
  * Run Info: Steepest Descent Hill Climbing. Restart Count: 30. Depth: 5.
  * Time Taken: 35.72 seconds
  * Quality Gain: 0.185697
  * Metric Mode: Aggregate
  * Expanded Designs: 130166

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.172333
  * Possible Actions: 550
  * Applied Actions: 154
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.1474
    * numOps: 4.2000
    * iFImpl: 0.0000
    * Dep_In: 4.6421
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.0418
    * NumDesc: 1.1263

* Applied Actions:
  - [0.353187][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.348345][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.343503][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.338661][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.333819][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.329608][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.326029][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.322450][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.318871][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.315292][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.312419][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.310103][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.307787][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.305472][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.303156][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.300840][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.298524][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.296208][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.293893][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.291577][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.289261][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.286945][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.284629][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.282314][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.279998][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.277682][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.275366][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.273050][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.270735][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.268419][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.266103][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.263787][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.261472][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.259156][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.256840][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.255145][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.253450][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.251755][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [0.250060][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [0.248365][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [0.246670][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.244976][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [0.243291][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.241607][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.239923][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.238660][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.237607][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [0.236554][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.235502][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.234449][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.233397][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.232344][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [0.231291][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.230239][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.229186][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [0.228133][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.227081][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.226028][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.224976][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.223923][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.222870][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.221818][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.220765][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.219712][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.218660][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [0.217607][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.216554][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.215502][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.214449][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.213397][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.212344][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.211291][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [0.210239][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.209186][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.208133][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.207081][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.206028][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.204976][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.203923][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [0.202870][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.201818][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.200765][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.199712][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.198660][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.197607][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.196554][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.195788][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.195193][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.194597][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.194032][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.193467][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.192902][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.192126][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.191582][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.191039][Make Class Abstract] beaver.comp.Action
  - [0.190539][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.190205][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.189967][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.189729][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.189491][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.189324][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.189158][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188991][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188824][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.188658][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188491][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188324][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188158][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.187991][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.187824][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.187824][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [0.188102][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.188102][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PACKAGE'
  - [0.188734][Freeze Method] Convert 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to static 
  - [0.189365][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [0.188313][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.187260][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.186822][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [0.187056][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [0.190123][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [0.190123][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [0.193093][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.196040][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [0.192785][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.189723][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.187408][Inline Method] beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration) into beaver.comp.Configuration$PropagationLink.createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)
  - [0.186144][Instantiate Method] Move static method 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to its parameter type 'beaver.comp.Configuration'
  - [0.185910][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [0.186457][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [0.187088][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [0.190145][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [0.190145][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.190776][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [0.187720][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [0.187173][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [0.186805][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.183851][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.184482][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.184482][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.188693][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [0.188860][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.189137][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [0.185558][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)
  - [0.182299][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.182017][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [0.182299][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [0.182299][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [0.183994][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [0.183994][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [0.184626][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [0.179152][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [0.174310][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [0.172615][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [0.172333][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'

====== Run Result ======

* Name: Beaver|Technical Debt|MSD-HC|R30|D5
  * Run Info: Steepest Descent Hill Climbing. Restart Count: 30. Depth: 5.
  * Time Taken: 32.95 seconds
  * Quality Gain: 0.183241
  * Metric Mode: Aggregate
  * Expanded Designs: 120291

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.174788
  * Possible Actions: 549
  * Applied Actions: 151
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.1579
    * numOps: 4.2211
    * iFImpl: 0.0000
    * Dep_In: 4.6211
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.0516
    * NumDesc: 1.1263

* Applied Actions:
  - [0.353187][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.348345][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.343503][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.338661][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.333819][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.329608][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.326029][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.322450][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.318871][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.315292][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.312419][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.310103][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.307787][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.305472][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.303156][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.300840][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.298524][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.296208][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.293893][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.291577][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.289261][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.286945][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.284629][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.282314][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.279998][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.277682][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.275366][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.273050][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.270735][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.268419][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.266103][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.263787][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.261472][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.259156][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.256840][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.255145][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [0.253450][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.251755][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.250060][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [0.248365][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [0.246670][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.244976][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [0.243291][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.241607][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.239923][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.238660][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.237607][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.236554][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.235502][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.234449][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [0.233397][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.232344][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.231291][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.230239][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.229186][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.228133][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [0.227081][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.226028][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [0.224976][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.223923][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.222870][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.221818][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.220765][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.219712][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.218660][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.217607][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.216554][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.215502][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.214449][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.213397][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.212344][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [0.211291][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [0.210239][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.209186][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.208133][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [0.207081][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [0.206028][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.204976][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.203923][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.202870][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.201818][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.200765][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.199712][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.198660][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.197607][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.196554][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.195788][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.195193][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.194597][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.194032][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.193467][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.192902][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.192126][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.191582][Make Class Abstract] beaver.comp.Action
  - [0.191039][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.190539][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.190205][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.189967][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.189729][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.189491][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.189324][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.189158][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188991][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188824][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188658][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188491][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188324][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188158][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.187991][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.187824][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.187863][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.187863][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [0.190981][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.190981][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [0.191613][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [0.188495][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [0.187661][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [0.186828][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [0.186684][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.187230][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [0.187230][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [0.187862][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [0.187862][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to static 
  - [0.188493][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [0.183020][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [0.178178][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [0.177631][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [0.179270][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [0.179902][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to static 
  - [0.179902][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [0.182849][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [0.183669][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [0.181353][Inline Method] beaver.comp.Action$List.<init>(beaver.comp.State) into beaver.comp.Action$List.createbeaver.comp.Action$List(beaver.comp.State)
  - [0.179714][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [0.178451][Instantiate Method] Move static method 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.State'
  - [0.176767][Inline Method] beaver.comp.State.createbeaver.comp.Action$List() into beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [0.175947][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [0.175986][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [0.176130][Move Down Field] 'token_line' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [0.176130][Make Class Final] beaver.comp.Action$List
  - [0.179275][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [0.175856][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.175706][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [0.175667][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [0.177351][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [0.177351][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [0.177351][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.179035][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [0.179035][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [0.175841][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [0.174788][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()

====== Run Result ======

* Name: Beaver|Technical Debt|MSD-HC|R30|D5
  * Run Info: Steepest Descent Hill Climbing. Restart Count: 30. Depth: 5.
  * Time Taken: 33.01 seconds
  * Quality Gain: 0.180305
  * Metric Mode: Aggregate
  * Expanded Designs: 121259

* Initial Design:
  * Score: 0.358029
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.7684
    * numOps: 5.0526
    * iFImpl: 0.0000
    * Dep_In: 5.2105
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.0830
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.3046
    * NumDesc: 1.1263

* Final Design:
  * Score: 0.177724
  * Possible Actions: 553
  * Applied Actions: 117
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * Dep_Out: 5.1684
    * numOps: 4.2211
    * iFImpl: 0.0000
    * Dep_In: 4.5684
    * nesting: 0.6526
    * numCls: 11.8750
    * numFields: 3.1684
    * abstractness: 0.1108
    * numInterf: 0.0000
    * NOC: 0.4842
    * avrgFieldVisibility: 1.1062
    * NumDesc: 1.1263

* Applied Actions:
  - [0.353187][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.348345][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.343503][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [0.338661][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [0.333819][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.329608][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.326029][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.322450][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.318871][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [0.315292][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.312419][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [0.310103][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.307787][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.305472][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.303156][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.300840][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.298524][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [0.296208][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.293893][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.291577][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [0.289261][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.286945][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [0.284629][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [0.282314][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.279998][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.277682][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [0.275366][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.273050][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.270735][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [0.268419][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.266103][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.263787][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.261472][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.259156][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.256840][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [0.255145][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [0.253450][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [0.251755][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [0.250060][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [0.248365][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [0.246670][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [0.244976][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [0.243291][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.241607][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.239923][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [0.238660][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [0.237607][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [0.236554][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [0.235502][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.234449][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.233397][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [0.232344][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [0.231291][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.230239][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [0.229186][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.228133][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [0.227081][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.226028][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [0.224976][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [0.223923][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [0.222870][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [0.221818][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.220765][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [0.219712][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [0.218660][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [0.217607][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [0.216554][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.215502][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.214449][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [0.213397][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [0.212344][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [0.211291][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.210239][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [0.209186][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [0.208133][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.207081][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [0.206028][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [0.204976][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [0.203923][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [0.202870][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.201818][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [0.200765][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [0.199712][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [0.198660][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [0.197607][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [0.196554][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [0.195788][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [0.195193][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [0.194597][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [0.194032][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.193467][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [0.192681][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [0.192126][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [0.191582][Make Class Abstract] beaver.comp.Action
  - [0.191039][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [0.190539][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [0.190205][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [0.189967][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [0.189729][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [0.189491][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [0.189324][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.189158][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [0.188991][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188824][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188658][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [0.188491][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [0.189324][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [0.190158][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [0.190158][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [0.193238][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [0.193511][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [0.188038][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [0.183195][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [0.179845][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [0.179012][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [0.178179][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [0.177724][Move Up Field] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'

====== Task Summary ======

* General Info:
  * Average time across all runs: 33.93 seconds
  * Average quality gain across all runs: 0.182760 (Average Score: 0.175269)
  * Highest quality gain across all runs: 0.189231 (Score: 0.168798)
  * Lowest quality gain across all runs: 0.172399 (Score: 0.185630)
  * Time taken to complete task: 339.28 seconds

* Metric Summary:
  * Dep_Out
    * Average Quality Gain: 0.6105 (Average Score: 5.1579)
    * Highest Quality Gain: 0.6526 (Best Score: 5.1158)
    * Lowest Quality Gain: 0.5474 (Worst Score: 5.2211)
  * numOps
    * Average Quality Gain: 0.8421 (Average Score: 4.2105)
    * Highest Quality Gain: 0.8632 (Best Score: 4.1895)
    * Lowest Quality Gain: 0.8316 (Worst Score: 4.2211)
  * iFImpl
    * Average Quality Gain: 0.0000 (Average Score: 0.0000)
    * Highest Quality Gain: 0.0000 (Best Score: 0.0000)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.0000)
  * Dep_In
    * Average Quality Gain: 0.6000 (Average Score: 4.6105)
    * Highest Quality Gain: 0.6421 (Best Score: 4.5684)
    * Lowest Quality Gain: 0.5579 (Worst Score: 4.6526)
  * nesting
    * Average Quality Gain: 0.0000 (Average Score: 0.6526)
    * Highest Quality Gain: 0.0000 (Best Score: 0.6526)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.6526)
  * numCls
    * Average Quality Gain: 0.0000 (Average Score: 11.8750)
    * Highest Quality Gain: 0.0000 (Best Score: 11.8750)
    * Lowest Quality Gain: 0.0000 (Worst Score: 11.8750)
  * numFields
    * Average Quality Gain: 0.0000 (Average Score: 3.1684)
    * Highest Quality Gain: 0.0000 (Best Score: 3.1684)
    * Lowest Quality Gain: 0.0000 (Worst Score: 3.1684)
  * abstractness
    * Average Quality Gain: 0.0278 (Average Score: 0.1108)
    * Highest Quality Gain: 0.0278 (Best Score: 0.1108)
    * Lowest Quality Gain: 0.0278 (Worst Score: 0.1108)
  * numInterf
    * Average Quality Gain: 0.0000 (Average Score: 0.0000)
    * Highest Quality Gain: 0.0000 (Best Score: 0.0000)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.0000)
  * NOC
    * Average Quality Gain: 0.0000 (Average Score: 0.4842)
    * Highest Quality Gain: 0.0000 (Best Score: 0.4842)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.4842)
  * avrgFieldVisibility
    * Average Quality Gain: 0.2314 (Average Score: 1.0732)
    * Highest Quality Gain: 0.2629 (Best Score: 1.0418)
    * Lowest Quality Gain: 0.1910 (Worst Score: 1.1137)
  * NumDesc
    * Average Quality Gain: 0.0000 (Average Score: 1.1263)
    * Highest Quality Gain: 0.0000 (Best Score: 1.1263)
    * Lowest Quality Gain: 0.0000 (Worst Score: 1.1263)
