====== Run Result ======

* Name: Beaver|ABC|T50|P20|I7500
  * Run Info: Artificial Bee Colony. Population Size: 20, Max Trials: 50, Iterations: 7500.
  * Time taken: 515.21 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 300602

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.659697
  * Possible Actions: 657
  * Applied Actions: 605
  * Num Types: 94
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9077
    * NOC: 0.4787
    * numInterf: 0.0000
    * abstractness: 0.1063
    * packagenesting: 1.5000
    * getters: 0.3404
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7447
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0319
    * staticness: 0.1673
    * numCls: 11.7500
    * numFields: 3.2021
    * NumDesc: 1.1170
    * numOpsCls: 55.7500
    * iC_Par: 2.6489
    * eC_Par: 3.2447
    * Dep_In: 5.7128
    * avrgMethodVisibility: 1.6380
    * Dep_Out: 5.6809
    * setters: 0.1383
    * iFImpl: 0.0000
    * eC_Attr: 1.0000
    * nesting: 0.6277
    * numConstants: 0.8936
    * NumAnc: 1.1170

* Applied Actions:
  - [29.020024][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [29.033216][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [29.015896][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [28.983488][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [28.984552][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [29.001042][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [28.997981][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.947003][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [28.960195][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [28.944891][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.937927][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.931805][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.925683][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.929275][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.894044][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [28.861636][Freeze Method] Convert 'isRemovable()' of 'beaver.comp.Action$Type' to static 
  - [28.851688][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [28.852483][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.824717][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [28.835710][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [28.803302][Freeze Method] Convert 'size()' of 'beaver.comp.util.Log$Record$List' to static 
  - [28.767514][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [28.766239][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [28.745374][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.698949][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [28.683682][Freeze Method] Convert 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to static 
  - [28.677560][Increase Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.645152][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [28.612743][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [28.612341][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [28.590378][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [28.575877][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [28.571436][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [28.558690][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [28.482540][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [28.481010][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.477609][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.472507][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [28.470977][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.470492][Freeze Method] Convert 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [28.470193][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[],beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.469971][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.468441][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.455465][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [28.452948][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [28.448576][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.439510][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [28.437899][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.407073][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [28.405462][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.377316][Make Class Abstract] beaver.comp.Action
  - [28.366502][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [28.356299][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [28.343323][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [28.328018][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [28.323646][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.319273][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.313151][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [28.306663][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.296460][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [28.264019][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.255973][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [28.251601][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.247228][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.245527][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.242466][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.130145][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [28.125773][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [28.124072][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.123088][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [28.115436][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [28.085596][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.076173][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [28.074472][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.073652][Introduce Factory] for beaver.spec.ast.TreeWalker.<init>()
  - [28.070523][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.063157][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [28.058090][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.042786][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [28.042467][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.039066][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.037769][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [28.034110][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.032186][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [28.025590][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.022529][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.015933][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.012107][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.001904][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [27.998077][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.994676][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.993044][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.987942][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.987879][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.985382][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [27.978786][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.972190][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.956885][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.890923][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.887862][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.879776][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [27.877863][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.874802][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.873193][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [27.866596][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.800634][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.792982][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.789921][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.774616][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.759312][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.755911][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.755578][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [27.753505][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [27.752482][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [27.719501][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.704197][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.702284][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.696655][Move Down Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [27.696093][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.694180][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.690354][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.688441][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.686528][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.683467][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.668163][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.660976][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [27.659548][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [27.652952][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.642749][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.640708][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.637307][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.629655][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.628831][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [27.623753][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.610560][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [27.608520][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.598317][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PACKAGE'
  - [27.570171][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.559968][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [27.552315][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.550691][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [27.548778][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.538575][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.536535][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.529341][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [27.514037][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.503834][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.499688][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.484383][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [27.469078][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.466892][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.464851][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.460479][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.458438][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.443133][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.377171][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.373770][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.363567][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [27.356669][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [27.356619][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.355258][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [27.339953][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.322021][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.318224][Move Down Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [27.314332][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.309231][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.305087][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.274261][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.272220][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.270307][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.263711][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.261798][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.246493][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.236290][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.223098][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.218143][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.216446][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.150484][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.146111][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.143165][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.140104][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.135731][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.125528][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [27.121155][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.119242][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.118711][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.114338][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.101504][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.097292][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.094509][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.087367][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [27.079715][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [27.076932][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.074150][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.071367][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.056062][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [27.048410][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [27.045627][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.036204][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.019714][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [27.004409][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [27.004158][Remove Method] 'visit(beaver.spec.ast.Declaration$Imports)' of type 'beaver.spec.GrammarBuilder$3'
  - [27.002117][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.980130][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.972478][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PACKAGE'
  - [26.970291][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.962639][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.961550][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.958531][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [26.948328][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.938125][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.935668][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [26.869706][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [26.865333][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.850028][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.846967][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.839315][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.829112][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.827071][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.822699][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.816102][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.805899][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.803859][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.799486][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.791987][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [26.785597][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [26.775394][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [26.767742][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.752437][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [26.748064][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.743762][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.677800][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.673974][Increase Method Security] 'createbeaver.spec.ast.TreeWalker()' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.671933][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.656628][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [26.669821][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.690920][Inline Method] beaver.spec.ast.Declaration$Imports.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Imports.accept(beaver.spec.ast.TreeWalker)
  - [26.693160][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.695346][Decrease Method Security] 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.714005][Freeze Method] Convert 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to static 
  - [26.737218][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [26.767483][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [26.769669][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.779872][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [26.784295][Introduce Factory] for beaver.Parser$Simulator.<init>(beaver.Parser)
  - [26.786482][Decrease Method Security] 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.788668][Decrease Method Security] 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.795182][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [26.802835][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.833100][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [26.836739][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [26.864594][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to static 
  - [26.877787][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.883065][Move Down Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [26.889661][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.883065][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.817103][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.804056][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.801022][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.785718][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [26.784833][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of type 'beaver.spec.GrammarBuilder$2'
  - [26.774630][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.765045][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.756715][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [26.743523][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.739696][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.721454][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.713801][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PRIVATE'
  - [26.709975][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.705990][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.703658][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [26.699378][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.684073][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.674669][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.670843][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.668802][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.656377][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.647258][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [26.642885][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.620898][Increase Field Security] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.618857][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.616671][Increase Method Security] 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.615047][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.613423][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [26.598118][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [26.593745][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.592861][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.588488][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.588439][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.559865][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [26.537878][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.526250][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.523696][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [26.514273][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.504070][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.499697][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.495324][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.482184][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.468953][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.446966][Increase Field Security] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.436763][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [26.426560][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PACKAGE'
  - [26.404572][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.400200][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.380351][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.370148][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.348161][Increase Field Security] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.326173][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.326173][Make Class Non-Final] beaver.ParsingTables
  - [26.359154][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [26.363306][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.364840][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.368942][Remove Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [26.368942][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.384285][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [26.389680][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [26.396276][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.404981][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.409353][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition$Element' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.442531][Remove Method] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.478716][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [26.488140][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [26.504630][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.499499][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.501200][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.509308][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.542289][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [26.549941][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [26.545568][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [26.512587][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [26.496097][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [26.485893][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [26.425203][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.419267][Inline Method] beaver.spec.ast.Rule$Definition$Element.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Rule$Definition$Element.accept(beaver.spec.ast.TreeWalker)
  - [26.409844][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [26.402191][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.273383][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.336229][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.350631][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [26.361553][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [26.368198][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.375850][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.386053][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [26.511720][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.555339][Introduce Factory] for beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [26.565542][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Terminals,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.580847][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [26.582548][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.592751][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [26.595072][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [26.597112][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.597112][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [26.599467][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.618126][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [26.618126][Make Class Final] beaver.comp.Action$Reduce
  - [26.618126][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.634346][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.508950][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.379304][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.375830][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.359060][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.357020][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.352647][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.347628][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [26.341069][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.333417][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.332511][Move Method] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.330566][Move Method] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.327784][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.325343][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [26.292790][Remove Method] 'visit(beaver.spec.ast.Declaration$Terminals,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [26.290749][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.280546][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [26.275445][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.273404][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.269666][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.266382][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.281650][Remove Method] 'scannerError(beaver.Scanner$Exception)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.281650][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.290035][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.291595][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.302776][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.310428][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [26.323844][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.329966][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [26.262885][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PROTECTED'
  - [26.296426][Decrease Field Security] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.299208][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [26.332748][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.332748][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.339456][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.350378][Freeze Method] Convert 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.350378][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.353592][Move Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [26.368935][Freeze Method] Convert 'initStack()' of 'beaver.Parser$Simulator' to static 
  - [26.392237][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.386115][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.352575][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [26.337270][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.331964][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.329643][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.318463][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.316422][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.314862][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.311839][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.308414][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.293109][Increase Method Security] 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [26.259569][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.251917][Increase Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.249876][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.256584][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.266787][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [26.272909][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [26.303174][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [26.316590][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.321322][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.324383][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.329777][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [26.332560][Decrease Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.339268][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.329065][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.333797][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.343588][Instantiate Method] Move static method 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.208979][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.211165][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [26.212752][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.224125][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.225712][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.260310][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)
  - [26.260310][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.250107][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.239076][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.232954][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.198836][Increase Field Security] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.185189][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.174453][Inline Method] beaver.Parser$Simulator.initStack(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.166829][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.157081][Increase Field Security] 'ebnf_sym' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.155040][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.152999][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.142796][Increase Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.133048][Increase Field Security] 'ebnf_sym' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.123070][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.121029][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.114908][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.112867][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.107765][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.106179][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.104138][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.092765][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.086643][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.098016][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.098016][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.100784][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [26.099197][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.103570][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.137688][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.147436][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.157184][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [26.180486][Freeze Method] Convert 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [26.188138][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [26.195791][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [26.200522][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.214169][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.222699][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.225883][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [26.236961][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [26.238548][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.280420][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [26.294067][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.296253][Decrease Method Security] 'increaseStackCapacity(beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [26.286505][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [26.281404][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.271656][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [26.270069][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.256421][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.248769][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.237141][Instantiate Method] Move static method 'canInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [26.168904][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PACKAGE'
  - [26.153599][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.145947][Increase Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [26.005425][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [25.970708][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [25.903754][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [25.898307][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [25.892185][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [25.886063][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [25.873746][Inline Method] beaver.spec.ast.Declaration$Goal.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Goal.accept(beaver.spec.ast.TreeWalker)
  - [25.868175][Move Up Field] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [25.865304][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [25.862244][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [25.858202][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [25.847999][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [25.844671][Remove Method] 'visit(beaver.spec.ast.Declaration$PackageName,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [25.842484][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.827180][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [25.825496][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int,beaver.comp.util.BitSet) into beaver.comp.util.BitSet.add(int)
  - [25.811849][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.804990][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [25.794787][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [25.789685][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.787499][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.798872][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [25.798872][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [25.779330][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [25.814047][Decrease Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [25.832706][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [25.838101][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [25.841740][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [25.848684][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [25.890555][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to static 
  - [25.890555][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [25.905672][Remove Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of type 'beaver.spec.GrammarBuilder$3'
  - [25.915875][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PACKAGE'
  - [25.902545][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [25.916432][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [25.928005][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [25.928471][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [25.940945][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [25.943727][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [25.943727][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [25.948829][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.933524][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [25.931909][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.931744][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [25.886226][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [25.871330][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [25.857444][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [25.852342][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [25.847402][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [25.842301][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.834648][Increase Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [25.826996][Increase Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [25.821895][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.818469][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [25.816114][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [25.813760][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.803557][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [25.791985][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [25.789630][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.787275][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.777072][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [25.836180][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [25.840888][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [25.843949][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [25.844057][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [25.851590][Move Down Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [25.860269][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [25.860923][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [25.868576][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [25.885408][Move Down Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition'
  - [25.909546][Remove Method] '<init>(beaver.spec.GrammarSymbol,java.lang.String)' of type 'beaver.spec.Production$RHS$Item'
  - [25.943664][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [25.957311][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [25.949778][Move Up Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [25.950367][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [25.945265][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.010349][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [26.010349][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [26.028876][Remove Method] 'getOpt(java.lang.String)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.018673][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [26.022499][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to 'PROTECTED'
  - [26.006504][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [25.991937][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [25.961362][Remove Method] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [25.947169][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [25.935706][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [25.933374][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [25.923171][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [25.894896][Remove Method] 'createbeaver.spec.parser.GrammarParser$Terminals()' of type 'beaver.spec.parser.GrammarParser$Terminals'
  - [25.892541][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.868107][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [25.853972][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [25.848870][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.796345][Remove Method] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [25.761008][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [25.746873][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [25.752995][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [25.765507][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [25.779642][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [25.807733][Inline Method] beaver.spec.ast.Declaration$NonAssoc.visit(beaver.spec.GrammarBuilder) into beaver.spec.ast.Declaration$NonAssoc.accept(beaver.spec.ast.TreeWalker)
  - [25.815385][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [25.818569][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [25.820482][Decrease Method Security] 'getTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [25.835787][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [25.844396][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [25.848970][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [25.850614][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.864749][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [25.872857][Freeze Method] Convert 'removeResolvedActions()' of 'beaver.comp.Action$List' to static 
  - [25.876683][Decrease Method Security] 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to 'PROTECTED'
  - [25.874787][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [25.874787][Make Class Final] beaver.comp.State$Factory
  - [25.886566][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [25.888210][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.890993][Decrease Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.017337][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [26.015175][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [26.005206][Instantiate Method] Move static method 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.GrammarTreeRoot' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [25.997472][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [25.987159][Increase Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [25.680810][Remove Class] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [25.674503][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [25.671690][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [25.659697][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
====== Run Result ======

* Name: Beaver|ABC|T50|P20|I7500
  * Run Info: Artificial Bee Colony. Population Size: 20, Max Trials: 50, Iterations: 7500.
  * Time taken: 531.87 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 301012

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.235248
  * Possible Actions: 658
  * Applied Actions: 529
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9751
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3684
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7684
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 2.9684
    * staticness: 0.1606
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 56.6250
    * iC_Par: 2.6526
    * eC_Par: 3.2316
    * Dep_In: 5.7263
    * avrgMethodVisibility: 1.6934
    * Dep_Out: 5.6211
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [29.006831][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [29.013427][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [28.991465][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [28.987917][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [28.985706][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [28.984248][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.944876][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [28.933883][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [28.938380][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [28.939914][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.907506][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [28.908963][Decrease Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.912024][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [28.918621][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.907627][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [28.917830][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [28.904637][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [28.891233][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [28.877923][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [28.869385][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [28.795194][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [28.729231][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [28.716485][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [28.714955][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.708833][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.701869][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.684654][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [28.681594][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.681466][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.654161][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [28.652631][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.576481][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [28.574950][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.561112][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [28.554148][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.526382][Freeze Method] Convert 'get(int)' of 'beaver.comp.util.IntArray' to static 
  - [28.449309][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [28.438316][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [28.341273][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.run.Options'
  - [28.321245][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [28.319858][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.313538][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [28.311569][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.309958][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.284830][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.278806][Instantiate Method] Move static method 'compile(beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.run.Options'
  - [28.275405][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.272858][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [28.268485][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.260385][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [28.256012][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [28.240707][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [28.218720][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.217109][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.210513][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.210199][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [28.210018][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.208687][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [28.204315][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.204100][Move Down Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [28.199727][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.198026][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.191430][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.184834][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.068324][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [28.053019][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [28.026611][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.024911][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.020538][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.005233][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [28.004271][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [28.002647][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [28.000947][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.993294][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.988922][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.981416][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [27.915453][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [27.882472][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.872269][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.866147][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.864045][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [27.848740][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.846827][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.840231][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.824926][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.817274][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.801970][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.800358][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.798445][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.792324][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.788923][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.784550][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.771120][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.769207][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.767294][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.736467][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.734843][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [27.731442][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.729529][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.726128][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.710824][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.707422][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.701301][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.693859][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [27.665713][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.661340][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.654293][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [27.652107][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.650194][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.646535][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.643134][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.640948][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.639698][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [27.638589][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [27.628386][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.625303][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.620930][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.501997][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.491794][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.484896][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [27.482983][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.472780][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PACKAGE'
  - [27.466184][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.461811][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.458719][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.452371][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [27.447999][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.446086][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.444172][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.428868][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.422272][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.412069][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PACKAGE'
  - [27.390081][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [27.377014][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.361710][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.361142][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [27.359229][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.353107][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.349512][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.318686][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.316773][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.311671][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [27.324231][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [27.302244][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [27.304044][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.306455][Freeze Method] Convert 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.313051][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.323390][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [27.334311][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [27.347728][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [27.349914][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PACKAGE'
  - [27.349914][Make Class Final] beaver.comp.Action$Reduce
  - [27.355113][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [27.396985][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [27.394202][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.394693][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.400815][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.398032][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.399733][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.401646][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.403176][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.425536][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [27.415333][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [27.408625][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.404975][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.399962][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [27.395589][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.359006][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [27.357395][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.349835][Move Method] 'compile(beaver.comp.util.Log,beaver.comp.run.Options)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [27.339632][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PACKAGE'
  - [27.329429][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [27.314124][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.311063][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.296096][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.294183][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.288061][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.283688][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.276036][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [27.271663][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [27.269703][Move Up Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [27.259500][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [27.244195][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.218301][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [27.202997][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.135916][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [27.131543][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [27.129630][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.126229][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.110925][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.109012][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.098809][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.084162][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.State'
  - [27.077454][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.074584][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [27.071523][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.067150][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.064089][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.053886][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.049922][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.039718][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [27.033010][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.028770][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.013466][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [27.008364][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.007858][Remove Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of type 'beaver.spec.GrammarBuilder$3'
  - [27.002756][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.997655][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.995854][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.993814][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.983611][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.961251][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.945946][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [26.878866][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [26.876083][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.870982][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.860778][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.850575][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [26.920213][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [26.923274][Decrease Method Security] 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.047207][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [27.057410][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [27.071214][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.067006][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [27.071157][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [27.073939][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.084143][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [27.091799][Inline Method] beaver.spec.ast.Declaration$PackageName.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$PackageName.accept(beaver.spec.ast.TreeWalker)
  - [27.093599][Decrease Method Security] 'getTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.134671][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [27.139773][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.145167][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [27.145167][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [27.156089][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [27.165454][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.173699][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.181945][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.175457][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [27.170778][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.160575][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PRIVATE'
  - [27.153978][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.150917][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.148877][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.145807][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.143024][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.142980][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [27.140939][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.140896][Introduce Factory] for beaver.Symbol.<init>()
  - [27.125591][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PROTECTED'
  - [27.103604][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [27.088299][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [27.022337][Move Up Field] 'code' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [27.015741][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.993753][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.965607][Make Class Abstract] beaver.comp.Action
  - [26.950303][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PACKAGE'
  - [26.934998][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.927346][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.920641][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.917295][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [26.914200][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.913869][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.909496][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.876515][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.843534][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.841493][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.837380][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.835467][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.834669][Remove Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.829455][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.827269][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.819420][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.804116][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.796463][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.786260][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PACKAGE'
  - [26.781762][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.708567][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.706943][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.715328][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [26.717129][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.720190][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.720190][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.735290][Remove Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.730188][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.732101][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.727729][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.727729][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [26.731368][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [26.764908][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.749603][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [26.770686][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [26.760109][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [26.757647][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [26.761474][Decrease Method Security] 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.756071][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.766274][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [26.789576][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.798950][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [26.798826][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.788623][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PRIVATE'
  - [26.780971][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.747431][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.738483][Instantiate Method] Move static method 'compile(beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [26.732362][Increase Method Security] 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [26.728535][Increase Method Security] 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.724309][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.715924][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.709256][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.693951][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PROTECTED'
  - [26.688424][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.673120][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PRIVATE'
  - [26.670933][Increase Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.660730][Increase Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.655624][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.651798][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.643413][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [26.637291][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.634150][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.623947][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PRIVATE'
  - [26.616295][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.485842][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.475639][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [26.460335][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.457980][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.441272][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.431868][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.416563][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.412737][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.436039][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [26.477544][Inline Method] beaver.spec.ast.Declaration$ConstructorCode.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$ConstructorCode.accept(beaver.spec.ast.TreeWalker)
  - [26.480945][Decrease Method Security] 'removeResolvedActions()' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.492318][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [26.531559][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.596643][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to static 
  - [26.600044][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.619122][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.641868][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.664613][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.686260][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.689672][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.704977][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [26.704977][Make Class Final] beaver.comp.ParsingTables
  - [26.706601][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.709384][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.743502][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [26.746926][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [26.757129][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [26.791248][Decrease Field Security] 'state' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [26.783595][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.716887][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of type 'beaver.comp.Action$List$1'
  - [26.716451][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.586179][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.578527][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.574701][Increase Method Security] 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.556226][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.533208][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [26.524789][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [26.509484][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PACKAGE'
  - [26.474767][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [26.461630][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.451427][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.428283][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.425928][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.423145][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.400001][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.389798][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.383676][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.368371][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.433455][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to static 
  - [26.436639][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.478511][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [26.493816][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [26.497928][Move Method] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.511209][Instantiate Method] Move static method 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [26.522781][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.526608][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.596245][Freeze Method] Convert 'nextToken()' of 'beaver.Scanner' to static 
  - [26.598431][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [26.600132][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [26.606254][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.618915][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.620568][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.620568][Make Class Final] beaver.comp.State
  - [26.483340][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.485063][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.497919][Freeze Method] Convert 'hasCollisions()' of 'beaver.comp.ParsingTables' to static 
  - [26.500274][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.490071][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [26.490028][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [26.487673][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.482572][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.480871][Increase Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.479171][Increase Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [26.466330][Inline Method] beaver.comp.ParsingTables.hasCollisions(beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.462929][Increase Method Security] 'removeResolvedActions()' of 'beaver.comp.Action$List' to 'PRIVATE'
  - [26.454035][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.453604][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.453268][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.441490][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.435368][Increase Method Security] 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [26.430995][Increase Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.428640][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.413336][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PRIVATE'
  - [26.390162][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.374857][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [26.371456][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.367994][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.307304][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.317507][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [26.321658][Freeze Method] Convert 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [26.339985][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.347637][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.349678][Decrease Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.350108][Move Down Field] 'token_line' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.362964][Freeze Method] Convert 'findFirstTerminal(int)' of 'beaver.ParsingTables' to static 
  - [26.374743][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.376784][Decrease Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [26.381516][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.391612][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [26.426949][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.433119][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.435473][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.470810][Decrease Field Security] 'zzReader' of 'beaver.Scanner' to 'PROTECTED'
  - [26.493546][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [26.508889][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [26.510241][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [26.516363][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.530498][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.528874][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.525022][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.509718][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.509618][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [26.508734][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of type 'beaver.spec.GrammarBuilder$2'
  - [26.508138][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.507806][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.505451][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.504362][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.492583][Increase Field Security] 'code' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.480804][Increase Field Security] 'sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.474682][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [26.472642][Increase Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.460432][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.459646][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.456864][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.451403][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.416066][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.409944][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [26.409382][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.403260][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.402430][Instantiate Method] Move static method 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [26.400076][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.364739][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.352960][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.346838][Increase Method Security] 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [26.343012][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.325343][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.319745][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.300470][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.285166][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.281339][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.296644][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [26.286548][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [26.301891][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.319559][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.330316][Inline Method] beaver.ParsingTables.<init>(java.lang.String) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [26.343984][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [26.347385][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.357481][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [26.359248][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.357481][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.365134][Decrease Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.380438][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PACKAGE'
  - [26.380770][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [26.380770][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.386930][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.386930][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [26.410143][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [26.410143][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [26.426842][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [26.429903][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.419700][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.418735][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [26.397332][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.383197][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.379098][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.366042][Move Up Field] 'name' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.365710][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.355507][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [26.351681][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.350057][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$2'
  - [26.349777][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.325790][Increase Field Security] 'sym_name' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.307801][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.292496][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.286751][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.284710][Increase Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.277058][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.279137][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [26.286789][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.303489][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [26.321478][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.324029][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.326070][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.338063][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.338063][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [26.340614][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.340608][Introduce Factory] for beaver.Symbol.<init>(short)
  - [26.330329][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [26.332369][Decrease Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.337359][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [26.344459][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [26.347860][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [26.352233][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.353988][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.361184][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.361184][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [26.366579][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [26.354585][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.333928][Inline Method] beaver.spec.ast.Rule$Definition$Element.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Rule$Definition$Element.accept(beaver.spec.ast.TreeWalker)
  - [26.329555][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.327800][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.273611][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of type 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [26.269785][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.265959][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.262039][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [26.254387][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.254379][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [26.250553][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.235248][Increase Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PACKAGE'
====== Run Result ======

* Name: Beaver|ABC|T50|P20|I7500
  * Run Info: Artificial Bee Colony. Population Size: 20, Max Trials: 50, Iterations: 7500.
  * Time taken: 535.40 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 300943

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.364577
  * Possible Actions: 709
  * Applied Actions: 435
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.1047
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3474
    * NumAssEl_ssc: 0.0000
    * numOps: 4.8211
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.1393
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 57.2500
    * iC_Par: 2.6526
    * eC_Par: 3.1368
    * Dep_In: 5.5684
    * avrgMethodVisibility: 1.6394
    * Dep_Out: 5.6526
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [29.008289][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [29.014885][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [29.011484][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.972928][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [28.954447][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to static 
  - [28.888485][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [28.870285][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [28.865912][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.867370][Decrease Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.873966][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [28.867002][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.863455][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [28.860394][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.845892][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [28.832827][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [28.834361][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.836548][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [28.842670][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [28.815624][Instantiate Method] Move static method 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [28.825692][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.State'
  - [28.808477][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.733249][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [28.728877][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.672908][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [28.639815][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [28.625313][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [28.592260][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [28.566675][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [28.559712][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.527303][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [28.521732][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.510547][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.474393][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [28.455912][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [28.438697][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.424196][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [28.382353][Freeze Method] Convert 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to static 
  - [28.375757][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.369161][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.362565][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.359194][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.343890][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [28.339517][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.339071][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [28.333970][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.332439][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.328066][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.312762][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.290774][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.260934][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.257477][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [28.255866][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.254336][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.241143][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [28.236770][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.233710][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.232179][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.232133][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [28.227761][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [28.221164][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.210961][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [28.207560][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.195631][Move Up Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [28.191258][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.184662][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.183131][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.152305][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [28.086343][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.071038][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [28.068949][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [28.063848][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.057251][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.055721][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.054819][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.027876][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.025054][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.020682][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.019151][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.009882][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.994173][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.993810][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [27.993314][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.878831][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.870488][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [27.868457][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [27.853152][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.845016][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [27.834813][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.831412][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.828141][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [27.823768][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.818820][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [27.817119][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.806916][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PACKAGE'
  - [27.791612][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.783619][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [27.773416][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.766928][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.765128][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.764766][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.736621][Make Class Abstract] beaver.comp.Action
  - [27.721316][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.721272][Introduce Factory] for beaver.Symbol.<init>()
  - [27.717851][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.712749][Increase Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.709102][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.707401][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.705601][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.696332][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.681027][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.678018][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.677974][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [27.671374][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.669573][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.667773][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.664181][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [27.725445][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.752572][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [27.759133][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [27.769947][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [27.778339][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [27.806194][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action)' of 'beaver.comp.State' to static 
  - [27.813247][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [27.817620][Decrease Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.840921][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [27.873362][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [27.877001][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [27.893094][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [27.903633][Inline Method] beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar) into beaver.comp.Configuration$Set$Factory.createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)
  - [27.909185][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [27.924447][Inline Method] beaver.comp.util.Log$Record$List.<init>() into beaver.comp.util.Log$Record$List.createbeaver.comp.util.Log$Record$List()
  - [27.935368][Freeze Method] Convert 'readToken()' of 'beaver.Parser$TokenStream' to static 
  - [27.943020][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [27.944603][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.953872][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [27.966728][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [27.962355][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.957982][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.952238][Inline Method] beaver.Parser$TokenStream.readToken(beaver.Parser$TokenStream) into beaver.Parser$TokenStream.nextToken()
  - [27.890937][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [27.858496][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.856034][Move Down Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.849546][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.847746][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.782865][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.717984][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.716183][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.713528][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.707406][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.691995][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [27.676690][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.661386][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.659585][Increase Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [27.656802][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.641498][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.610672][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.600468][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.585164][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.580062][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.578262][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.577694][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [27.575624][Move Down Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.574079][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.570903][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [27.555599][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.553558][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.551517][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.547728][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.543712][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.542270][Move Down Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.526966][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.518966][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [27.515140][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.511313][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.510886][Move Down Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.478445][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [27.469877][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.466914][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.451610][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.449697][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.390972][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [27.383319][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.380537][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.376711][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.372338][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.368992][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.366209][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.301328][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.295206][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.292145][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.286024][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.283241][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.282146][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.266841][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [27.264058][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.256210][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [27.256087][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.191206][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.184099][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [27.179726][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.169523][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [27.154218][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [27.139962][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [27.136136][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.125933][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [27.061052][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.053399][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.031772][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.025052][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [27.023234][Remove Method] 'visit(beaver.spec.ast.Rule)' of type 'beaver.spec.GrammarBuilder$5'
  - [27.032503][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [27.043316][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [27.048418][Decrease Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.050331][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.066551][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [27.068464][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [27.064182][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.062269][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.041059][Instantiate Method] Move static method 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.064361][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [27.056927][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [27.063979][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [27.070467][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.102908][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [27.111018][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.128346][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [27.145505][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [27.206769][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.228396][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.260836][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [27.250633][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PACKAGE'
  - [27.244378][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [27.234175][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PACKAGE'
  - [27.201734][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [27.196633][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.194720][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.184517][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.181836][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.178273][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.176360][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.156710][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.150222][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.088958][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [27.087045][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.080556][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.048116][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [27.035226][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [27.033408][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.018103][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [27.013469][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.010427][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [27.001023][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.993370][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.985718][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.984094][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [26.982181][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.981613][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.971410][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PRIVATE'
  - [26.966309][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.951004][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.935699][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.935168][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.930067][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.925694][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.921321][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.911118][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.900915][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PACKAGE'
  - [26.890712][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PRIVATE'
  - [26.888799][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.881147][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.865842][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.863656][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.853453][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [26.843250][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PRIVATE'
  - [26.841337][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.831134][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.805239][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [26.789019][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.779751][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.769547][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [26.767634][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.765448][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.760346][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.745042][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [26.743986][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.742073][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.736971][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [26.735058][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.729956][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [26.724855][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.714652][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [26.722939][Move Down Field] 'yyline' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.728040][Decrease Method Security] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.732772][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder' to static 
  - [26.736249][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [26.745556][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.752152][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.768642][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.785133][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.788534][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.825640][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [26.832310][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.836462][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.849654][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.851841][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PACKAGE'
  - [26.851841][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.853375][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.857747][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.847544][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [26.862849][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.859023][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.857538][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.853166][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.836675][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.821370][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.821204][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.819291][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.811638][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.811202][Remove Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.809162][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.804789][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.800416][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.795821][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.791448][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.786347][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.781245][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.779059][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.768856][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [26.752365][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.742162][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.728970][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.726783][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.704796][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.704516][Remove Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.694313][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [26.689940][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.679737][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [26.553464][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.549091][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.533786][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.523583][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.517461][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.515901][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.508249][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.503876][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.490460][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.486088][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.472672][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.468299][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.464073][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.459106][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.454005][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.452091][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.436787][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.436451][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.432078][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.429892][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.427705][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.425519][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.431641][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [26.438694][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.472234][Decrease Field Security] 'state' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [26.485902][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [26.490634][Freeze Method] Convert 'yycharat(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.497342][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.510758][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.513819][Decrease Method Security] 'writeReduceActionCode(java.io.Writer)' of 'beaver.spec.Production' to 'PACKAGE'
  - [26.524022][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [26.526790][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [26.550475][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [26.550475][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [26.563891][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.560065][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.570268][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PACKAGE'
  - [26.577750][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.587333][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [26.588893][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.597278][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.599319][Decrease Method Security] 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.598780][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.594407][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.579102][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [26.571450][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.561867][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [26.551664][Increase Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.544012][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.528707][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [26.518504][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.514131][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.512571][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.497267][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.487064][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PRIVATE'
  - [26.480356][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.472704][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.459287][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.449084][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [26.438881][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [26.437724][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [26.435538][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.420234][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.418193][Increase Method Security] 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.422566][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [26.422566][Make Class Final] beaver.comp.Action$Shift
  - [26.435982][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.438764][Decrease Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.452180][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [26.465036][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [26.482090][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.474437][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.482822][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.495678][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [26.502386][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.519156][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.499936][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.505331][Freeze Method] Convert 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.509157][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.517542][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.520325][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.523386][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.525572][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [26.540915][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [26.538729][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.531365][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [26.529179][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.514913][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.470805][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.run.Options'
  - [26.458597][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.450940][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.448754][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.420608][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [26.409614][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.399411][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [26.397225][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.392852][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.364577][Remove Method] 'createbeaver.spec.parser.GrammarParser$Terminals()' of type 'beaver.spec.parser.GrammarParser$Terminals'
====== Run Result ======

* Name: Beaver|ABC|T50|P20|I7500
  * Run Info: Artificial Bee Colony. Population Size: 20, Max Trials: 50, Iterations: 7500.
  * Time taken: 531.99 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 300923

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.928720
  * Possible Actions: 640
  * Applied Actions: 517
  * Num Types: 94
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9245
    * NOC: 0.4787
    * numInterf: 0.0000
    * abstractness: 0.1113
    * packagenesting: 1.5000
    * getters: 0.3511
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7553
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0213
    * staticness: 0.1539
    * numCls: 11.7500
    * numFields: 3.2021
    * NumDesc: 1.1170
    * numOpsCls: 55.8750
    * iC_Par: 2.6489
    * eC_Par: 3.2766
    * Dep_In: 5.7234
    * avrgMethodVisibility: 1.7689
    * Dep_Out: 5.6702
    * setters: 0.1277
    * iFImpl: 0.0000
    * eC_Attr: 1.0000
    * nesting: 0.6277
    * numConstants: 0.8936
    * NumAnc: 1.1170

* Applied Actions:
  - [29.006831][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [29.013427][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [28.937277][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [28.923967][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [28.925425][Decrease Method Security] 'encode(byte[])' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.921877][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [28.875189][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [28.886183][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [28.908170][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [28.911762][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [28.904798][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.926786][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [28.935031][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [28.869069][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.882261][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [28.887363][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [28.875964][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [28.882560][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.893554][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [28.873525][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [28.863322][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [28.856726][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.849762][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.848363][Inline Method] beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity) into beaver.spec.Terminal.createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)
  - [28.838160][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [28.772198][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [28.746613][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [28.731308][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [28.711280][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [28.635130][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [28.613167][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [28.593139][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [28.560730][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [28.538767][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [28.511001][Freeze Method] Convert 'get(int)' of 'beaver.comp.util.IntArray' to static 
  - [28.507600][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.496415][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.477934][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [28.401784][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [28.385624][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.341989][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [28.335393][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.331949][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.328426][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.321830][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.311627][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [28.303974][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [28.298873][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.297342][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.282038][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [28.271835][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [28.269105][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [28.188054][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [28.184653][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.183122][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.176414][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.174884][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.173353][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.158049][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.157405][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.155719][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [28.154188][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.131828][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [28.064748][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.042388][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.034206][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [28.029105][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.006745][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.939665][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.926248][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.921147][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.916774][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.914420][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.905154][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [27.903624][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.900223][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.898304][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.896693][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.890572][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.890273][Introduce Factory] for beaver.Symbol.<init>()
  - [27.887776][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.883332][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.879931][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.872278][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.871717][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.870106][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.868495][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.867126][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.858901][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [27.791821][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.790020][Increase Method Security] 'encode(byte[])' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [27.786092][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [27.774912][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.766920][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [27.762547][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.759146][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.692065][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.690265][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.659439][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.649236][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.635819][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.625616][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.623816][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.556736][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.551345][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [27.546973][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.540264][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.524960][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.523047][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.516339][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.514426][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.511025][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.534326][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [27.535828][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.551171][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [27.559876][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.561676][Decrease Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.569329][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PUBLIC'
  - [27.589177][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.run.Options'
  - [27.599380][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [27.681795][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [27.684705][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [27.691758][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [27.714118][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [27.802474][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.813395][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [27.828738][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [27.830272][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.828359][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.834955][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [27.808476][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [27.814321][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [27.807725][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.801603][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.786299][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.784386][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.782585][Increase Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [27.782478][Move Down Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.780437][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.778396][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.778058][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [27.774966][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.771676][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [27.749688][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.739485][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [27.735728][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.733815][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.731991][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.721788][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.713046][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.689653][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.State'
  - [27.678578][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [27.676645][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.674711][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.664631][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [27.651323][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [27.644727][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.635239][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [27.631659][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [27.616190][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.615228][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.362883][Remove Class] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [27.356286][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.352331][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.347911][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.332442][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.322129][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.306660][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [27.291755][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [27.276285][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.260816][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.230976][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [27.227994][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.226521][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.137089][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.128044][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.124607][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.109138][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.105574][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.101084][Move Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [27.096664][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.081195][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.078073][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.076140][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.074206][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.070985][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.069154][Move Down Method] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Reduce'
  - [27.065717][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.055404][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [27.039495][Remove Method] 'makeDescription(beaver.comp.Action$Reduce,java.lang.String)' of type 'beaver.comp.Action$Reduce'
  - [27.035729][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.020259][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.999754][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.998155][Move Up Method] '<init>(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.996222][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.991802][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.984067][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.980064][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.998911][Move Method] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [27.009224][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PROTECTED'
  - [27.011802][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [27.017122][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [27.019332][Decrease Method Security] 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.009019][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PRIVATE'
  - [27.074982][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [27.077192][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PACKAGE'
  - [27.083788][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.089241][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [27.092335][Decrease Method Security] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.102648][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.073223][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.076316][Decrease Method Security] 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.090148][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [27.092961][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [27.108469][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [27.112148][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [27.113609][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.115819][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.086394][Make Class Abstract] beaver.comp.Action
  - [27.082112][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.069374][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [27.053905][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.046170][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PACKAGE'
  - [27.042733][Increase Method Security] 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.027263][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.903658][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.900845][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.898754][Move Up Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.893597][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.885863][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [26.870394][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.803313][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.801753][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.799820][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.799738][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [26.797804][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.836015][Inline Method] beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [26.854875][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [26.865915][Freeze Method] Convert 'readToken()' of 'beaver.Parser$TokenStream' to static 
  - [26.931699][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to static 
  - [26.929340][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [26.929340][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.931550][Decrease Method Security] 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.921404][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [26.918591][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.922788][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.926533][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.923955][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.937787][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [26.926039][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.928851][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.934304][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [26.908410][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [27.033160][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [27.044153][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [27.042220][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.009239][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.978412][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [26.853290][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.848134][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.836954][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.833428][Move Method] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [26.832859][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [26.822546][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PACKAGE'
  - [26.818126][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.813514][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.798045][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [26.796112][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.791692][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.791550][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.788971][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.721891][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PRIVATE'
  - [26.716735][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.695851][Move Method] 'createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.692413][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.682100][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [26.648560][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.645982][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.644048][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.628579][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.624160][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.599254][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.588941][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [26.582753][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.572441][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [26.567432][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.558670][Move Method] 'countStates(beaver.comp.ParsingTables)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParsingTables'
  - [26.557489][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [26.539476][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.524007][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [26.521429][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.511116][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.505960][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [26.483600][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.416178][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of type 'beaver.spec.Production$1'
  - [26.413600][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.407592][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [26.405530][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.402951][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.387482][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [26.385272][Increase Method Security] 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.384331][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.387550][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [26.392333][Freeze Method] Convert 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.409103][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.410089][Introduce Factory] for beaver.Symbol.<init>(short)
  - [26.440681][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [26.448876][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [26.462292][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.469000][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.475708][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.483904][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [26.486114][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [26.510423][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.511983][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.511983][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.527492][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.538672][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.544859][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PUBLIC'
  - [26.611940][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [26.613659][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.618078][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.613659][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.599226][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.591492][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.584199][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.570783][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.568205][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.566142][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.555830][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [26.540361][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.532626][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [26.525918][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.516335][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [26.509768][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.494299][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [26.493786][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.491853][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.481540][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.479606][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.457619][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.385107][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.380687][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.376267][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.371111][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.360798][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.350485][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.333715][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.316945][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.315012][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.310592][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.301009][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [26.299075][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.284356][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.282423][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.272999][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.268580][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.202617][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PRIVATE'
  - [26.198198][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.263932][Remove Method] 'setLocation(int,int)' of type 'beaver.spec.ast.Node'
  - [26.294523][Freeze Method] Convert 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to static 
  - [26.305563][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [26.342853][Inline Method] beaver.spec.ast.Declaration$PackageName.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$PackageName.accept(beaver.spec.ast.TreeWalker)
  - [26.352747][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.369016][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [26.384524][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.397717][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.411196][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.411196][Make Class Final] beaver.comp.Configuration
  - [26.424389][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.424389][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.422455][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.420096][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [26.422158][Decrease Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.437667][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [26.440474][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [26.447070][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.449450][Decrease Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.463534][Remove Method] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.430553][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.420909][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.419838][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.413177][Inline Method] beaver.Parser$TokenStream.readToken(beaver.Parser$TokenStream) into beaver.Parser$TokenStream.nextToken()
  - [26.405442][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.398846][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.396636][Increase Method Security] 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.392217][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.390154][Increase Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.376962][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.350577][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.284614][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.269145][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.262958][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.196995][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.182729][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.178309][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.167996][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.161809][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.168789][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [26.171367][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.184559][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.215151][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Shift' to static 
  - [26.231641][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.242635][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.245729][Decrease Method Security] 'makeStates(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.256723][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.256723][Make Class Final] beaver.comp.Action$Accept
  - [26.261434][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.263005][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.261367][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [26.294348][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.303772][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [26.305291][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.312317][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [26.314527][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.329777][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [26.336004][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.338492][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [26.304951][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.172712][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.161339][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.157441][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.151253][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.140523][Move Method] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.126876][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.115503][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.105190][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.101977][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.099205][Instantiate Method] Move static method 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.091470][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.083736][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.063677][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.066485][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [26.079466][Move Method] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [26.082560][Decrease Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.091810][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.097263][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [26.106210][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [26.140328][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [26.142262][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.155909][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.155909][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.157843][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.162039][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.182599][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.206152][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to static 
  - [26.233567][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String)
  - [26.241302][Decrease Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.249037][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [26.266096][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.267683][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.270261][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.253202][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.250116][Remove Method] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.248529][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.242341][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.232263][Move Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.227130][Move Method] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.216823][Remove Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.211511][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.209448][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.208109][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.198190][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [26.182720][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.180658][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.037746][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [25.976405][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [25.974762][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.973118][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.976904][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [25.994573][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.007567][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [26.009211][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.013697][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.023173][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.030240][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.037975][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [26.040037][Decrease Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.042247][Decrease Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.052540][Move Method] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.062637][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [26.086189][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.109747][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.119843][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [26.122422][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.121442][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.259347][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.262160][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.268868][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [26.265774][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.258039][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [26.254088][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.249939][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.246845][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.242977][Increase Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.238616][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.228322][Move Method] 'compile(beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [26.226112][Increase Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.221521][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.210140][Instantiate Method] Move static method 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.204984][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.200144][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.194988][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.181101][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.175993][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.141276][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.106559][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.101158][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.099096][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.064379][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [25.963121][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [25.957964][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.955981][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.953918][Increase Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [25.936559][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [25.930783][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.928720][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
====== Run Result ======

* Name: Beaver|ABC|T50|P20|I7500
  * Run Info: Artificial Bee Colony. Population Size: 20, Max Trials: 50, Iterations: 7500.
  * Time taken: 522.67 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 300702

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.099703
  * Possible Actions: 604
  * Applied Actions: 554
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9119
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3684
    * NumAssEl_ssc: 0.0000
    * numOps: 4.6842
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.1794
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 55.6250
    * iC_Par: 2.6526
    * eC_Par: 3.3053
    * Dep_In: 5.8421
    * avrgMethodVisibility: 1.6757
    * Dep_Out: 5.6526
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [29.005301][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.995098][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [28.993567][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.980821][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [28.983372][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [29.063922][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [29.059549][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [29.076040][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [29.060773][Freeze Method] Convert 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [29.071766][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [29.057265][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [29.006286][Freeze Method] Convert 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to static 
  - [29.022777][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [29.027275][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [29.060256][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [29.062807][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [29.016547][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [29.018005][Decrease Method Security] 'encode(byte[])' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [29.013632][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.991670][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [28.922032][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to static 
  - [28.908774][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [28.881008][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [28.865703][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [28.838399][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [28.824994][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [28.804966][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [28.790065][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [28.757461][Move Method] 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.681311][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [28.670125][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.659922][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [28.653326][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.651868][Increase Method Security] 'encode(byte[])' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [28.624102][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [28.606887][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.606428][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.587947][Freeze Method] Convert 'removeResolvedActions()' of 'beaver.comp.Action$List' to static 
  - [28.572680][Freeze Method] Convert 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [28.566927][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [28.561594][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [28.543113][Freeze Method] Convert 'findFirstTerminal(int)' of 'beaver.ParsingTables' to static 
  - [28.539712][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.534084][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.519583][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [28.519035][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [28.502875][Freeze Method] Convert 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [28.480658][Instantiate Method] Move static method 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.473694][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.471339][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [28.467938][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.461342][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.459416][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.459292][Introduce Factory] for beaver.Symbol.<init>()
  - [28.454920][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.446533][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [28.442091][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [28.440480][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.409069][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.404696][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.402996][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.393573][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [28.365427][Make Class Abstract] beaver.comp.Action
  - [28.355224][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [28.354563][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [28.334422][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.319117][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [28.312629][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.311876][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.307503][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.242622][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.211796][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [28.210185][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.145304][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.143651][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [28.135287][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [28.119982][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [28.113494][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.111794][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.096489][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [28.094789][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.092118][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [28.083770][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [28.018889][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [28.012768][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [28.010731][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [28.008930][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.007129][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.991825][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [27.926944][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.925143][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.925142][Introduce Factory] for beaver.Symbol.<init>(short)
  - [27.909837][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.907115][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.905964][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [27.890659][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.888858][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.879269][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.848442][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.844248][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.838126][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.836213][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.834822][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.824619][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.821218][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.814730][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.804527][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PACKAGE'
  - [27.795258][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [27.790885][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.775581][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [27.658993][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.654620][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.650248][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.584285][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.580884][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.570681][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [27.569057][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [27.558854][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [27.552258][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.519277][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.512680][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.496043][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [27.479552][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [27.475180][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.473139][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.471226][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.461023][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [27.456650][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.441346][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [27.432600][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [27.429539][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.427499][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.411008][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [27.409095][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.402973][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.399701][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [27.397515][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.369369][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.367456][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.364395][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.479805][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.496903][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.481599][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.546683][Freeze Method] Convert 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to static 
  - [27.569984][Freeze Method] Convert 'initStack()' of 'beaver.Parser$Simulator' to static 
  - [27.588643][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [27.596513][Introduce Factory] for beaver.comp.util.Log$Record.<init>(int,int,java.lang.String)
  - [27.593801][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [27.585540][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [27.595743][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [27.606457][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.612578][Decrease Method Security] 'initStack(beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.609518][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.615639][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [27.615639][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [27.617184][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.620245][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [27.631776][Move Method] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [27.637171][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [27.635258][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.629136][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.625779][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.625393][Move Down Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.621021][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PRIVATE'
  - [27.613368][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.609838][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [27.577398][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [27.567195][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [27.565570][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [27.561878][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.561434][Move Method] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [27.557557][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.542253][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [27.528963][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.527432][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.523513][Move Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [27.522892][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [27.507587][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.504527][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.497308][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [27.494350][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.483226][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [27.475574][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.457754][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [27.453382][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.443179][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [27.441265][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.431062][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [27.415758][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.410690][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [27.406864][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PRIVATE'
  - [27.406248][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [27.402173][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.397800][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.397766][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [27.394896][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [27.384693][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.375130][Move Method] 'checkAndResolveConflicts(beaver.comp.util.Log,beaver.comp.ParserGenerator)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParserGenerator'
  - [27.371084][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.355780][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [27.328952][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.322651][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.322366][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.321898][Move Method] 'countStates(beaver.comp.ParsingTables)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParsingTables'
  - [27.296003][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [27.293718][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [27.280742][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.274620][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.271219][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.269178][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.268408][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.258205][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [27.242901][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.227596][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.221474][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.218073][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.211951][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.207301][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [27.203900][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.196248][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [27.163807][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.161382][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [27.159357][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [27.155874][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.152473][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.145962][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [27.144049][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.137927][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.131805][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.124985][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [27.115716][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.105513][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PACKAGE'
  - [27.099463][Inline Method] beaver.comp.Action$List.removeResolvedActions(beaver.comp.Action$List) into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [27.089260][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [27.073955][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.058651][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [27.043346][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.035039][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [27.031638][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.021435][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [27.006130][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [26.988301][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.986388][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.925124][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.914921][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PACKAGE'
  - [26.905652][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.904122][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.893919][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.890027][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.887693][Remove Method] 'parseOptions(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.885780][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.881954][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.874302][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.872389][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.870476][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.866103][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.850798][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [26.846426][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.842282][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.821509][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [26.819596][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.817410][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.811900][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [26.809353][Remove Method] 'visit(beaver.spec.ast.Rule)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.795196][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.793283][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.791659][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$2'
  - [26.776355][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.774441][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.772528][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.770615][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.760412][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PACKAGE'
  - [26.750209][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PRIVATE'
  - [26.745350][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.745176][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.743263][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.738823][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.728620][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.663739][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [26.660338][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.645034][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.637381][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.665244][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of type 'beaver.spec.GrammarBuilder$2'
  - [26.681465][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.706858][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [26.710259][Decrease Method Security] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.757353][Inline Method] beaver.spec.ast.Declaration$Implements.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Implements.accept(beaver.spec.ast.TreeWalker)
  - [26.794244][Inline Method] beaver.spec.ast.Declaration$Imports.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Imports.accept(beaver.spec.ast.TreeWalker)
  - [26.815871][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.826793][Freeze Method] Convert 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.945988][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.950626][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [26.954777][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.933499][Increase Field Security] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.944421][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [26.953595][Inline Method] beaver.ParsingTables.<init>(java.lang.String) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [26.958697][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.969336][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.972397][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.980049][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.990970][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.990970][Make Class Final] beaver.comp.Action$Reduce
  - [26.969692][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.967360][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [26.932908][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.927781][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [26.808063][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.786436][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.782610][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.772407][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [26.770783][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [26.766956][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.702076][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.698674][Increase Method Security] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.696761][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.686558][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.675745][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.643304][Increase Field Security] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.633101][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.631188][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.598748][Increase Field Security] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.594922][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.584719][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.582805][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.577704][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.552778][Inline Method] beaver.Parser$Simulator.initStack(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.550424][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.535119][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.528997][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.518794][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.513693][Increase Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.508157][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [26.513259][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.517085][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.541801][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [26.565103][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.565970][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [26.568738][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [26.581714][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.571511][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [26.571511][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.573424][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.577063][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.593283][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.593283][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.600132][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.615250][Remove Method] 'visit(beaver.spec.ast.Declaration$Imports)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.642377][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [26.642377][Make Class Final] beaver.comp.ParsingTables
  - [26.655570][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.667067][Move Method] 'checkAndResolveConflicts(beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.673664][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.671623][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.660629][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.652439][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.650755][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int,beaver.comp.util.BitSet) into beaver.comp.util.BitSet.add(int)
  - [26.617774][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.613948][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.597457][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.526195][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.521094][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.422150][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.417870][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.406373][Move Method] 'checkAndResolveConflicts(beaver.comp.util.Log,beaver.comp.ParserGenerator)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParserGenerator'
  - [26.404839][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.446344][Inline Method] beaver.spec.ast.Declaration$Header.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Header.accept(beaver.spec.ast.TreeWalker)
  - [26.478937][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [26.481713][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [26.477079][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.500381][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.500381][Make Class Final] beaver.comp.Configuration
  - [26.536813][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[]) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])
  - [26.539997][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [26.605959][Decrease Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [26.605959][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.539997][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.547649][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.569637][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.577289][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [26.588283][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.597657][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [26.601058][Decrease Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.593406][Increase Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.600002][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.600002][Make Class Non-Final] beaver.comp.ParsingTables
  - [26.583040][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.453793][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.425036][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.414833][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.407385][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [26.403559][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.403505][Remove Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.393301][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [26.384552][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.351012][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.283932][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.277810][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.279421][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.296083][Remove Method] 'scannerError(beaver.Scanner$Exception)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.229003][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.221350][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.222961][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.233164][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [26.241272][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [26.263633][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.278937][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.306792][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to static 
  - [26.320208][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.333624][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [26.339019][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [26.341205][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [26.341205][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.362921][Remove Method] 'visit(beaver.spec.ast.Declaration$Header)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.362921][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [26.365982][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.374367][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.387783][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.365545][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.353485][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.220204][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.206788][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.193372][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.185238][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [26.191360][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.198068][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.211484][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.228254][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.232405][Freeze Method] Convert 'getTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.238952][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.255652][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [26.263304][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [26.270357][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.311429][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [26.315255][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.337615][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.337722][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [26.343607][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.350316][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PUBLIC'
  - [26.347255][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [26.348815][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.348815][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [26.372116][Freeze Method] Convert 'start()' of 'beaver.spec.Production$List' to static 
  - [26.386490][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [26.358215][Remove Method] 'createbeaver.spec.parser.GrammarParser$Terminals()' of type 'beaver.spec.parser.GrammarParser$Terminals'
  - [26.344799][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.335634][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.332233][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.327889][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.305143][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.279148][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [26.194245][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.178940][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PROTECTED'
  - [26.163636][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.173839][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.183213][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.194134][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [26.194134][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [26.197195][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.215854][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.251287][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1) into beaver.comp.Configuration$Set.createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)
  - [26.319524][Decrease Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [26.319524][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [26.321111][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.328763][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [26.328763][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [26.338511][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [26.361257][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.387252][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [26.402787][Remove Method] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.427781][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.561584][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.563770][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PROTECTED'
  - [26.580478][Move Method] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [26.570895][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [26.565793][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.555590][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [26.541433][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.539101][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [26.405133][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.402801][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [26.334565][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PROTECTED'
  - [26.326912][Increase Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.258675][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PACKAGE'
  - [26.237569][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.235982][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.228330][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.160093][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.165195][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.172247][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.176074][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [26.188636][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.211382][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [26.215380][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.237997][Introduce Factory] for beaver.Parser$Simulator.<init>(beaver.Parser)
  - [26.246606][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [26.237857][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.245509][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [26.222764][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.236411][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.236411][Make Class Non-Final] beaver.comp.Configuration
  - [26.239472][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.249715][Remove Method] 'errorPhraseRemoved(beaver.Symbol)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.260637][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [26.267690][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.267690][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.277438][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [26.280220][Decrease Method Security] 'makeStates(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.138343][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.132222][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.130607][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.125505][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.125500][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.166911][Inline Method] beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables) into beaver.comp.ParserGenerator$CompiledParser.createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.171095][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [26.183951][Freeze Method] Convert 'hasCollisions()' of 'beaver.comp.ParsingTables' to static 
  - [26.190894][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.191067][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.193850][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.209155][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.211937][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.214998][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.227854][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [26.238057][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PROTECTED'
  - [26.250913][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.253974][Decrease Method Security] 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.269317][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [26.271018][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [26.271018][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [26.280392][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [26.283174][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.285087][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.294461][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [26.292129][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [26.284477][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.282853][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.267548][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PACKAGE'
  - [26.259135][Inline Method] beaver.comp.ParsingTables.hasCollisions(beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.254034][Increase Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.238729][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PRIVATE'
  - [26.231617][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.216313][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PROTECTED'
  - [26.208660][Increase Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [26.203559][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.202491][Move Method] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.194838][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PROTECTED'
  - [26.187186][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to 'PRIVATE'
  - [26.171881][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PACKAGE'
  - [26.164229][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.146871][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.145497][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.130192][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PRIVATE'
  - [26.127410][Increase Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.104265][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.099703][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
====== Run Result ======

* Name: Beaver|ABC|T50|P20|I7500
  * Run Info: Artificial Bee Colony. Population Size: 20, Max Trials: 50, Iterations: 7500.
  * Time taken: 538.50 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 301021

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.551269
  * Possible Actions: 652
  * Applied Actions: 323
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.0417
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1054
    * packagenesting: 1.5000
    * getters: 0.3579
    * NumAssEl_ssc: 0.0000
    * numOps: 4.8316
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.1295
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 57.3750
    * iC_Par: 2.6737
    * eC_Par: 3.1053
    * Dep_In: 5.5263
    * avrgMethodVisibility: 1.8195
    * Dep_Out: 5.6737
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [28.989616][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.997360][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [28.980082][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [28.984455][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [28.987817][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [28.987817][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.983943][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [28.969441][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [28.952226][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [28.956833][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [28.961935][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [28.964289][Decrease Method Security] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.971993][Move Up Method] '<init>(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [28.967620][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.972721][Decrease Method Security] 'initStack()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [28.968349][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.951134][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [28.935867][Freeze Method] Convert 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to static 
  - [28.910116][Introduce Factory] for beaver.comp.Action$Type.<init>(int,java.lang.String)
  - [28.897370][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [28.890407][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.869803][Introduce Factory] for beaver.comp.Action.<init>(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)
  - [28.859600][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [28.855497][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [28.809072][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [28.807542][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.781971][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [28.689525][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.run.Options'
  - [28.689098][Move Down Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Accept'
  - [28.682134][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.648961][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [28.574770][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to static 
  - [28.567806][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.554496][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [28.510839][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [28.459861][Freeze Method] Convert 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to static 
  - [28.458330][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.447145][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.445614][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.430310][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [28.426482][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [28.424952][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.421580][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [28.420123][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.400357][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.371006][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.364518][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.364085][Move Up Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [28.348781][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [28.342537][Freeze Method] Convert 'hasCollisions()' of 'beaver.comp.ParsingTables' to static 
  - [28.339013][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.328810][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [28.327479][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [28.317276][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [28.316213][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.308750][Move Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [28.307139][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.242258][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [28.234606][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [28.208712][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [28.204339][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.194136][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [28.178831][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [28.171179][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [28.164691][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.163160][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.147856][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [28.141734][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.076853][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.071751][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [28.006870][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.996667][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.981363][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.916482][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [27.851601][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.836296][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.829808][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.826407][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.825803][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [27.825268][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [27.822732][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.816244][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.814633][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.813022][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.809621][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.806220][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.778074][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.776463][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.773402][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.771791][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.750164][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.744043][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.740642][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.740548][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [27.736175][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.703735][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.688430][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.655990][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.645786][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.642385][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.627081][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.622708][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.607404][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.592099][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [27.590488][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.536521][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.533460][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.529087][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.525686][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.524075][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.514652][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.513041][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.506919][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.502547][Increase Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [27.487242][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.486686][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.476483][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.475356][Introduce Factory] for beaver.Symbol.<init>()
  - [27.471043][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [27.470919][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.466546][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.464935][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.457283][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [27.391321][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.386948][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.385337][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.370033][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [27.245878][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.244267][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.236615][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [27.236110][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.229988][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.226508][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [27.225750][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.216167][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.212766][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.202563][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [27.198190][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.194763][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.189662][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.179459][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.173337][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.169936][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.169304][Move Down Method] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Reduce'
  - [27.167504][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.136677][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.130555][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.126555][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.122935][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.134115][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [27.151537][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [27.084457][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.089384][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [27.131256][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [27.146560][Decrease Method Security] 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PACKAGE'
  - [27.163260][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [27.167656][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.167656][Make Class Final] beaver.comp.Configuration
  - [27.183433][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [27.194355][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [27.209698][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [27.226398][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [27.237578][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.239491][Decrease Method Security] 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.250412][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [27.267112][Introduce Factory] for beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol)
  - [27.289472][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.291083][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [27.275779][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.272718][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.261489][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.257276][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.248297][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [27.246384][Increase Method Security] 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [27.228152][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [27.223016][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.221498][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.185809][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [27.127084][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [27.120818][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.089991][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.074687][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.068565][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.058362][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [27.057943][Move Up Method] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [27.023124][Move Method] 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.State'
  - [27.007819][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.997616][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [26.931654][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.921451][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PRIVATE'
  - [26.915945][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.901788][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.886484][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [26.873291][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.863088][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.856966][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.849314][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.845317][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.842256][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.836617][Inline Method] beaver.comp.ParsingTables.hasCollisions(beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.818545][Remove Method] 'createbeaver.spec.parser.GrammarParser$Terminals()' of type 'beaver.spec.parser.GrammarParser$Terminals'
  - [26.812521][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,java.lang.String,beaver.comp.Action$Type$Conflict$ShiftReduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.797216][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.807419][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [26.808953][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.825653][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [26.835076][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [26.845279][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [26.840241][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [26.843642][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.860132][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.926095][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [26.926095][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.929863][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.943543][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.950873][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.967318][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [26.957894][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [26.959672][Freeze Method] Convert 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.959672][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.966724][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.968116][Decrease Method Security] 'newSymbol(short,java.lang.Object,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.087457][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.072153][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [27.061950][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [27.058182][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [27.051652][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.035432][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [27.013805][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.998351][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.991097][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.990507][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.986815][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.958050][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [26.952926][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.949503][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.945112][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.933506][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.889619][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.879416][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.865862][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [26.861358][Move Down Method] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Reduce'
  - [26.846054][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [26.844442][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.840840][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.823010][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.822550][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [26.818739][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [26.753858][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [26.755559][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.771080][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [26.784056][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.791709][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [26.799819][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.818478][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [26.826588][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.851135][Inline Method] beaver.spec.Grammar.<init>() into beaver.spec.Grammar.createbeaver.spec.Grammar()
  - [26.867355][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.878277][Freeze Method] Convert 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.910717][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.926937][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.928548][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.932232][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.938542][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [26.941225][Move Method] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.962851][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.963382][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.971383][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.990042][Freeze Method] Convert 'isRemovable()' of 'beaver.comp.Action$Type' to static 
  - [26.974738][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.953111][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.945459][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.942676][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.935024][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.930651][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.927033][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int,beaver.comp.util.BitSet) into beaver.comp.util.BitSet.add(int)
  - [26.802877][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.786387][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.720424][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.716144][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.711510][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.705912][Remove Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of type 'beaver.comp.util.Log'
  - [26.704301][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.642016][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.637643][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.636019][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [26.603038][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.601413][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [26.597351][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.592978][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.594589][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.601185][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.607781][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.603409][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.606810][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.608510][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.610081][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.615182][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.624605][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [26.627789][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.630984][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.640567][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [26.658010][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,java.lang.String,beaver.comp.Action$Type$Conflict$ShiftReduce)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Shift'
  - [26.661433][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [26.657060][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.672144][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [26.685443][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [26.700786][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.704187][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.711839][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [26.704187][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.688882][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.688015][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.682951][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.667647][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.658064][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [26.657635][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.652402][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.642819][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.626049][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.621676][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.552077][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.551269][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
====== Run Result ======

* Name: Beaver|ABC|T50|P20|I7500
  * Run Info: Artificial Bee Colony. Population Size: 20, Max Trials: 50, Iterations: 7500.
  * Time taken: 538.58 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 301007

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.864953
  * Possible Actions: 613
  * Applied Actions: 550
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.8630
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3579
    * NumAssEl_ssc: 0.0000
    * numOps: 4.6737
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 2.9474
    * staticness: 0.1706
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 55.5000
    * iC_Par: 2.6526
    * eC_Par: 3.2316
    * Dep_In: 5.6947
    * avrgMethodVisibility: 1.6669
    * Dep_Out: 5.6000
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [28.995432][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [28.944454][Freeze Method] Convert 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to static 
  - [28.955447][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [28.923039][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [28.916075][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.914545][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [29.024361][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [29.031460][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [29.033675][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [29.020929][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [29.020801][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [29.004641][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.976875][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [28.970387][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.968857][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.981833][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [28.960206][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.960206][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [28.935756][Freeze Method] Convert 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [28.936980][Decrease Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.898120][Instantiate Method] Move static method 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.858748][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [28.807770][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [28.761345][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [28.730980][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [28.700154][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [28.625963][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to static 
  - [28.605935][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to static 
  - [28.598971][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.598860][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [28.588047][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [28.570082][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [28.563594][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.560274][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.558998][Increase Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [28.557387][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.555857][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.552456][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.548083][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.539982][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [28.475101][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.468613][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.453309][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [28.452747][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.341201][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [28.339590][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.337979][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.334578][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [28.331631][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [28.321428][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PACKAGE'
  - [28.317055][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.309009][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [28.307584][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.306988][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.241026][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.124580][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [28.122880][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.119459][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.113337][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.046257][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [28.036054][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [28.034353][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.026701][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [28.025000][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.009696][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [28.007935][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.004534][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.003356][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [28.001656][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.995534][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.988826][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.982704][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.981003][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.976631][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.969923][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.966522][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.953106][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.949513][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.946112][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.941740][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.935032][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.928324][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.861243][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.859330][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.836970][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.836447][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.821142][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.816770][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.749689][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.749608][Freeze Method] Convert 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [27.736192][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.731443][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [27.724735][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.722822][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.706227][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.701854][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.673708][Make Class Abstract] beaver.comp.Action
  - [27.658404][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.648201][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [27.625841][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.622440][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.616318][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.587569][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [27.585869][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.584351][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.581195][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.565076][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [27.563163][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.560785][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.558872][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.556959][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.525077][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.518955][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.511188][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.483042][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.479641][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.464205][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [27.448901][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.442779][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.427474][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.417271][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [27.407068][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.402695][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.400509][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.406275][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [27.401173][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.409419][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.414813][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [27.427378][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [27.437581][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PROTECTED'
  - [27.448902][Instantiate Method] Move static method 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [27.450602][Decrease Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.448689][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.481671][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [27.484731][Decrease Method Security] 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [27.486772][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [27.496195][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [27.519497][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to static 
  - [27.538156][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to static 
  - [27.569238][Introduce Factory] for beaver.comp.util.Log$Record.<init>(int,int,java.lang.String)
  - [27.536257][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.542417][Freeze Method] Convert 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [27.555609][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.557964][Decrease Method Security] 'removeLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.548379][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.542112][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.526807][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.525107][Increase Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [27.513183][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [27.509166][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.507542][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [27.499890][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.495517][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.482773][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [27.475555][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [27.465352][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.463019][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [27.433811][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.421689][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.417406][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.351444][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.320618][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.311195][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.309008][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.299604][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [27.297691][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.291569][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.276264][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [27.266061][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.260085][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [27.257899][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.255712][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.189750][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.180327][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.179083][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [27.178027][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [27.164834][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [27.149491][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [27.147790][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.132608][Inline Method] beaver.Parser$Simulator.increaseStackCapacity(beaver.Parser$Simulator) into beaver.Parser$Simulator.shift(short)
  - [27.129525][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)
  - [27.127171][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.124620][Increase Method Security] 'removeLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.122265][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.096371][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [27.091999][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.094549][Decrease Method Security] 'findOffset(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.096083][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.102680][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [27.108801][Decrease Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [27.124144][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [27.129246][Decrease Method Security] 'compile(beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [27.162227][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [27.195208][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [27.201236][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [27.212158][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [27.230817][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [27.220614][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PACKAGE'
  - [27.223391][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [27.225002][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.225002][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [27.226443][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [27.248430][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.252256][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [27.252256][Make Class Final] beaver.comp.Action$Shift
  - [27.262889][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [27.137836][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [27.135923][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.135491][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.101951][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [27.068411][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [27.053449][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.051095][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.043442][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.009902][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [27.005207][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.999085][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.994296][Instantiate Method] Move static method 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.007965][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [27.014125][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.009752][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [27.011793][Decrease Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [27.017915][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [27.017915][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [27.024075][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [27.027476][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [27.038397][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [27.038397][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.103481][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to static 
  - [27.114650][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [27.117004][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [27.125389][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.132468][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [27.145884][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [27.155467][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [27.165050][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [27.160872][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.215167][Introduce Factory] for beaver.Parser$Exception.<init>(java.lang.String)
  - [27.213366][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.203163][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.198669][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.196203][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [27.186000][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [27.178348][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.168145][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [27.157568][Instantiate Method] Move static method 'compile(beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [27.142264][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [27.128848][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.128724][Remove Method] 'visit(beaver.spec.ast.Declaration$Implements)' of type 'beaver.spec.GrammarBuilder$3'
  - [27.120482][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [27.053401][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [27.051047][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.045694][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [27.040720][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.036347][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [27.033993][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.018688][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PROTECTED'
  - [27.016334][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.011961][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.996656][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [26.981352][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.979311][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.976864][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.961559][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.959518][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.956713][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [26.951634][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.949721][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.947680][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.932376][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [26.917071][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PROTECTED'
  - [26.915031][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.904828][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PACKAGE'
  - [26.898706][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.895645][Increase Method Security] 'findOffset(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.893591][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.878287][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [26.873533][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.871493][Increase Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.861290][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [26.859249][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.843944][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PACKAGE'
  - [26.842031][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.826727][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.793746][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.789919][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.779716][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [26.777676][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.775635][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.760331][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PACKAGE'
  - [26.630139][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.619936][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [26.594434][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.592393][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.586271][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [26.576068][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.569946][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.567906][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.564896][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [26.542058][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.541739][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.528092][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.539464][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.554807][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [26.564556][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [26.575928][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.708439][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.715147][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PUBLIC'
  - [26.772210][Introduce Factory] for beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [26.772210][Make Class Non-Final] beaver.comp.Action$Shift
  - [26.787553][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.783180][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.780825][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.784226][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.786267][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [26.799566][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [26.803205][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.807031][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.808642][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.813374][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.814971][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.802207][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.736245][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PROTECTED'
  - [26.723052][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.721012][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.716574][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)
  - [26.716257][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.706834][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [26.704287][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action$2'
  - [26.688983][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.684610][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.659034][Inline Method] beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser() into beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.654661][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.639356][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.637786][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.622481][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [26.616147][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.605944][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.595741][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.593701][Increase Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.591030][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [26.557653][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.496962][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.431000][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PACKAGE'
  - [26.424404][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.422363][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.293737][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.281118][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.270915][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.277075][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.275035][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.278436][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.284558][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [26.286169][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [26.289570][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.291756][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [26.301959][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [26.308667][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.310278][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [26.316400][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [26.320551][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.323533][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.380595][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [26.382949][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.389657][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.391588][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.401832][Remove Method] 'errorPhraseRemoved(beaver.Symbol)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.403443][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.413393][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.412648][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.406827][Remove Method] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.391522][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PRIVATE'
  - [26.381940][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [26.381409][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.380829][Move Down Field] 'yycolumn' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.366766][Remove Method] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.351461][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.341258][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.331055][Increase Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.329468][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.328379][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.326874][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.260166][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of type 'beaver.comp.Action$List$1'
  - [26.257811][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.250159][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.227014][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.231084][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.230219][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.244106][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.261465][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.257639][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.256549][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.261281][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.264251][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.275823][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.272422][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.288199][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [26.302454][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [26.309664][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.312441][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [26.313275][Move Method] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.327695][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action$1'
  - [26.312390][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [26.315167][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.316782][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.323725][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.322111][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.306806][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.239175][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of type 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [26.232153][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.224501][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.221099][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.203741][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.199368][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.196586][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.196079][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.195354][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.180050][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.173928][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.158623][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.154965][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.144762][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.209846][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [26.223733][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.226088][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.227702][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.257968][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [26.292685][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.302888][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [26.318192][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.341337][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.406054][Inline Method] beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$LeftAssoc.createbeaver.spec.ast.Declaration$LeftAssoc(beaver.Symbol[])
  - [26.421359][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [26.426558][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [26.434210][Decrease Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.457355][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.457355][Make Class Final] beaver.comp.Action$Shift
  - [26.439997][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.497425][Instantiate Method] Move static method 'setPrecedence(int,beaver.spec.Terminal,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [26.538447][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)
  - [26.540802][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.533150][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PROTECTED'
  - [26.510005][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.502353][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.479208][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.476854][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.442137][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.431933][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.408686][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [26.405285][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.402665][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.400333][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [26.395960][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.389017][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.363740][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.356087][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.345884][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [26.339763][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.338138][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.326566][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.316474][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.247040][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.223896][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.222281][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.214629][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.199324][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.194951][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.161207][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.091773][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.084120][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PACKAGE'
  - [26.070233][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [26.065861][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.059248][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.070820][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.071959][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [26.078902][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.084297][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [26.084906][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.084906][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.089278][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.112964][Introduce Factory] for beaver.spec.Grammar$Exception.<init>(java.lang.String)
  - [26.149402][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.run.Options'
  - [26.164706][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.234140][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [26.236923][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [26.244575][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.244575][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.244575][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [26.252445][Introduce Factory] for beaver.comp.io.SrcReader.<init>(java.io.File)
  - [26.254059][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.256100][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.280084][Inline Method] beaver.comp.ParserGenerator.<init>() into beaver.comp.ParserGenerator.createbeaver.comp.ParserGenerator()
  - [26.286244][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.216810][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.215186][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [26.180469][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.179860][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.177820][Increase Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.170167][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.022472][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.014820][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.010447][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [25.974009][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [25.966505][Remove Method] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [25.974157][Decrease Method Security] 'shift(short)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [25.997715][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [25.998736][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [26.005803][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.008214][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [26.016826][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [26.019013][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PACKAGE'
  - [26.020656][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.030753][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.030753][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.025870][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.036584][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.021279][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [26.030653][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [26.034293][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder' to static 
  - [26.058279][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.122894][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [26.133097][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [26.135452][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.135452][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.121260][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [26.105955][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PRIVATE'
  - [26.081969][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.069976][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.065603][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.050118][Remove Method] 'createbeaver.ParsingTables()' of type 'beaver.ParsingTables'
  - [26.031312][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [26.010689][Remove Method] 'createbeaver.Scanner$Exception()' of type 'beaver.Scanner$Exception'
  - [26.003493][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [25.993213][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [25.972352][Remove Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [25.970679][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.953936][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [25.929950][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [25.925577][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [25.923903][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.917782][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [25.914630][Move Method] 'scannerError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [25.912298][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [25.907073][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [25.899434][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [25.897679][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [25.891557][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.881354][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [25.875232][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.864953][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
====== Run Result ======

* Name: Beaver|ABC|T50|P20|I7500
  * Run Info: Artificial Bee Colony. Population Size: 20, Max Trials: 50, Iterations: 7500.
  * Time taken: 532.04 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 300984

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.470338
  * Possible Actions: 664
  * Applied Actions: 383
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.0506
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1058
    * packagenesting: 1.5000
    * getters: 0.3684
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7579
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.1427
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 56.5000
    * iC_Par: 2.6526
    * eC_Par: 3.1789
    * Dep_In: 5.6105
    * avrgMethodVisibility: 1.7429
    * Dep_Out: 5.6526
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [28.995314][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.991766][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [28.917575][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [28.878539][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [28.846131][Freeze Method] Convert 'isRemovable()' of 'beaver.comp.Action$Type' to static 
  - [28.839167][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.850161][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [28.851961][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [28.865154][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.852408][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [28.829023][Introduce Factory] for beaver.Parser$Simulator.<init>(beaver.Parser)
  - [28.816277][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [28.822873][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [28.839363][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [28.829239][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.836891][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [28.839442][Decrease Method Security] 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.831790][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [28.811249][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.798958][Freeze Method] Convert 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [28.763171][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [28.752790][Introduce Factory] for beaver.spec.ast.TreeWalker.<init>()
  - [28.730828][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [28.688318][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String)
  - [28.677132][Freeze Method] Convert 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.664156][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [28.589965][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [28.569937][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [28.565564][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.526192][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [28.491488][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [28.487115][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.480627][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.477130][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [28.444689][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.443231][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.378351][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [28.313470][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.199058][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [28.197537][Freeze Method] Convert 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.197413][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.193040][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.190486][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [28.168498][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [28.167041][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.162668][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [28.156546][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.150424][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.147023][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.143622][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.128318][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [28.126860][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.118745][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [28.116187][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [28.112786][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.108413][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [28.108271][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.102149][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.100432][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [28.072286][Make Class Abstract] beaver.comp.Action
  - [28.065690][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.050385][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [28.048855][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.038652][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [28.028448][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [28.013144][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [28.011613][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.009483][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [28.008131][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.006601][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.991296][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.986924][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.982264][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.978863][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.972741][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.970279][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.963683][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.956031][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.951658][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.941455][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [27.926150][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.921777][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.910784][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [27.844821][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.837051][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.834411][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.803585][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.799212][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.769372][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [27.767761][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.766150][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.761777][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.757404][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.742100][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.726795][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.723394][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.721783][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.720172][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.718897][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.717252][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.710656][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.701181][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [27.699557][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [27.695184][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.695061][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.694971][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.691145][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.687744][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.686160][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [27.681787][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.680176][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.679344][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [27.613382][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.609338][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.601686][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [27.586381][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.580985][Move Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [27.580605][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [27.579322][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [27.571670][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [27.561466][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.558860][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.557584][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.556447][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.555960][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [27.539252][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.535851][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.529255][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.521603][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.517230][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.486403][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.484490][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.476838][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [27.474925][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.408963][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.407050][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.391745][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.381542][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PACKAGE'
  - [27.366237][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.361865][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.360589][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.351166][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.346793][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.343392][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.333189][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.305043][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.289739][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.284637][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.276985][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.269303][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.268287][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [27.267703][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.252399][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [27.237094][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [27.232721][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.228348][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.227759][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.220107][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [27.217677][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.202372][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.136410][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.129043][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [27.096062][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.094149][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.078844][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.089047][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [27.119313][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule' to static 
  - [27.121226][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.130649][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [27.144806][Move Method] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [27.150188][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [27.168847][Freeze Method] Convert 'get(int)' of 'beaver.comp.util.IntArray' to static 
  - [27.199112][Freeze Method] Convert 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to static 
  - [27.205859][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [27.236124][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [27.240027][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [27.243853][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.245184][Decrease Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.261674][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.261674][Make Class Final] beaver.comp.ParsingTables
  - [27.269327][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.Rule)' of 'beaver.spec.ast.Rule' to 'PUBLIC'
  - [27.274955][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [27.282612][Inline Method] beaver.spec.ast.Declaration$LeftAssoc.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$LeftAssoc.accept(beaver.spec.ast.TreeWalker)
  - [27.283943][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.404412][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [27.395144][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.393231][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.378079][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [27.363922][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.362009][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.358803][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [27.335662][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [27.326393][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [27.323523][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [27.322601][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.319200][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.315799][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PROTECTED'
  - [27.313886][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.313350][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.311309][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.301106][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [27.194462][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [27.192549][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.126587][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.110778][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.082636][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [27.073213][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.057908][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.041417][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [27.037045][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.012609][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.009208][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.993903][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [26.991232][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [26.982050][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.978693][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.972571][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.962368][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [26.960327][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.955955][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.952425][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.945749][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [26.939627][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.937714][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.927511][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.925598][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.920496][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.905192][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.899059][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [26.847655][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of type 'beaver.spec.Production$2'
  - [26.845742][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.843829][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.838727][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.834355][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.830269][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)
  - [26.826538][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.823137][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.821224][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.813572][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.798267][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.796643][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [26.794730][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.790357][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.788444][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.778241][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.745260][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.729955][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.714651][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.712610][Increase Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.709209][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.707296][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.699644][Increase Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.689441][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [26.687830][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.677627][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.676016][Increase Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.689870][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.700864][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.697463][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.699376][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.707621][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.709808][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.745664][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [26.745664][Make Class Final] beaver.comp.Configuration$Set
  - [26.754507][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [26.756693][Decrease Method Security] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.839089][Inline Method] beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration) into beaver.comp.Configuration$PropagationLink.createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)
  - [26.843240][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.844774][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.866761][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.890063][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.906553][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.943659][Introduce Factory] for beaver.comp.Action$Accept.<init>(beaver.spec.Grammar)
  - [26.976641][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.991984][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to static 
  - [27.005176][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [27.003263][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.993936][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.988311][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.984727][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.982373][Increase Method Security] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.973628][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.969896][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.959692][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [26.946716][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.931412][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.898971][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.882751][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.880838][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.870024][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.856986][Move Method] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.851884][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [26.851249][Move Method] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.842232][Remove Method] 'parseOptions(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.809791][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.718468][Move Method] 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to its parameter type 'beaver.comp.Configuration'
  - [26.712093][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.710160][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.677719][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.677460][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.675527][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.660058][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.655887][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.634260][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.623947][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.622352][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.614377][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.604064][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.599645][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.597711][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.582242][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.595218][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.656482][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.660292][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.676729][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [26.678549][Decrease Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.689362][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.695550][Decrease Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [26.719151][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [26.726310][Inline Method] beaver.comp.util.BitSet.<init>(int) into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [26.739081][Remove Method] 'visit(beaver.spec.ast.Declaration$Header)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.745569][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.758612][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [26.758612][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [26.763200][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [26.779420][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.787664][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.790758][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.794196][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.815404][Inline Method] beaver.spec.ast.Declaration$Header.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Header.accept(beaver.spec.ast.TreeWalker)
  - [26.816986][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.814338][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [26.808825][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [26.807242][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.806758][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.791289][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [26.786132][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [26.781712][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.756884][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.684874][Remove Method] 'printUsage()' of type 'beaver.comp.run.Make'
  - [26.679717][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [26.675298][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.656882][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.654073][Remove Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.650979][Increase Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.619062][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.587145][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.582725][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.571111][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.561895][Remove Method] 'createbeaver.ParsingTables()' of type 'beaver.ParsingTables'
  - [26.557700][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.555638][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.495362][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.493428][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.493315][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.488895][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.481161][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.483223][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.492747][Freeze Method] Convert 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.494810][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.505122][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [26.511845][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [26.528715][Introduce Factory] for beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol)
  - [26.532443][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder' to static 
  - [26.532443][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.534652][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [26.541036][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PUBLIC'
  - [26.541036][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [26.549280][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.559919][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.579604][Introduce Factory] for beaver.spec.ast.Declaration$Error.<init>()
  - [26.587070][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [26.589280][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PACKAGE'
  - [26.606150][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [26.608745][Introduce Factory] for beaver.comp.run.AntTask.<init>()
  - [26.639385][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [26.647629][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [26.640603][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [26.516688][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.506375][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [26.504712][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [26.502779][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [26.470338][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
====== Run Result ======

* Name: Beaver|ABC|T50|P20|I7500
  * Run Info: Artificial Bee Colony. Population Size: 20, Max Trials: 50, Iterations: 7500.
  * Time taken: 530.93 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 300899

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.878443
  * Possible Actions: 682
  * Applied Actions: 489
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9636
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3579
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7474
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.1543
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 56.3750
    * iC_Par: 2.6526
    * eC_Par: 3.2211
    * Dep_In: 5.6632
    * avrgMethodVisibility: 1.6168
    * Dep_Out: 5.6526
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [28.991564][Freeze Method] Convert 'hasCollisions()' of 'beaver.comp.ParsingTables' to static 
  - [28.994625][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [28.997686][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [28.992832][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [28.989431][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.994533][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [28.988411][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.997834][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [28.984524][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [28.984524][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.989626][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [28.977975][Introduce Factory] for beaver.Symbol.<init>(short)
  - [28.981036][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [28.956586][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [28.973076][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [28.968636][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [28.968636][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.950155][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [28.953346][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.954804][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.878654][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [28.812691][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [28.801698][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [28.788293][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [28.775035][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [28.770662][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.754502][Freeze Method] Convert 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [28.722094][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [28.694328][Freeze Method] Convert 'initStack()' of 'beaver.Parser$Simulator' to static 
  - [28.693665][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.642687][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [28.603314][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [28.581352][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [28.541979][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [28.537607][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.526090][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.507161][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.492659][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [28.464853][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.450351][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [28.422438][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.io.SrcReader'
  - [28.399038][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [28.388913][Freeze Method] Convert 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.387027][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [28.370867][Freeze Method] Convert 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [28.369337][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.350856][Freeze Method] Convert 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to static 
  - [28.344368][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.327388][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [28.321010][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [28.318002][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [28.307799][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [28.306268][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.304738][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.298250][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.270104][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [28.156428][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.152056][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.143457][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [28.136861][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.131760][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [28.130229][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.123633][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.117037][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.084056][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.080995][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.079384][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.077773][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.076162][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.068509][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [28.066979][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.063578][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.060517][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.058906][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.058367][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.055306][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [28.040001][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [28.038390][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.037500][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [28.037377][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.918953][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.911301][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.910739][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.903718][Move Down Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$RuleWalker'
  - [27.899345][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.898070][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.891948][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.869588][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.867888][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.863515][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.863230][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [27.858947][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [27.858182][Move Down Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.849393][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [27.839190][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.831538][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.816233][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.814622][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.809521][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.807608][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.740527][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.673447][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.671534][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.656229][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.650107][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.634803][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.601263][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.573117][Make Class Abstract] beaver.comp.Action
  - [27.571204][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.567803][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.563430][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.554357][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [27.552444][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.551168][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.548107][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.543006][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.537904][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.531196][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.514559][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [27.511177][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [27.494407][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [27.492366][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.489305][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.487487][Remove Method] 'visit(beaver.spec.ast.Rule)' of type 'beaver.spec.GrammarBuilder$5'
  - [27.485447][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.483406][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.478304][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.477882][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.410801][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.395497][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.392382][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [27.389435][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.388105][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.384850][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.369545][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.366484][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PROTECTED'
  - [27.365253][Move Down Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$RuleWalker'
  - [27.363340][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.358967][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.352845][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.349784][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.347871][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.346921][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.343173][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.340987][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.337586][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.336292][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.333231][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PACKAGE'
  - [27.328129][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.326216][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.316425][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [27.307855][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [27.277028][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.261724][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$RuleWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [27.259300][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [27.243996][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.237288][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.229953][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.220370][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.218457][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.151377][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.149198][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [27.143260][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [27.133057][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.132496][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.065415][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.055212][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [27.039908][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.033200][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.025547][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.020446][Increase Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [27.010243][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PACKAGE'
  - [27.000040][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.989837][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$RuleWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [26.983129][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.976140][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [26.971038][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.903958][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.902045][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.896943][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.891842][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.894903][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.894903][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [26.899054][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.909975][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [26.918360][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.920401][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.922314][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.925375][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.917723][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.917723][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.927926][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [26.936034][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.936034][Make Class Final] beaver.comp.Configuration
  - [26.946237][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [26.946237][Make Class Final] beaver.comp.Configuration$Set
  - [26.930932][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.958787][Freeze Method] Convert 'getId()' of 'beaver.comp.Action' to static 
  - [26.953686][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.080495][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [27.090698][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Imports' to 'PUBLIC'
  - [27.074496][Inline Method] beaver.Parser$Simulator.initStack(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [27.068221][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [27.064820][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.061760][Increase Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [27.059846][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.057933][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.045839][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [27.043925][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.040524][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.035104][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.025680][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.015477][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.011105][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.000902][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [26.873932][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.870106][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.854801][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [26.841385][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.839472][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.829269][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.827229][Increase Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.822856][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.815204][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.811377][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.789767][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [26.779564][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [26.769361][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.764378][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [26.763681][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [26.753478][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PACKAGE'
  - [26.749106][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.738903][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PACKAGE'
  - [26.722195][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.717093][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.706890][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PACKAGE'
  - [26.691586][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [26.683660][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [26.678558][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.678099][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [26.673457][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.670447][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [26.666656][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.633116][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.629109][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.632170][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [26.633970][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.642355][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.656036][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [26.656973][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.656973][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.695070][Instantiate Method] Move static method 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [26.700465][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [26.723767][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [26.731165][Introduce Factory] for beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [26.734236][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [26.738388][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.760748][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.777518][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.781669][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.783470][Decrease Method Security] 'getTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.779097][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.801457][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.868537][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [26.860885][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.855784][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.852826][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [26.850913][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.840710][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PRIVATE'
  - [26.827996][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.823219][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.807915][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [26.806002][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.805893][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.804269][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [26.800125][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.784820][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.783883][Move Method] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.776660][Inline Method] beaver.comp.ParsingTables.hasCollisions(beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.771559][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.769646][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.759443][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.751883][Move Method] 'compile(beaver.comp.run.Options,beaver.comp.util.Log,beaver.comp.run.Make)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [26.749383][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [26.747358][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [26.745445][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.735242][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [26.732789][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.602993][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.596871][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.586668][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PACKAGE'
  - [26.584857][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [26.582944][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.567639][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.552335][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [26.550421][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.519595][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [26.509392][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [26.494087][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.488986][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.481321][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.479408][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.471756][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Imports' to 'PROTECTED'
  - [26.456451][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.446248][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [26.441808][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.434156][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Imports' to 'PACKAGE'
  - [26.423953][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [26.416300][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.382182][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.374530][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.359225][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.343920][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.328616][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [26.326703][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.313436][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.305783][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.226382][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.203237][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.193034][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PRIVATE'
  - [26.188242][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.186618][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.178966][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [26.177590][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.167387][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.162285][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.168404][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [26.178500][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [26.248137][Freeze Method] Convert 'nextToken()' of 'beaver.Scanner' to static 
  - [26.249938][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.257016][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [26.260417][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.271339][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [26.274107][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [26.284203][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [26.293231][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.293231][Make Class Final] beaver.comp.State$Factory
  - [26.297382][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.306217][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.321560][Freeze Method] Convert 'findFirstTerminal(int)' of 'beaver.ParsingTables' to static 
  - [26.341035][Introduce Factory] for beaver.spec.ast.Declaration$Error.<init>()
  - [26.342042][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.349695][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.368996][Move Down Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [26.363469][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.434143][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [26.429770][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.427857][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.417654][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PACKAGE'
  - [26.415741][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.405538][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [26.395619][Move Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.393706][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.383503][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PRIVATE'
  - [26.373407][Increase Field Security] 'id' of 'beaver.comp.State' to 'PACKAGE'
  - [26.363310][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [26.361397][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.359484][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.344180][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [26.336527][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.331407][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.324903][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.322989][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.322857][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [26.252183][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [26.250270][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.240067][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [26.238154][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.236241][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.224072][Remove Method] 'createbeaver.ParsingTables()' of type 'beaver.ParsingTables'
  - [26.208767][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [26.206854][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.199202][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.128528][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PRIVATE'
  - [26.122979][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.112776][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [26.112653][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [26.110740][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.103087][Increase Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.089857][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.079761][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [26.079646][Introduce Factory] for beaver.Symbol.<init>()
  - [26.117764][Inline Method] beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables) into beaver.comp.ParserGenerator$CompiledParser.createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.135432][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.146354][Freeze Method] Convert 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.181691][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [26.195826][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.197739][Decrease Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.223816][Inline Method] beaver.spec.parser.GrammarParser.<init>() into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser()
  - [26.226877][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.268749][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [26.278952][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [26.299161][Remove Method] 'visit(beaver.spec.ast.Declaration$Imports)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.313296][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.320948][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [26.344633][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [26.356584][Introduce Factory] for beaver.Parser$Events.<init>()
  - [26.359645][Decrease Method Security] 'removeResolvedActions()' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.369593][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [26.383728][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.397863][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.428128][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [26.412073][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [26.397808][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.393599][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [26.388498][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.362604][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [26.296330][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.282195][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.271992][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [26.261789][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.233514][Remove Method] 'createbeaver.spec.parser.GrammarParser$Terminals()' of type 'beaver.spec.parser.GrammarParser$Terminals'
  - [26.209956][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.207173][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.196970][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.194930][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.159593][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [26.153776][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.150851][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.135547][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [26.127894][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.125854][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.111719][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.111611][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [26.109570][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.099367][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.097327][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.083192][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.072946][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [26.070905][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.063253][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PACKAGE'
  - [26.055601][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [26.037932][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.033559][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.032301][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int,beaver.comp.util.BitSet) into beaver.comp.util.BitSet.add(int)
  - [26.022098][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.007963][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [25.992658][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [25.985006][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [25.970871][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [25.963219][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [25.955567][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [25.979125][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.025550][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to static 
  - [26.045948][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [26.061253][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.063608][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.074530][Freeze Method] Convert 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [26.082182][Decrease Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.087264][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [26.133689][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to static 
  - [26.140742][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.148394][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [26.194819][Freeze Method] Convert 'visit(beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to static 
  - [26.197880][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.215549][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.218950][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.284034][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [26.286220][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [26.309908][Remove Method] 'compile(beaver.comp.run.Options,beaver.comp.run.Make,beaver.comp.io.SrcReader)' of type 'beaver.comp.util.Log'
  - [26.329921][Remove Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.340124][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.316315][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [26.313284][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.305631][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.291497][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.276192][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [26.252634][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.110716][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.103063][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [26.087759][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.084358][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.077760][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.072839][Inline Method] beaver.spec.ast.Declaration$PackageName.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$PackageName.accept(beaver.spec.ast.TreeWalker)
  - [26.060054][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.044749][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [26.037097][Increase Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [26.019107][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.014187][Inline Method] beaver.spec.ast.Declaration$Implements.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Implements.accept(beaver.spec.ast.TreeWalker)
  - [25.998883][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [25.983578][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [25.972353][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [25.964701][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [25.961640][Increase Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [25.951437][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [25.936132][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [25.931760][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.929847][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.878443][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of type 'beaver.spec.Production$2'
====== Run Result ======

* Name: Beaver|ABC|T50|P20|I7500
  * Run Info: Artificial Bee Colony. Population Size: 20, Max Trials: 50, Iterations: 7500.
  * Time taken: 532.09 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 300828

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.652428
  * Possible Actions: 590
  * Applied Actions: 530
  * Num Types: 94
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.0202
    * NOC: 0.4787
    * numInterf: 0.0000
    * abstractness: 0.1113
    * packagenesting: 1.5000
    * getters: 0.3404
    * NumAssEl_ssc: 0.0000
    * numOps: 4.8085
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0213
    * staticness: 0.1866
    * numCls: 11.7500
    * numFields: 3.2021
    * NumDesc: 1.1170
    * numOpsCls: 56.5000
    * iC_Par: 2.6489
    * eC_Par: 3.4043
    * Dep_In: 5.9574
    * avrgMethodVisibility: 1.7714
    * Dep_Out: 5.6702
    * setters: 0.1383
    * iFImpl: 0.0000
    * eC_Attr: 1.0000
    * nesting: 0.6277
    * numConstants: 0.8936
    * NumAnc: 1.1170

* Applied Actions:
  - [29.014483][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [29.010906][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [29.021900][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [29.008590][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [29.010944][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.988957][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.985556][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.965527][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [28.964070][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.960669][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.962280][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [28.965207][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [28.960834][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.925603][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [28.929004][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [28.932596][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.925632][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.924102][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.922826][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [28.922826][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [28.900864][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [28.882383][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [28.854617][Freeze Method] Convert 'initStack()' of 'beaver.Parser$Simulator' to static 
  - [28.834588][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [28.795728][Instantiate Method] Move static method 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.718655][Introduce Factory] for beaver.spec.ast.Declaration$Error.<init>()
  - [28.698627][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [28.680146][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [28.678616][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.650850][Freeze Method] Convert 'shift(short)' of 'beaver.Parser$Simulator' to static 
  - [28.573777][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [28.568573][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [28.565172][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.540722][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [28.530598][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.527246][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [28.522874][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.437893][Introduce Factory] for beaver.Parser$Exception.<init>(java.lang.String)
  - [28.413443][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to static 
  - [28.404624][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [28.403140][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.396543][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.392171][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.390713][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.389968][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.374663][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [28.373825][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.370424][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.366051][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [28.300089][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [28.298559][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.295612][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [28.214011][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [28.198707][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [28.131626][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.116322][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [28.106119][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [28.090814][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [28.087413][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.079313][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [28.064008][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [28.061629][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [28.060018][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.058536][Freeze Method] Convert 'getTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [28.057417][Move Down Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [28.054816][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.051415][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [28.036110][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [28.029988][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.028288][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.018085][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [28.013712][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.012011][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.996707][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.970813][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [27.969753][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [27.968576][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.901496][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.901296][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.893643][Increase Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [27.887522][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.884121][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.877413][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.870705][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.869004][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.864631][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.862707][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.859590][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [27.855764][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.852363][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.848537][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.845136][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.841310][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.831107][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PACKAGE'
  - [27.819927][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.797566][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.789914][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PRIVATE'
  - [27.782262][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.766957][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [27.763556][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.760155][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.755054][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.753353][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.738049][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.731927][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.728526][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.720873][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [27.707457][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.707317][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [27.709017][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [27.793861][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.801513][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [27.803313][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.804760][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [27.821251][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [27.831903][Inline Method] beaver.Parser$Simulator.initStack(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [27.836494][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [27.828972][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [27.830088][Introduce Factory] for beaver.Symbol.<init>()
  - [27.841081][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.850455][Freeze Method] Convert 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to static 
  - [27.857052][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [27.853651][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.870141][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.885446][Decrease Method Security] 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PACKAGE'
  - [27.898302][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [27.921603][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to static 
  - [27.925004][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.932011][Move Down Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Reduce'
  - [27.901184][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.885880][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [27.882638][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.877845][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.861355][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [27.859169][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [27.857354][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken(beaver.Parser$TokenStream)
  - [27.856079][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.845679][Move Up Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [27.839083][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.837808][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.824841][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.823141][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.818768][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.796781][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.781476][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.750650][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.742998][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [27.741722][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.740022][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.729819][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.723697][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.721996][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.718448][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [27.678701][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.State'
  - [27.674329][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [27.669696][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.666913][Increase Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.662541][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.577791][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.562486][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.559790][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.553669][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.551968][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.547595][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [27.537392][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.537345][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [27.522040][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.510860][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [27.505821][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [27.501448][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.499647][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.499155][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [27.494782][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.484579][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PRIVATE'
  - [27.482878][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.467574][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.452269][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [27.385189][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.377536][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.343996][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [27.337288][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.270208][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.264086][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.259713][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [27.237353][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.236894][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action'
  - [27.221590][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.219789][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.215416][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.200112][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.184807][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [27.169503][Increase Method Security] 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PRIVATE'
  - [27.167802][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.161680][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.151477][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [27.147656][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.147421][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.146177][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [27.135973][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [27.134443][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.134443][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.151213][Decrease Field Security] 'txt' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [27.165754][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.187341][Remove Method] 'scannerError(beaver.Scanner$Exception)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [27.189751][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.197489][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.204197][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [27.197489][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [27.201640][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [27.202507][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [27.232772][Freeze Method] Convert 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to static 
  - [27.234958][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [27.273839][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.run.Options'
  - [27.273839][Make Class Final] beaver.comp.Action$Reduce
  - [27.290609][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.263216][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [27.250430][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [27.272932][Inline Method] beaver.spec.ast.Declaration$Error.visit(beaver.spec.GrammarBuilder) into beaver.spec.ast.Declaration$Error.accept(beaver.spec.ast.TreeWalker)
  - [27.277084][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [27.300385][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser$Simulator' to static 
  - [27.294242][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [27.290510][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [27.273543][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.271842][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.269388][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.264511][Inline Method] beaver.Parser$Simulator.shift(short,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [27.231321][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [27.212101][Remove Method] 'parseOptions(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [27.208334][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.204933][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.176787][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.175087][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.159782][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [27.144477][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.087916][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.081573][Move Method] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.077117][Move Down Method] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Reduce'
  - [27.073112][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.069734][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.050084][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.040004][Inline Method] beaver.Parser$Simulator.reduce(int,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [27.024699][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.017450][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [27.012225][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [27.007674][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.996301][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [26.968681][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [26.958478][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [26.943174][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.932971][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [26.923223][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.907918][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.900593][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.886436][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.903136][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [26.908530][Freeze Method] Convert 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.908530][Make Class Final] beaver.comp.ParsingTables
  - [26.931675][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.934859][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.999943][Freeze Method] Convert 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to static 
  - [27.006950][Move Down Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Shift'
  - [27.030251][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [27.033312][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [27.038414][Decrease Method Security] 'createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [27.045357][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.048541][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.174762][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [27.183292][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.191161][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [27.199691][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.199691][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.241562][Freeze Method] Convert 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to static 
  - [27.234739][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.234739][Make Class Non-Final] beaver.ParsingTables
  - [27.220473][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [27.180668][Move Up Field] 'code' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [27.179214][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.172391][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.172224][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.149478][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [27.147106][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [27.131802][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.128460][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action'
  - [27.120808][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.092662][Make Class Abstract] beaver.comp.Action
  - [26.965403][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.894142][Remove Method] 'printUsage()' of type 'beaver.comp.run.Make'
  - [26.859425][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.867162][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.872710][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [26.890069][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.893253][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.897626][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.898155][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [26.904902][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [26.928046][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.929661][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.952806][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.956117][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [26.959177][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.973806][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [26.976867][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.969924][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.977661][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.012378][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [27.056037][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [27.057737][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [27.080882][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [27.065698][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [27.065665][Introduce Factory] for beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [27.064590][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [27.056938][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.052565][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.046443][Increase Method Security] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to 'PRIVATE'
  - [27.037756][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [27.022451][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.020837][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.013893][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.889281][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.865723][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.840987][Move Up Field] 'name' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.805650][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [26.815024][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.816937][Decrease Method Security] 'getTerminals(beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.809870][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.817608][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.882692][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to static 
  - [26.889759][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.892542][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.909242][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [26.916309][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.926512][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PACKAGE'
  - [26.929696][Freeze Method] Convert 'yycharat(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.934346][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [26.941413][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.941413][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.946808][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [26.948451][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.967111][Freeze Method] Convert 'hasCollisions()' of 'beaver.comp.ParsingTables' to static 
  - [26.959458][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.966526][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.974178][Decrease Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.958873][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.822628][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.798642][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.797018][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [26.789365][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.807355][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.813866][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.821518][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [26.823872][Decrease Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.837954][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.837954][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [26.868220][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [26.874341][Decrease Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.876254][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.878609][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.902595][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.910333][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.909076][Remove Method] 'createbeaver.spec.parser.GrammarScanner()' of type 'beaver.spec.parser.GrammarScanner'
  - [26.924380][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.928020][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.945773][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [26.963763][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [26.987064][Freeze Method] Convert 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to static 
  - [26.990465][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.042663][Inline Method] beaver.spec.ast.Declaration$Error.<init>() into beaver.spec.ast.Declaration$Error.createbeaver.spec.ast.Declaration$Error()
  - [27.040989][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.023000][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [27.009829][Move Method] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [27.005457][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.987467][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.983094][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.981311][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.970886][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.966514][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.963944][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.963430][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.833212][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.828840][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.827961][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.821839][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.803596][Inline Method] beaver.comp.ParsingTables.hasCollisions(beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.736888][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of type 'beaver.comp.Action$List$1'
  - [26.732515][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.747820][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.755851][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [26.779152][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.780857][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.796161][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [26.807083][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [26.816457][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [26.818643][Decrease Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.822329][Move Method] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [26.830582][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.867227][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [26.867227][Make Class Final] beaver.comp.Configuration$Set
  - [26.881886][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.900545][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [26.903585][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [26.926887][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [26.931619][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder' to static 
  - [26.938014][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.945343][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.968644][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.953340][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.951635][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.943983][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.937576][Inline Method] beaver.comp.State.findLookaheads(beaver.comp.State) into beaver.comp.State.findLookaheads()
  - [26.929924][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.912220][Move Method] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.909370][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.881463][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.879550][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.872354][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.836375][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [26.821983][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.814331][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.799026][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.794654][Increase Method Security] 'createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [26.787001][Increase Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [26.771089][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.747480][Move Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.729158][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.730803][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [26.735534][Freeze Method] Convert 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [26.785941][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [26.804264][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.811916][Decrease Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.809584][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [26.910247][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [26.908085][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [26.915415][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.918852][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.926716][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.938931][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.981302][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [26.986110][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [26.987814][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.995143][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.997999][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [27.008089][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [27.013591][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [27.031914][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.725257][Remove Class] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.721819][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.717400][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.710070][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.717200][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [26.724329][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.733639][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [26.735343][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.742672][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PUBLIC'
  - [26.747092][Decrease Method Security] 'makeDescription(java.lang.String)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [26.748797][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.757958][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.760021][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.778881][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [26.815951][Move Method] 'missingTokenInserted(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.852597][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.858784][Decrease Method Security] 'scannerError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Scanner$Exception' to 'PROTECTED'
  - [26.866519][Decrease Method Security] 'missingTokenInserted(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.873648][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.879836][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.882643][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [26.882643][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [26.893683][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [26.895387][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.879906][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.878202][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.878196][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [26.853961][Move Method] 'missingTokenInserted(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.851747][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.851612][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [26.851485][Introduce Factory] for beaver.Symbol.<init>(short)
  - [26.846329][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.836016][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.825703][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PRIVATE'
  - [26.817969][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.811781][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.808548][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.804128][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.799708][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.792379][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.786192][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.785595][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.760387][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.754200][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.749780][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.713134][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.688704][Increase Field Security] 'code' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.686397][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.681241][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.695633][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.699089][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [26.699089][Make Class Final] beaver.comp.State$Factory
  - [26.706285][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.713481][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.722956][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [26.726050][Decrease Method Security] 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.727824][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [26.763803][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.769256][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [26.771418][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration$1) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration$1)
  - [26.777605][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.777605][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [26.780184][Decrease Method Security] 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.756197][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.756197][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [26.770589][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.773402][Decrease Method Security] 'writeReduceActionCode(java.io.Writer)' of 'beaver.spec.Production' to 'PACKAGE'
  - [26.779589][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.782917][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.770488][Remove Method] 'makeDescription(java.lang.String)' of type 'beaver.comp.Action$Reduce'
  - [26.764300][Increase Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.762596][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.760892][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.758313][Increase Method Security] 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.754968][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.754162][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.741947][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.709743][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.703555][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.696226][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.694598][Move Method] 'countReferencedSymbols(beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Production$RHS' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [26.686863][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.679572][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [26.672242][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.667086][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.652428][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
