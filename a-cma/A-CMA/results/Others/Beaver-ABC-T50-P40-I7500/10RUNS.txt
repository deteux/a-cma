====== Run Result ======

* Name: Beaver|ABC|T50|P40|I7500
  * Run Info: Artificial Bee Colony. Population Size: 40, Max Trials: 50, Iterations: 7500.
  * Time taken: 1103.50 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 602301

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.290797
  * Possible Actions: 631
  * Applied Actions: 451
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9926
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3579
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7684
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.1533
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 56.6250
    * iC_Par: 2.6526
    * eC_Par: 3.2526
    * Dep_In: 5.7053
    * avrgMethodVisibility: 1.7293
    * Dep_Out: 5.6526
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [29.006831][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [28.987066][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.989252][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [28.924371][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [28.896605][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to static 
  - [28.883859][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [28.844487][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [28.853756][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [28.841465][Freeze Method] Convert 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [28.830279][Freeze Method] Convert 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.851906][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [28.839160][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [28.840960][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [28.847449][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.849249][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [28.819898][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.832874][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [28.828502][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.825101][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.785728][Freeze Method] Convert 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to static 
  - [28.753288][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.753177][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [28.709962][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [28.685512][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [28.676244][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [28.609374][Introduce Factory] for beaver.comp.util.Log$Record.<init>(int,int,java.lang.String)
  - [28.594069][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [28.592539][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.588166][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.586636][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.521755][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.503895][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [28.500347][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [28.483132][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.387465][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.run.Options'
  - [28.367437][Freeze Method] Convert 'readToken()' of 'beaver.Parser$TokenStream' to static 
  - [28.347408][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [28.340445][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.325943][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [28.319821][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.301340][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [28.262480][Instantiate Method] Move static method 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.245608][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [28.243093][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [28.178212][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.162908][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [28.159536][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [28.158006][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.151518][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.146416][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.144886][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.138398][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.134997][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.131596][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.130065][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.121437][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [28.114949][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.113338][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.111727][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.109172][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [28.093868][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [28.088766][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.057940][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [28.056329][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.050207][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.046806][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [28.037537][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [28.006711][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.991406][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.958966][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.952844][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.939868][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.934766][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.932942][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.868061][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [27.866786][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.863725][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.811622][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.806520][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.804909][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.801393][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [27.799782][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.796381][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.730419][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.727018][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.711713][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.705117][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.698995][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.685803][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [27.680701][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.679721][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.651575][Make Class Abstract] beaver.comp.Action
  - [27.649964][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.643368][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.642902][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.641833][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.run.Options'
  - [27.639019][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.638457][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.616470][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.606267][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PACKAGE'
  - [27.592236][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.585640][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.570335][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.568461][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.566063][Freeze Method] Convert 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to static 
  - [27.548570][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [27.545244][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.540871][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.539540][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.533516][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [27.544437][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [27.548077][Freeze Method] Convert 'getTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [27.559070][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [27.575770][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [27.539187][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.540888][Decrease Method Security] 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.551881][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [27.562803][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [27.562803][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.572226][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [27.581366][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [27.583067][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [27.589663][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [27.587962][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.591363][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [27.593064][Decrease Method Security] 'writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.594345][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [27.471990][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.470077][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.477814][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.472713][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.457408][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.451286][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.444578][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.429274][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.427573][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.422973][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [27.419431][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [27.417381][Move Down Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.411649][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [27.401446][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [27.399645][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.393304][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [27.392381][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Shift'
  - [27.381300][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.365996][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.364083][Increase Method Security] 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [27.360358][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [27.358421][Move Down Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.356508][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.348486][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [27.333181][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [27.323598][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.314016][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.308914][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.304543][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [27.288816][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [27.288484][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [27.284550][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.276990][Move Method] 'compile(beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [27.261685][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [27.254526][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [27.277828][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [27.283950][Decrease Method Security] 'makeDescription(beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [27.273747][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.262011][Move Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.278711][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [27.280271][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.270068][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [27.292428][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.286306][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.305863][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [27.309264][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [27.318847][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PUBLIC'
  - [27.332081][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [27.332836][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [27.332836][Make Class Final] beaver.comp.Configuration
  - [27.340944][Freeze Method] Convert 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [27.351657][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.374018][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [27.380655][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [27.381212][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [27.314132][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.308010][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.301888][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.291685][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [27.285091][Inline Method] beaver.Parser$TokenStream.readToken(beaver.Parser$TokenStream) into beaver.Parser$TokenStream.nextToken()
  - [27.279332][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [27.272044][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.267867][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.264806][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.260344][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.243037][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.240682][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.240115][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.211969][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.201766][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.191563][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.181360][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.171157][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.160953][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [27.159253][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.153131][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.151218][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.146845][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.131541][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.124833][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.098939][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [27.088736][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.073431][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.068329][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.051622][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.043969][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.003203][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.State'
  - [27.007354][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [27.010755][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [27.016877][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [27.014049][Move Method] 'makeDescription(beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [27.024252][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.024174][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [27.026360][Decrease Method Security] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.026360][Make Class Final] beaver.comp.Action$Accept
  - [27.016157][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PACKAGE'
  - [27.029013][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [27.032074][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [27.062340][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [27.067734][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [27.091606][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [27.095757][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [27.098818][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [27.104940][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [27.105178][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.228263][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [27.236371][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [27.234458][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.223464][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [27.216868][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.212084][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.146122][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.143767][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.133564][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [27.129191][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.004690][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.989386][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.984284][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.965480][Inline Method] beaver.Parser$Simulator.increaseStackCapacity(beaver.Parser$Simulator) into beaver.Parser$Simulator.shift(short)
  - [26.955277][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.948569][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.933264][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [26.931211][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.921008][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.919383][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [26.909180][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [26.904079][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.901724][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.893974][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.892061][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.826099][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [26.818447][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.816092][Increase Method Security] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.810991][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.789003][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.787090][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.782195][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.779840][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.776014][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.770913][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.760709][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Error' to 'PACKAGE'
  - [26.751349][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [26.748288][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.732984][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.731071][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.725824][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.714831][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.712025][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [26.706721][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.700780][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.634817][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.628696][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [26.625912][Instantiate Method] Move static method 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[],beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [26.623361][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.617239][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.613413][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.613246][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.597942][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.582637][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.574985][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.568839][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [26.566926][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.563326][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.561413][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.546108][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.550260][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.559634][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [26.570555][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [26.574707][Freeze Method] Convert 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.568110][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.578846][Instantiate Method] Move static method 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.592038][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.602241][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [26.617538][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [26.637936][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [26.639849][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.617862][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.621688][Decrease Method Security] 'makeDescription(java.lang.String,beaver.comp.Action$Shift)' of 'beaver.comp.State' to 'PROTECTED'
  - [26.628284][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.632435][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.635836][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.620532][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.624683][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.647985][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.649555][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.647642][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.625655][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.625148][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.617496][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [26.604266][Remove Method] 'printUsage()' of type 'beaver.comp.run.Make'
  - [26.603802][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [26.603381][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.598279][Increase Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PRIVATE'
  - [26.588076][Increase Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.586163][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.584250][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.579877][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.578038][Remove Method] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.554864][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.547212][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.530053][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [26.519850][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [26.512940][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [26.506819][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.502446][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.492775][Move Method] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ListType' to its parameter type 'beaver.spec.GrammarBuilder'
  - [26.478001][Instantiate Method] Move static method 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.467798][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.465758][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.461932][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.461932][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.503436][Inline Method] beaver.spec.ast.Declaration$Error.visit(beaver.spec.GrammarBuilder) into beaver.spec.ast.Declaration$Error.accept(beaver.spec.ast.TreeWalker)
  - [26.513639][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [26.520236][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.510033][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.540335][Instantiate Method] Move static method 'renumberSymbols(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.ParsingTables'
  - [26.556825][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [26.573316][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.580968][Decrease Method Security] 'shift(short)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.588021][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.595074][Freeze Method] Convert 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.599225][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.608648][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [26.674611][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [26.684034][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [26.708914][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [26.767880][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.777298][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [26.779849][Decrease Method Security] 'encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.791455][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.745681][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.727331][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.718394][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [26.657703][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.648926][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.641274][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.636901][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.627478][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [26.622595][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.561694][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.552111][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.420708][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.418157][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.413676][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [26.396617][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.394576][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.385044][Remove Method] 'compile()' of type 'beaver.comp.io.SrcReader'
  - [26.374768][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.376569][Decrease Method Security] 'getNonTerminals(beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.383524][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [26.383524][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.397172][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.419917][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.423318][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.430142][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.431943][Decrease Method Security] 'getTerminals(beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.451348][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.474093][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [26.487741][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.497489][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [26.505141][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [26.505141][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [26.517997][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [26.537558][Remove Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.552180][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.575865][Introduce Factory] for beaver.spec.Grammar$Exception.<init>(java.lang.String)
  - [26.578051][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [26.602733][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.568615][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.560962][Increase Method Security] 'shift(short)' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.557136][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.488899][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.466154][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.441758][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [26.434106][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.430280][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.428094][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.427256][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.423430][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.389312][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.386761][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.383487][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.360742][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.360006][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [26.366128][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.369529][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [26.383177][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.384841][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.394589][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [26.397990][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.401174][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [26.404358][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.407542][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [26.410603][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [26.427656][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.439029][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.469295][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [26.478669][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.480333][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.485529][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [26.486032][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [26.493505][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int,beaver.comp.util.BitSet)
  - [26.497878][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.420380][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.418306][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.408103][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PACKAGE'
  - [26.397900][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PRIVATE'
  - [26.394073][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.389701][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.386640][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.372753][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.371060][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.354879][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.343100][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.335448][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.321313][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.314034][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.307912][Increase Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [26.304511][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.302598][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.300412][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.296586][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.295170][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [26.290797][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
====== Run Result ======

* Name: Beaver|ABC|T50|P40|I7500
  * Run Info: Artificial Bee Colony. Population Size: 40, Max Trials: 50, Iterations: 7500.
  * Time taken: 1092.46 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 601964

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.774470
  * Possible Actions: 642
  * Applied Actions: 575
  * Num Types: 93
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9199
    * NOC: 0.4731
    * numInterf: 0.0000
    * abstractness: 0.1118
    * packagenesting: 1.5000
    * getters: 0.3548
    * NumAssEl_ssc: 0.0000
    * numOps: 4.9892
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0430
    * staticness: 0.1863
    * numCls: 11.6250
    * numFields: 3.2366
    * NumDesc: 1.1075
    * numOpsCls: 58.0000
    * iC_Par: 2.6452
    * eC_Par: 3.3011
    * Dep_In: 6.0000
    * avrgMethodVisibility: 1.6788
    * Dep_Out: 5.6882
    * setters: 0.1398
    * iFImpl: 0.0000
    * eC_Attr: 1.0108
    * nesting: 0.6022
    * numConstants: 0.9032
    * NumAnc: 1.1075

* Applied Actions:
  - [28.930681][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [29.011231][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [29.013417][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [29.035405][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [29.037205][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [29.035675][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [29.057662][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [29.059236][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.State'
  - [29.070229][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [29.074836][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [29.081433][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [29.089085][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [29.090542][Decrease Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [29.074872][Instantiate Method] Move static method 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [29.056392][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [29.062988][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [29.073981][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [29.077042][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [29.051292][Introduce Factory] for beaver.comp.Action$Type.<init>(int,java.lang.String)
  - [29.018239][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [28.985830][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [28.974313][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.952350][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [28.950820][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.922674][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [28.891529][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [28.878783][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [28.848417][Instantiate Method] Move static method 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.772266][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [28.765797][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [28.755672][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.741171][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [28.727913][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [28.681224][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [28.659261][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [28.654622][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [28.615250][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to static 
  - [28.541059][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to static 
  - [28.527749][Introduce Factory] for beaver.Symbol.<init>(short)
  - [28.518996][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [28.512399][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.500516][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.487258][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [28.477054][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PACKAGE'
  - [28.466637][Instantiate Method] Move static method 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [28.450477][Freeze Method] Convert 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [28.449602][Freeze Method] Convert 'getTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [28.447991][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.432686][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [28.410699][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.405597][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.402575][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.395978][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.382786][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [28.381175][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.378252][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [28.374851][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.368255][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.368067][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.361471][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.355349][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.325509][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.310205][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [28.279378][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [28.275977][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [28.272321][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [28.270710][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.248723][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [28.247112][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.242739][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.236429][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [28.232057][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.230356][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.228656][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.219853][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [28.218053][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.202748][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [28.200947][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.199247][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.196301][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [28.193161][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.188788][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [28.187088][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.121126][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.090299][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [28.087460][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [28.065472][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [28.063672][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.063571][Freeze Method] Convert 'yycharat(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.061771][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.052347][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [28.050547][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.040344][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [28.032692][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [28.022489][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [28.020688][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.017287][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.013817][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [28.010756][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.995452][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.994176][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.989804][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.988003][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.981881][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.953460][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [27.950399][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.948486][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.947210][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.939558][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.874677][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.872007][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.862738][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.859337][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.844033][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.834730][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [27.828608][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.763727][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.759354][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.737727][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [27.735814][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.726504][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [27.723103][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.658222][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.654141][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [27.649039][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.638836][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PACKAGE'
  - [27.636923][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.635010][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.624807][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PRIVATE'
  - [27.619706][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.616305][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.608652][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [27.584785][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.520951][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.505646][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.490342][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.485969][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.478317][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.473215][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.468842][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.453538][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [27.449165][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.446103][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [27.445462][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.430157][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.414852][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.410480][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.401361][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.396988][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.381683][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.374031][Increase Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [27.357157][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.354802][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.344599][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [27.329294][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.326234][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.324951][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.323038][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.321562][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [27.257727][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.254335][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.239031][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [27.238010][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [27.236589][Move Down Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.233460][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.231546][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.228145][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.226232][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.224366][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [27.224034][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [27.222121][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.219436][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.217134][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.201830][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.195446][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.191552][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action'
  - [27.188491][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.182107][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.177154][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.175241][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.174978][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.173933][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.172020][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.169025][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.167717][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.166293][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)
  - [27.150988][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.031828][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.030437][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.997996][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.969850][Make Class Abstract] beaver.comp.Action
  - [26.959647][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.948834][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.933529][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.987408][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of type 'beaver.comp.Action$Reduce'
  - [26.998329][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [26.998329][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.990028][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [27.002689][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.007791][Move Method] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [27.072875][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to static 
  - [27.089095][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [27.105315][Decrease Field Security] 'txt' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [27.123974][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [27.130096][Decrease Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.139365][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [27.139889][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [27.143528][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder' to static 
  - [27.147354][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [27.148863][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.159677][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [27.198557][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.run.Options'
  - [27.200066][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.200066][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.184761][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.162523][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [27.147219][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.136405][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [27.128917][Move Method] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.118714][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [27.116801][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.100581][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [27.097393][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.091271][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.075966][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [27.066562][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.056359][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [27.049871][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.043383][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.043168][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.038795][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.034422][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.024219][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.008915][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [26.988222][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [26.978953][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [26.977329][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [26.952105][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.947732][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.933879][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [26.927758][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.919526][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.795777][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.769883][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [26.766822][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.760700][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.759764][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.753356][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.738110][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.735050][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.683646][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of type 'beaver.spec.Production$1'
  - [26.687047][Decrease Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.671742][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.678489][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [26.683884][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [26.686435][Decrease Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.718875][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.721936][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.812567][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [26.815379][Decrease Method Security] 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.817313][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [26.814219][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.830440][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.846660][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.873458][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [26.857989][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.859533][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.873611][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.889831][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [26.902478][Introduce Factory] for beaver.Parser$Events.<init>()
  - [26.912001][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [26.894592][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.892658][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.586672][Remove Class] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [26.585780][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.581361][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.579979][Move Method] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.578046][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.574952][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.572683][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [26.570750][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.567656][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.563236][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.555502][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.545189][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [26.534876][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [26.531500][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.523765][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.508296][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [26.492827][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.492450][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.484622][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [26.474309][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.462561][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.457405][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.446813][Instantiate Method] Move static method 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.439079][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.422858][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [26.417702][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.415768][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.414186][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.381746][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [26.378308][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.374749][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.370882][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [26.355412][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.352242][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.410411][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.412039][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [26.411003][Remove Method] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Reduce'
  - [26.412032][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [26.421508][Freeze Method] Convert 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to static 
  - [26.423869][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.413556][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [26.534895][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.545208][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PROTECTED'
  - [26.553187][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.601028][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [26.613795][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.634275][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.649241][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.createbeaver.comp.Action$Type()
  - [26.688178][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.697862][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [26.704050][Decrease Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.709206][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.709206][Make Class Final] beaver.comp.ParsingTables
  - [26.718326][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [26.702338][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [26.655090][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.604761][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [26.600988][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.596568][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.594209][Introduce Factory] for beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol)
  - [26.588022][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.580287][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.576263][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.556691][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.548711][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [26.533242][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [26.522929][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.491012][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [26.427178][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.425459][Increase Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.386522][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.385959][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.382865][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.377709][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [26.255158][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.253225][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.167412][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.151943][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [26.142674][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [26.127205][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.130299][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.135292][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [26.161979][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.165073][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.160638][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.185514][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.193795][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.203271][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [26.217174][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.218756][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.226952][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.222532][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.219438][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.229751][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [26.232845][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.246982][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [26.256458][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [26.378908][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.383328][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition$Element' to 'PUBLIC'
  - [26.403192][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.392879][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.382566][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.378146][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.369762][Instantiate Method] Move static method 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.359449][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.357892][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.357860][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [26.325943][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [26.295037][Remove Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [26.284724][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.252807][Increase Field Security] 'prec' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [26.219855][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.217922][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.206770][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.167760][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.162604][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.098770][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PRIVATE'
  - [26.089823][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.088103][Move Method] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [25.982916][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [25.969939][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [25.965520][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.963586][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.965406][Decrease Method Security] 'getTerminals(beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [25.966988][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.979964][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.044845][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [26.057822][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.059404][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.072380][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.088600][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.133264][Inline Method] beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser(beaver.comp.util.Log)
  - [26.154891][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.157985][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.159869][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [26.184585][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [26.195399][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [26.204874][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [26.211062][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [26.214740][Freeze Method] Convert 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [26.218178][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.231154][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.237342][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [26.215715][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.150834][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PRIVATE'
  - [26.148900][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.135857][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [26.070976][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PROTECTED'
  - [26.066557][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.040295][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [26.038362][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.034924][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.032990][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.020014][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.019658][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.006682][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [25.996369][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PACKAGE'
  - [25.980149][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [25.975729][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.974010][Increase Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [25.877120][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [25.892589][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [25.897009][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [25.920561][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [25.962884][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to static 
  - [25.982405][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [25.986602][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [25.990977][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [25.992797][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [25.995684][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [25.995793][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [26.000949][Decrease Method Security] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.009194][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.025685][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.058666][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.168337][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [25.867338][Remove Class] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [25.963282][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [25.966537][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [25.986016][Instantiate Method] Move static method 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [25.985642][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.972666][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.920093][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [25.904455][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [25.902804][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [25.900504][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [25.891848][Instantiate Method] Move static method 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [25.883603][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [25.879135][Increase Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [25.846154][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [25.838335][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [25.833868][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.823443][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [25.847825][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [25.854253][Inline Method] beaver.spec.Production$RHS.<init>() into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS()
  - [25.863062][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [25.873487][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.002214][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.007691][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.011092][Introduce Factory] for beaver.comp.run.AntTask.<init>()
  - [26.032719][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.041988][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [26.054964][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.058134][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)
  - [26.063372][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.050396][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.039971][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.075869][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.062468][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [26.066190][Introduce Factory] for beaver.comp.io.SrcReader.<init>(java.io.File)
  - [26.076029][Remove Method] 'visit(beaver.spec.ast.Declaration$Imports)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.086842][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.115816][Move Method] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)' of 'beaver.spec.Production' to its parameter type 'beaver.spec.NonTerminal'
  - [26.072777][Move Down Field] 'type' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [26.058144][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.050325][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.046850][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [25.950838][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [25.928850][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [25.927393][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [25.919574][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [25.907502][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [25.896508][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [25.896502][Introduce Factory] for beaver.Symbol.<init>()
  - [25.892034][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [25.868706][Instantiate Method] Move static method 'createbeaver.spec.Production(beaver.spec.Production$RHS,beaver.spec.Production)' of 'beaver.spec.NonTerminal' to its parameter type 'beaver.spec.Production$RHS'
  - [25.868696][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [25.858271][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [25.858257][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [25.853790][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.827405][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [25.817981][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [25.807557][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [25.803089][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.803072][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [25.800987][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.800968][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [25.811393][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PACKAGE'
  - [25.833118][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [25.854279][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration$1) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration$1)
  - [25.857754][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [25.865551][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [25.912501][Inline Method] beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Imports.createbeaver.spec.ast.Declaration$Imports(beaver.Symbol[])
  - [25.908033][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [25.955467][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to static 
  - [25.959377][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [25.965632][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [25.998613][Decrease Field Security] 'terminals' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [26.001740][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [26.008336][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.019496][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [26.030657][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [26.049722][Freeze Method] Convert 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to static 
  - [26.082703][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.118279][Freeze Method] Convert 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$LeftAssoc' to static 
  - [26.117065][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [26.140741][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.120780][Move Method] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$LeftAssoc' to its parameter type 'beaver.spec.GrammarBuilder'
  - [26.114525][Increase Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [26.086941][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.076516][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [25.976845][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [25.974760][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [25.972374][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [25.938834][Increase Field Security] 'type' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [25.922573][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [25.920187][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [25.886646][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [25.875466][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [25.799441][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [25.796850][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [25.799256][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [25.816315][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [25.826551][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [25.830270][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [25.831747][Move Method] 'createbeaver.spec.Production(beaver.spec.Production)' of 'beaver.spec.Production$RHS' to its parameter type 'beaver.spec.Production'
  - [25.837297][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [25.840552][Freeze Method] Convert 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [25.842637][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.849460][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [25.855715][Decrease Method Security] 'findOffset(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [25.874781][Freeze Method] Convert 'size()' of 'beaver.comp.util.Log$Record$List' to static 
  - [25.882600][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PUBLIC'
  - [25.891129][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [25.918118][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [25.949042][Freeze Method] Convert 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [25.962946][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [25.965180][Decrease Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [25.974928][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [25.985353][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [26.008098][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [25.872036][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [25.861611][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [25.844253][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [25.840927][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [25.840702][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [25.838096][Increase Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [25.814951][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [25.804115][Inline Method] beaver.spec.ast.Declaration$Error.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Error.accept(beaver.spec.ast.TreeWalker)
  - [25.799647][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.782288][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [25.774470][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
====== Run Result ======

* Name: Beaver|ABC|T50|P40|I7500
  * Run Info: Artificial Bee Colony. Population Size: 40, Max Trials: 50, Iterations: 7500.
  * Time taken: 1056.03 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 601322

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.037898
  * Possible Actions: 700
  * Applied Actions: 462
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9930
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1058
    * packagenesting: 1.5000
    * getters: 0.3579
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7684
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 2.9789
    * staticness: 0.1412
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 56.6250
    * iC_Par: 2.6526
    * eC_Par: 3.2211
    * Dep_In: 5.6105
    * avrgMethodVisibility: 1.6721
    * Dep_Out: 5.6316
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [28.993521][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [28.993521][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [29.015509][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [29.007380][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [28.994187][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [29.005181][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [29.008773][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [29.014895][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [28.999628][Freeze Method] Convert 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to static 
  - [28.993825][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.990424][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [29.006914][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [29.116316][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [29.116205][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [29.088059][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [29.089568][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [29.079212][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [29.074839][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [29.057624][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [29.039382][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [28.965191][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to static 
  - [28.945163][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [28.925135][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [28.909868][Freeze Method] Convert 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [28.899511][Freeze Method] Convert 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.883351][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.843979][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [28.793001][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [28.754141][Instantiate Method] Move static method 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.750740][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.745406][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.743949][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.742418][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.731448][Introduce Factory] for beaver.spec.ast.TreeWalker.<init>()
  - [28.711419][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [28.678366][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [28.664669][Instantiate Method] Move static method 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [28.628881][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [28.604431][Freeze Method] Convert 'get(int)' of 'beaver.comp.util.IntArray' to static 
  - [28.594483][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [28.577545][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [28.576088][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.571715][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.570257][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.563769][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.562312][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.546091][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [28.535888][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [28.471007][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [28.466635][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.460513][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.445208][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [28.429904][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [28.399008][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.391356][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [28.376051][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [28.372650][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.371193][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.306312][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [28.299823][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.295451][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [28.293993][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.292536][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.288163][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.272858][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [28.263503][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [28.257382][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [28.255851][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.254473][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [28.165560][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [28.163643][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [28.159270][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.128444][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [28.113139][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [28.106543][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.099947][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.017147][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [28.013321][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.007199][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PRIVATE'
  - [28.002827][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.001560][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [28.000029][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.999468][Freeze Method] Convert 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [27.977108][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.975329][Move Down Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.973392][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.969991][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.969516][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.964814][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.949509][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.947898][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.944099][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [27.938894][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.936433][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.927685][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [27.860605][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.860278][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.860117][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [27.856716][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.854803][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.850430][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.842778][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.840977][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.830774][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [27.824652][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.791112][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [27.774144][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.770743][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.742597][Make Class Abstract] beaver.comp.Action
  - [27.733014][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.731101][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.729188][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.728093][Move Down Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.726052][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.715849][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [27.713808][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.698504][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.690852][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [27.686479][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.671174][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.666801][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.599721][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.590138][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.579935][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PACKAGE'
  - [27.571270][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.569003][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.562929][Move Down Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [27.553346][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [27.550992][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.548637][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.533333][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.529932][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.526477][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.519769][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.497409][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [27.482104][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.459098][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.437110][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.421806][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.411603][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [27.407230][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.376404][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.373343][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.364870][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [27.362957][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.361043][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.353055][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [27.352339][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.351808][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [27.349008][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)
  - [27.346202][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [27.341829][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.339046][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.334254][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.332924][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.325271][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [27.309967][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.309345][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.307432][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.306070][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [27.305024][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.290058][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [27.274754][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [27.271693][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.268632][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.258429][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PACKAGE'
  - [27.254056][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.252139][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.238211][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.236846][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [27.234190][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [27.232277][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.166315][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.156112][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [27.154976][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.151575][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.148821][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.138618][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [27.105637][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.072656][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [27.068283][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [27.058080][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [27.051484][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.044888][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.041487][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.975524][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.971152][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.905189][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [26.901788][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.898387][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.883083][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.881170][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.848188][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.844787][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.829483][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.814178][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [26.812138][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.818734][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.821516][Decrease Method Security] 'canInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.826248][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.837170][Freeze Method] Convert 'readToken()' of 'beaver.Parser$TokenStream' to static 
  - [26.845278][Freeze Method] Convert 'hasCollisions()' of 'beaver.comp.ParsingTables' to static 
  - [26.846812][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.851913][Decrease Method Security] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.855314][Decrease Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.858953][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [26.879794][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [26.912775][Decrease Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.916176][Decrease Method Security] 'readToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.931480][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [26.947971][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.949772][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.953411][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.953411][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [26.957562][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [27.015503][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [27.016960][Decrease Method Security] 'zzUnpackAction(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.009308][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.986805][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [26.971500][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [26.963349][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.949192][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.940388][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.937594][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [26.927833][Inline Method] beaver.Parser$TokenStream.readToken(beaver.Parser$TokenStream) into beaver.Parser$TokenStream.nextToken(beaver.Parser$TokenStream)
  - [26.917630][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PRIVATE'
  - [26.911246][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.847412][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.832107][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [26.821904][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.810561][Move Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [26.804440][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.740605][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.725300][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.726436][Move Method] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.732819][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.745586][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.746708][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [26.752796][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.758191][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [26.764574][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.780533][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.782333][Decrease Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.784068][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.790451][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [26.794602][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.809945][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [26.799742][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [26.806126][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.818787][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.822188][Decrease Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.835044][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [26.851744][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [26.851744][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.848343][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.744949][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.734746][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [26.731004][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.726631][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.722103][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [26.719788][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [26.712135][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.710524][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.695220][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.693307][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.686819][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.684906][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.684491][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.669187][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.668718][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [26.667107][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.663181][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.535816][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.525613][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.519491][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.506686][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.494442][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.492529][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.480902][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.474780][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.470407][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.465306][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [26.455103][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [26.455094][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.450721][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.447392][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.437188][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.432087][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.415596][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.409000][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.393696][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [26.386043][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.383289][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.368452][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.365200][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.360827][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.354231][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.350701][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.340498][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.337292][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.327089][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.319437][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.312840][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.303079][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.286589][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.284676][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.280303][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.270100][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.262448][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.252245][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.246123][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.238953][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [26.229529][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [26.225157][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.222496][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.207192][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [26.202819][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.247130][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [26.268377][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.243664][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.251316][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.263267][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [26.265068][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.331030][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.340994][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [26.406078][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to static 
  - [26.439059][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.454402][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [26.456203][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.465626][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [26.492049][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [26.498209][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [26.526271][Inline Method] beaver.spec.ast.Declaration$ClassCode.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$ClassCode.accept(beaver.spec.ast.TreeWalker)
  - [26.539127][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [26.546577][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.551501][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [26.554284][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.552371][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.546249][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.539653][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.535997][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.532790][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.517486][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.512946][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [26.497641][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.487438][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [26.421476][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [26.417649][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.407446][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.405377][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.395174][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Error' to 'PACKAGE'
  - [26.392411][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.377107][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PROTECTED'
  - [26.373280][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.357976][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.356063][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.340758][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PACKAGE'
  - [26.336932][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.334461][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)
  - [26.331962][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.321759][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.317386][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.313013][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.293793][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.283590][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [26.279217][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.276521][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.261036][Remove Method] 'createbeaver.ParsingTables()' of type 'beaver.ParsingTables'
  - [26.209632][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of type 'beaver.spec.Production$1'
  - [26.207719][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.192415][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.189014][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.175627][Inline Method] beaver.comp.ParsingTables.hasCollisions(beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.171341][Inline Method] beaver.comp.State.findLookaheads(beaver.comp.State) into beaver.comp.State.findLookaheads()
  - [26.169428][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.162831][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.160918][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.150798][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [26.145455][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [26.141082][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.136709][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.132336][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.136709][Decrease Method Security] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.147703][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.148124][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.213208][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to static 
  - [26.232765][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [26.237137][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.238708][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.257367][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to static 
  - [26.272671][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.276823][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.292166][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [26.295992][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PACKAGE'
  - [26.306195][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [26.301822][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.353097][Inline Method] beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$Header.createbeaver.spec.ast.Declaration$Header(beaver.Symbol)
  - [26.373495][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [26.376278][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PROTECTED'
  - [26.384006][Instantiate Method] Move static method 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.399311][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PROTECTED'
  - [26.465273][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.432292][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [26.428891][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PRIVATE'
  - [26.418965][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [26.403660][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.337698][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [26.327495][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.312190][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PRIVATE'
  - [26.311807][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.309894][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.305521][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.244830][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.240458][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.225153][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PROTECTED'
  - [26.187932][Remove Method] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of type 'beaver.Action$1'
  - [26.185462][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.170158][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PACKAGE'
  - [26.159955][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.155582][Increase Method Security] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.154493][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.152580][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.137275][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [26.121970][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PACKAGE'
  - [26.120057][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.115685][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.117598][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.134522][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [26.136709][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [26.140535][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.142448][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [26.144527][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [26.151580][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [26.168070][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.169679][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.190766][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [26.196161][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [26.198347][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [26.200533][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PROTECTED'
  - [26.203365][Move Method] 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.207004][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [26.214656][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [26.225650][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.240955][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.269017][Inline Method] beaver.spec.ast.Declaration$Implements.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Implements.accept(beaver.spec.ast.TreeWalker)
  - [26.269017][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.267104][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.256901][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.254988][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.250615][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.242963][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.242601][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.240688][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.238711][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.223406][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.221493][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.089393][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.074088][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PRIVATE'
  - [26.057886][Inline Method] beaver.Parser$Simulator.increaseStackCapacity(beaver.Parser$Simulator) into beaver.Parser$Simulator.shift(short)
  - [26.055055][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.054668][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.037898][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
====== Run Result ======

* Name: Beaver|ABC|T50|P40|I7500
  * Run Info: Artificial Bee Colony. Population Size: 40, Max Trials: 50, Iterations: 7500.
  * Time taken: 1016.30 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 600821

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.286384
  * Possible Actions: 693
  * Applied Actions: 330
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.0711
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3474
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7579
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.1214
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 56.5000
    * iC_Par: 2.6526
    * eC_Par: 3.1053
    * Dep_In: 5.4316
    * avrgMethodVisibility: 1.7324
    * Dep_Out: 5.6526
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [29.008289][Decrease Method Security] 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [29.010202][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [29.026692][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [29.029753][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [29.028223][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.989363][Instantiate Method] Move static method 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.991717][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.987344][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.967316][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [28.893125][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to static 
  - [28.875910][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [28.760320][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [28.768566][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [28.773063][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [28.789554][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [28.798977][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [28.808400][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [28.808290][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [28.806482][Move Method] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [28.817475][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [28.761731][Introduce Factory] for beaver.comp.Action$Accept.<init>(beaver.spec.Grammar)
  - [28.729323][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [28.713767][Inline Method] beaver.comp.Action$Accept.<init>(beaver.spec.Grammar) into beaver.comp.Action$Accept.createbeaver.comp.Action$Accept(beaver.spec.Grammar)
  - [28.707171][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.656192][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [28.641691][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [28.641635][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.635514][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.621012][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [28.582456][Introduce Factory] for beaver.comp.io.SrcReader.<init>(java.io.File)
  - [28.572253][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [28.556949][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [28.541920][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [28.539113][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.537583][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.511998][Introduce Factory] for beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [28.507220][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [28.506800][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [28.503399][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.501869][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.493196][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [28.491666][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.475175][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [28.470073][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.468462][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.447910][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.446299][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.381418][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.316537][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [28.314926][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.250045][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [28.239842][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [28.233622][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [28.231709][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [28.230009][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.226607][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.211303][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [28.210952][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.200139][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [28.184834][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [28.183133][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.181770][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [28.175282][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.171881][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.170270][Increase Method Security] 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [28.168569][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.166958][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.163557][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.157436][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.129290][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [28.123168][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [28.119767][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.116366][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.101061][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [28.085757][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.082356][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.067051][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [28.051747][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [28.040933][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [28.025628][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.960748][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.956375][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.941070][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.925766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [27.924065][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.918228][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.915766][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.900461][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.885157][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.880784][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.876281][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.811401][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.796096][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.793086][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.785884][Move Down Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [27.782483][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.769507][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.754202][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [27.738898][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [27.737097][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.735822][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.734021][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.718717][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.716916][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.715116][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.707463][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.681202][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [27.679401][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.669198][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.659896][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [27.650713][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [27.640510][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.612364][Make Class Abstract] beaver.comp.Action
  - [27.609082][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.606019][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [27.596982][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [27.590860][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.586487][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.584301][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.580900][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.516019][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.514779][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [27.428777][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.426864][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.422753][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.412550][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [27.379569][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.362694][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.347390][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.345766][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [27.343411][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.328106][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [27.326193][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.315990][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PACKAGE'
  - [27.298135][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.282830][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.266348][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [27.264435][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.238541][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [27.238538][Introduce Factory] for beaver.Symbol.<init>()
  - [27.238414][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.205433][Increase Field Security] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to 'PROTECTED'
  - [27.203520][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.199147][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.196596][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.194683][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.191202][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [27.180999][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [27.170796][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.160593][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [27.158680][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.156767][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.123785][Increase Field Security] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [27.108481][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.107919][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.097716][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [27.087513][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [27.065526][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.032545][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.031153][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.030774][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.964812][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.933986][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [26.926334][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.924709][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.909405][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.901752][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.835790][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.825587][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.815384][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PRIVATE'
  - [26.813343][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.806747][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.791443][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.788892][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.795014][Decrease Method Security] 'reduce(int)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.803122][Freeze Method] Convert 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to static 
  - [26.811030][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [26.816087][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [26.819727][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [26.884811][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to static 
  - [26.943166][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.966468][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.966468][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.967634][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.973756][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.976539][Decrease Method Security] 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.978339][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.977436][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.973064][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.962860][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PRIVATE'
  - [26.973782][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [26.970058][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.034938][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [27.037000][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [27.032350][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [27.028625][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [27.024691][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.020513][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [27.017962][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.002658][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [27.000617][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.988990][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [26.931716][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.921513][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.911310][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [26.908249][Increase Method Security] 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.893287][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.888826][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.888732][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.887031][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.882659][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.882091][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [26.830264][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.828223][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.701049][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.696153][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.680849][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.675747][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.652606][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [26.647165][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.631860][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.626759][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.616556][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [26.608904][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [26.541823][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PRIVATE'
  - [26.534535][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.530124][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [26.526298][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.524258][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.519156][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.508953][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.493648][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.491848][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.488022][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.482920][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.475268][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.444442][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [26.437419][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.435084][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.453743][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.457382][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.459423][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [26.473070][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.474871][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.476912][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.479972][Decrease Method Security] 'hasCollisions()' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.486796][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.489857][Decrease Method Security] 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.498466][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [26.500267][Decrease Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.502817][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.506218][Decrease Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.517825][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.516024][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.523077][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.527809][Freeze Method] Convert 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.534861][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.544609][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [26.551349][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [26.547948][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.534901][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.532860][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.530820][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.523168][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.520508][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.516362][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [26.508710][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.506669][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.483495][Remove Method] 'parseOptions(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.412234][Remove Method] 'printUsage()' of type 'beaver.comp.run.Make'
  - [26.410193][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.394488][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.386836][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.372679][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.365027][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.360122][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.356721][Increase Method Security] 'hasCollisions()' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.346518][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.336770][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.329946][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.319743][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.317702][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.310050][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.302398][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.306224][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.308775][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.313876][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.315463][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.326836][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.332231][Freeze Method] Convert 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.339054][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.348480][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.350666][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [26.352707][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.364080][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.375001][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [26.379651][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [26.383290][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.396937][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.399124][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [26.433242][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.436303][Decrease Method Security] 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.442425][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.448415][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.446361][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.443811][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.437689][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.431567][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.420194][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.406547][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.404960][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.403926][Instantiate Method] Move static method 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[],beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [26.393723][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.391172][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.389259][Increase Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.337856][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of type 'beaver.comp.Action$List$1'
  - [26.335305][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.330203][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.325102][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.324195][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.319093][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.313992][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.312079][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.309018][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.304495][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.302454][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.294802][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.292251][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.290210][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.286384][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
====== Run Result ======

* Name: Beaver|ABC|T50|P40|I7500
  * Run Info: Artificial Bee Colony. Population Size: 40, Max Trials: 50, Iterations: 7500.
  * Time taken: 1082.30 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 601969

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.208249
  * Possible Actions: 596
  * Applied Actions: 583
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9283
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3368
    * NumAssEl_ssc: 0.0000
    * numOps: 4.6842
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 2.9789
    * staticness: 0.1698
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 55.6250
    * iC_Par: 2.6632
    * eC_Par: 3.2842
    * Dep_In: 5.7263
    * avrgMethodVisibility: 1.7067
    * Dep_Out: 5.6421
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [29.020024][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [29.013902][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.974530][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [29.084310][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [29.069005][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [29.075493][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [29.077194][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [29.085304][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [29.059553][Introduce Factory] for beaver.comp.Action$Type.<init>(int,java.lang.String)
  - [29.048036][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [29.048036][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [29.049100][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [29.050609][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [29.072236][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [29.068688][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [29.057875][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [29.051387][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [29.053937][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [29.064751][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [29.071132][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [29.006251][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.999763][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.979734][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [28.961253][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [28.956881][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.949917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.934612][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [28.819023][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [28.817565][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.803757][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [28.802227][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.726077][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [28.661196][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [28.642715][Freeze Method] Convert 'removeResolvedActions()' of 'beaver.comp.Action$List' to static 
  - [28.566565][Introduce Factory] for beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol)
  - [28.546537][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [28.524910][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.517946][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.502641][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [28.489331][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [28.413181][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [28.395966][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [28.367040][Introduce Factory] for beaver.Parser$Events.<init>()
  - [28.366207][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [28.356057][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [28.355508][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [28.333546][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to static 
  - [28.332015][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.330485][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.318967][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.298939][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [28.294892][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [28.279587][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [28.273466][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [28.269093][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [28.267562][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.266032][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.257922][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [28.251434][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.251266][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [28.241063][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [28.237662][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.206836][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [28.201734][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.173588][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [28.163385][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [28.143809][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [28.142278][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.139217][Increase Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.137488][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [28.128378][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [28.118175][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [28.113802][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [28.107419][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.094652][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [28.084013][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [28.083116][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.972011][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.880830][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [27.875729][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.871120][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [27.855934][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.840630][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.833309][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.800868][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [27.797042][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.792669][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [27.760229][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.758348][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [27.755439][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.753638][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.752424][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.752289][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder' to static 
  - [27.745597][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [27.739109][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.735838][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.732417][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [27.728591][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.725190][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.723277][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.707972][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [27.707503][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.703677][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.701689][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.636809][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.630457][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [27.608830][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.606272][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.602871][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.587566][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [27.584165][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.573962][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PACKAGE'
  - [27.558658][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [27.548455][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.546754][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.542928][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.527623][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.523797][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.518342][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.508139][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [27.504313][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.497825][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.495784][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.489837][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [27.486011][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.475808][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [27.473895][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.471709][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.465221][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.400340][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.374445][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [27.367957][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.364131][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.333305][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.329364][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.328545][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.326632][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.324808][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.322346][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.320433][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.315493][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [27.314046][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.303843][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [27.302651][Introduce Factory] for beaver.comp.run.AntTask.<init>()
  - [27.300737][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.290534][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [27.275230][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.273606][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$2'
  - [27.265953][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.250649][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.235344][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.231943][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.225455][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.223414][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.225455][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.229281][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [27.294365][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to static 
  - [27.307341][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.262059][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [27.257923][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [27.257923][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.261239][Instantiate Method] Move static method 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [27.272161][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [27.282364][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [27.293177][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.314804][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.316717][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.332060][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [27.333605][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.333096][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [27.350396][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder)
  - [27.352173][Freeze Method] Convert 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.352173][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [27.375475][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [27.371649][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.356344][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.353283][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.351097][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.340894][Increase Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [27.325589][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [27.260708][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.258795][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.247982][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.245796][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [27.230491][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.208864][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [27.207063][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [27.196860][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PACKAGE'
  - [27.193871][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.178567][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [27.155426][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.150023][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [27.146898][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [27.136695][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [27.136456][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.131180][Inline Method] beaver.comp.Action$List.removeResolvedActions(beaver.comp.Action$List) into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [27.131056][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.118080][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.116167][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.105354][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.102070][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [27.099287][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.083983][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [27.063856][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [27.053653][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [27.050252][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.034947][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$2)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [27.019643][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.015270][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.013083][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.011472][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.007915][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.006002][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.002217][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.000416][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.998230][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.990578][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.980375][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.966218][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.964305][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.962785][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.957683][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.955770][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.948118][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.923800][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [26.916148][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.900843][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.896788][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.892415][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.877111][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [26.861806][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [26.859620][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.855247][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.791412][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [26.789612][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.725777][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.738297][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Shift'
  - [26.740338][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.758997][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [26.763370][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [26.782029][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [26.784811][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.797578][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.801951][Decrease Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.848376][Freeze Method] Convert 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to static 
  - [26.866902][Remove Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.851597][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$2)' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [26.853638][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.859037][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.864425][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [26.860052][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.813116][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$2)' of type 'beaver.spec.GrammarBuilder$2'
  - [26.811711][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.run.Make)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.run.Make'
  - [26.831406][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.833207][Decrease Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.843410][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PUBLIC'
  - [26.793234][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [26.788862][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.778659][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.774752][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.759447][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [26.750032][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [26.737265][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.732560][Remove Method] 'createbeaver.comp.run.AntTask()' of type 'beaver.comp.run.AntTask'
  - [26.728187][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.720535][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.712883][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.707415][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [26.704633][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.676487][Make Class Abstract] beaver.comp.Action
  - [26.668835][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.658632][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PROTECTED'
  - [26.643327][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.628365][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.613061][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.597756][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.592655][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [26.560738][Increase Field Security] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.555338][Move Method] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.547686][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.644299][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [26.648672][Decrease Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.654954][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.660604][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.669579][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [26.675861][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.683713][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.691566][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.695043][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [26.710749][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.712244][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.718526][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.722176][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.739812][Instantiate Method] Move static method 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.741999][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PACKAGE'
  - [26.744185][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.807006][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [26.869828][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [26.854122][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.885533][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.854122][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.849749][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.786928][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.782556][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.776624][Instantiate Method] Move static method 'compile(beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [26.774437][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.770065][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.707243][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [26.701051][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.669640][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.647874][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.616463][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.616296][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.614110][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.551289][Increase Field Security] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.546187][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.541815][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.537442][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.506031][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [26.500930][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.489305][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [26.484932][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.490034][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.517389][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.533042][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [26.533403][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.539062][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.539062][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.551829][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.561777][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.577736][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [26.580287][Decrease Method Security] 'indexOfLastReferencedSymbol()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.590108][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.592884][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [26.603780][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.481115][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.479074][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.486646][Instantiate Method] Move static method 'makeDescription(beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.528517][Freeze Method] Convert 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to static 
  - [26.574942][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [26.577129][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.598755][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.583451][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.581410][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.559783][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.542966][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.541894][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [26.526589][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [26.524965][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.523395][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.503047][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.500432][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.500101][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.493979][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.483776][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PACKAGE'
  - [26.476718][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.467326][Instantiate Method] Move static method 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [26.457123][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [26.454937][Increase Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.444734][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.434054][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.443477][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [26.465465][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.480769][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.485969][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [26.527840][Freeze Method] Convert 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [26.540696][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [26.540696][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.543473][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [26.545514][Decrease Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.560857][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.577557][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [26.592900][Freeze Method] Convert 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.592900][Make Class Final] beaver.comp.State$Factory
  - [26.597631][Freeze Method] Convert 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [26.595445][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.590635][Move Down Field] 'sym_name' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition$Element'
  - [26.601449][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.606550][Decrease Method Security] 'hasCollisions()' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.671634][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to static 
  - [26.681182][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [26.655076][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.648854][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.645189][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.519907][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.516081][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.511708][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.501505][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [26.492341][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.481527][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.479487][Increase Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.475661][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.469539][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.387961][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.385606][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.375403][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.371577][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.320173][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of type 'beaver.comp.Action$1'
  - [26.315801][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.305598][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.308782][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [26.313279][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.318381][Decrease Method Security] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.322207][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.329799][Remove Method] 'syntaxError(beaver.Symbol)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.340613][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.342158][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.346889][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.350715][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.355447][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.364026][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.366212][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [26.381555][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.386657][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition$Element' to 'PUBLIC'
  - [26.399513][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [26.399513][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [26.422814][Freeze Method] Convert 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [26.444441][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.457417][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.467620][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [26.466076][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.455873][Increase Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.451500][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.429873][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.364992][Increase Field Security] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.349687][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.343566][Increase Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.330589][Move Up Field] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.326217][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.307655][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [26.303282][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.298909][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.293344][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.296127][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.307049][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [26.371930][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.387234][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.408861][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.425555][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[]) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])
  - [26.427595][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.435705][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.465971][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [26.478947][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.478947][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [26.517356][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)
  - [26.528169][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.534657][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.556284][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.566233][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [26.613327][Inline Method] beaver.spec.ast.Declaration$Implements.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Implements.accept(beaver.spec.ast.TreeWalker)
  - [26.622596][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.638816][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.651792][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.638039][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [26.627226][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.602345][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [26.580718][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.575653][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.572495][Remove Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.559519][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.546542][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.544502][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.542461][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.529485][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.519282][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PRIVATE'
  - [26.412624][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.408251][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.386263][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.370959][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.354468][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.344265][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.343368][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.321381][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.309994][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.303398][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.281411][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.275970][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.278156][Decrease Method Security] 'init()' of 'beaver.Parser' to 'PACKAGE'
  - [26.335218][Introduce Factory] for beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [26.368199][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.379121][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [26.445083][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [26.450203][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.463396][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.500989][Instantiate Method] Move static method 'writeListsCode(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.NonTerminal'
  - [26.503344][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.505699][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.509911][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [26.521976][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken(beaver.Parser$TokenStream)
  - [26.523676][Decrease Method Security] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [26.547761][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.553876][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder)
  - [26.558978][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [26.582190][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [26.600849][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.606244][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [26.612952][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.606118][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.601745][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.568213][Move Method] 'writeListsCode(beaver.spec.GrammarBuilder)' of 'beaver.spec.NonTerminal' to its parameter type 'beaver.spec.GrammarBuilder'
  - [26.563163][Move Method] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.553580][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [26.552032][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.529672][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.525299][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.520927][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.498567][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.493465][Increase Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.426385][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PRIVATE'
  - [26.403597][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.381237][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.332034][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.318618][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.296258][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.273898][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.251538][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.240358][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.243135][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [26.245489][Decrease Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.253142][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.258409][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [26.260595][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal)' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [26.260595][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [26.262782][Decrease Method Security] 'init()' of 'beaver.Parser' to 'PROTECTED'
  - [26.272730][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.274771][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.284719][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.281933][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.283558][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.285620][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [26.294939][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$1'
  - [26.299312][Decrease Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.333431][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.338825][Freeze Method] Convert 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.341180][Decrease Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [26.342805][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.351334][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.317216][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.294470][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [26.286856][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.286460][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.277681][Move Method] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [26.276831][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.274048][Increase Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.272007][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.237889][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [26.232704][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder)
  - [26.228331][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.241187][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [26.259846][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [26.290409][Instantiate Method] Move static method 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.324527][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [26.334730][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [26.340844][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [26.346239][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [26.348425][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [26.382544][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.405289][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.391523][Remove Method] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of type 'beaver.spec.Production$RHS$Item'
  - [26.393587][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [26.403335][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [26.410159][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.432905][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.439728][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.440142][Introduce Factory] for beaver.Symbol.<init>(short)
  - [26.442924][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.451032][Freeze Method] Convert 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.492696][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.490990][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.486617][Increase Method Security] 'getReduceActionCode(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.475755][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.453950][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.451167][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.428807][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.424435][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.420062][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.416976][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.407393][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.396213][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.278526][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.244408][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.210290][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [26.208249][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
====== Run Result ======

* Name: Beaver|ABC|T50|P40|I7500
  * Run Info: Artificial Bee Colony. Population Size: 40, Max Trials: 50, Iterations: 7500.
  * Time taken: 1106.64 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 602485

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.737436
  * Possible Actions: 626
  * Applied Actions: 363
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.0578
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1054
    * packagenesting: 1.5000
    * getters: 0.3579
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7368
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.1453
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 56.2500
    * iC_Par: 2.6526
    * eC_Par: 3.2000
    * Dep_In: 5.5368
    * avrgMethodVisibility: 1.8086
    * Dep_Out: 5.6526
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [28.980937][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [28.980937][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [28.982395][Decrease Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.975431][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.991921][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [28.987549][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.969068][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [28.980061][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [28.976660][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.976660][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [28.993151][Decrease Field Security] 'txt' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [28.994685][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [29.036191][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [28.960041][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [28.966637][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.960541][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [28.960541][Make Class Final] beaver.comp.State
  - [28.962341][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [28.964142][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [28.948875][Freeze Method] Convert 'hasCollisions()' of 'beaver.comp.ParsingTables' to static 
  - [28.936129][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [28.920824][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [28.844674][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [28.793696][Freeze Method] Convert 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to static 
  - [28.782702][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [28.781171][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.779641][Increase Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [28.767350][Freeze Method] Convert 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [28.750135][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [28.748605][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.724155][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [28.718033][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.694128][Introduce Factory] for beaver.comp.Action.<init>(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)
  - [28.643149][Freeze Method] Convert 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to static 
  - [28.633025][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.620279][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [28.616878][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.606753][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.594462][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [28.587499][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.563049][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [28.552924][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.514064][Instantiate Method] Move static method 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.409726][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.run.Options'
  - [28.403130][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.390383][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [28.368918][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [28.365139][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [28.351898][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.350368][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.347693][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.319547][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [28.309344][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [28.305943][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.299821][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.295448][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.291075][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.192310][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [28.190779][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.189395][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [28.186858][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [28.186650][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.185120][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.180018][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [28.173310][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.142964][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.075884][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [28.008804][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.999221][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.995820][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.994289][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.991523][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.987150][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.985619][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.983158][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.975505][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.960201][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.957330][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.952958][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.937653][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.936042][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.929334][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.928683][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [27.922454][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.921063][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.905164][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.901337][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.898482][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [27.891886][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.876581][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.860881][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.854759][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.848637][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.833332][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.823129][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.822521][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.809545][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.794241][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.792710][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.786588][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.777320][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.775789][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.772388][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.766266][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.735440][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.704614][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.704410][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.701951][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.700494][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [27.694006][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.693531][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [27.690130][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.685758][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.681152][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [27.616271][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.600966][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.598867][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.533986][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.532594][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.532594][Make Class Non-Final] beaver.ParsingTables
  - [27.543516][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [27.552785][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [27.537480][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.550336][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [27.559605][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [27.563244][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [27.572513][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [27.594140][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [27.602250][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.608372][Decrease Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.619009][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [27.640636][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [27.642181][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.657958][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [27.660011][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [27.663412][Decrease Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [27.664870][Decrease Method Security] 'zzRefill(beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.684426][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [27.739643][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [27.735417][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [27.719032][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.714659][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.711719][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.646838][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.631385][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.616081][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.610553][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [27.571598][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.State'
  - [27.568520][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.546326][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [27.536123][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.532883][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.528637][Move Method] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.527013][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [27.494572][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.429691][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.423203][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.401576][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [27.398146][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.394894][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [27.384691][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [27.383161][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.381630][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.366326][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.357057][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [27.354397][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [27.351274][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.346901][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [27.282020][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.266716][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.265171][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.265171][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.311596][Freeze Method] Convert 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to static 
  - [27.376477][Decrease Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PUBLIC'
  - [27.391820][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [27.415121][Freeze Method] Convert 'size()' of 'beaver.comp.util.Log$Record$List' to static 
  - [27.417162][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.418707][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.420893][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PACKAGE'
  - [27.428545][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [27.431946][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [27.448646][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [27.456756][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.467570][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.480546][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [27.482347][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.485748][Decrease Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [27.498724][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.509645][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [27.525866][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.529505][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.464624][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [27.461480][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.458079][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.336731][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.333330][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.311343][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.311219][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.310800][Move Up Method] '<init>(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [27.309316][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.296123][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.280819][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.265514][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [27.261400][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [27.256299][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.254140][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.242445][Inline Method] beaver.comp.ParsingTables.hasCollisions(beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.240258][Increase Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [27.236857][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.221553][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.218152][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.185170][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.169866][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.164764][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.153771][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [27.087808][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.021846][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [27.018445][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.017914][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.006269][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.999672][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.999219][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.998130][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.982825][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.967521][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.959868][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.944564][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.942651][Increase Method Security] 'zzRefill(beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.938278][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.931314][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.909327][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.901674][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.897302][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.893701][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [26.886049][Increase Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.880947][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.876575][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.876153][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.869557][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.875679][Decrease Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [26.894338][Freeze Method] Convert 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to static 
  - [26.909643][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.911997][Decrease Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.916370][Decrease Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [26.981454][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to static 
  - [26.997945][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [27.021246][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [27.032168][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [27.035352][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [27.040453][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.051447][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [27.059692][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.063518][Decrease Method Security] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to 'PROTECTED'
  - [27.067345][Decrease Method Security] 'createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)' of 'beaver.comp.Action' to 'PROTECTED'
  - [27.076768][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [27.098755][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.104167][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [27.111131][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.129790][Freeze Method] Convert 'get(int)' of 'beaver.comp.util.IntArray' to static 
  - [27.128259][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.124839][Move Method] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.109535][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.099140][Instantiate Method] Move static method 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[],beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [27.088937][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.078734][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [27.063430][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.055777][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.048570][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [27.026583][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.960621][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [26.954024][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.938720][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.923415][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.915763][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.899272][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.882782][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [26.873358][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [26.873339][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.863136][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [26.847832][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [26.837629][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [26.846333][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.851728][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [26.853364][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.855775][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.858835][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.864957][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [26.869109][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.902649][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [26.905710][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.907623][Decrease Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.912822][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [26.931481][Freeze Method] Convert 'initStack()' of 'beaver.Parser$Simulator' to static 
  - [26.933891][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.942500][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [26.955356][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [26.963741][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [26.965442][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.967355][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.967355][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [26.952173][Inline Method] beaver.Parser$Simulator.initStack(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.951764][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.945642][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.930338][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.925965][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.910660][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.889451][Instantiate Method] Move static method 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.881798][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.848258][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [26.840606][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.837465][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.824986][Instantiate Method] Move static method 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.809681][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.809362][Move Method] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.Action$List'
  - [26.830343][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.833126][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [26.849896][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.854047][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.872706][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [26.896370][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [26.898283][Decrease Method Security] 'newSymbol(short,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.905619][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)
  - [26.911741][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [26.942479][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.955335][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [26.957886][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.983233][Instantiate Method] Move static method 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.977767][Move Down Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Accept'
  - [26.987970][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.021510][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [27.050935][Instantiate Method] Move static method 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [27.048385][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.050062][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.079775][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.073653][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.058801][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [27.054428][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.051027][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.044906][Increase Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [27.040533][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.038813][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.028610][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [27.024237][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.022179][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [27.016057][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.005854][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.995651][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to 'PRIVATE'
  - [26.986619][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.982793][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.971613][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.956309][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.947144][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.942772][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.938399][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.932277][Increase Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.880873][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of type 'beaver.spec.Production$1'
  - [26.880513][Remove Method] 'misspelledTokenReplaced(beaver.Symbol)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.850843][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.834073][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.832032][Increase Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.829991][Increase Method Security] 'newSymbol(short,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.745088][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.737436][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
====== Run Result ======

* Name: Beaver|ABC|T50|P40|I7500
  * Run Info: Artificial Bee Colony. Population Size: 40, Max Trials: 50, Iterations: 7500.
  * Time taken: 1133.06 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 602846

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.240629
  * Possible Actions: 614
  * Applied Actions: 479
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9499
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3579
    * NumAssEl_ssc: 0.0000
    * numOps: 4.8105
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 2.9579
    * staticness: 0.1492
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 57.1250
    * iC_Par: 2.6526
    * eC_Par: 3.3474
    * Dep_In: 5.7789
    * avrgMethodVisibility: 1.7868
    * Dep_Out: 5.6105
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [28.986803][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [28.978757][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [28.980291][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.981864][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.State'
  - [28.905714][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [28.907172][Decrease Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.886449][Instantiate Method] Move static method 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [28.867968][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [28.857843][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.818471][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [28.742321][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [28.726162][Freeze Method] Convert 'hasCollisions()' of 'beaver.comp.ParsingTables' to static 
  - [28.732758][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [28.731227][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.733778][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.738385][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [28.731789][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.704878][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [28.689574][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [28.674269][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [28.641861][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [28.633324][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action'
  - [28.623199][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.607895][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.603470][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [28.598368][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.594639][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [28.538670][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [28.531017][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to 'PRIVATE'
  - [28.518843][Introduce Factory] for beaver.comp.run.AntTask.<init>()
  - [28.511880][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.504916][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.495006][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.481601][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [28.443968][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [28.425487][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [28.423957][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.403928][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [28.337966][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [28.334000][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [28.327036][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.320940][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [28.289914][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [28.223951][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.220890][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.217829][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.215235][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.193248][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.189847][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.123884][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [28.116232][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [28.115186][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.112511][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [28.104858][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [28.100486][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.099210][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [28.097680][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.091558][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.086456][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.080334][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.073738][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.069810][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [28.069248][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.062652][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.061122][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.059846][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [28.058146][Move Method] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [28.056615][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.041311][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [28.039780][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.038250][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.022945][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [28.021415][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.021152][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [28.019541][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.017859][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.016583][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.015308][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.985468][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [27.979085][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.969662][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.965289][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.961888][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.960277][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.958666][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.956751][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [27.934764][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.919459][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.888633][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.888521][Instantiate Method] Move static method 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [27.880613][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [27.877552][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.846726][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.845026][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.779063][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.774886][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [27.773185][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.707223][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.705599][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [27.705096][Move Down Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.700723][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.613340][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.611539][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.603887][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.601483][Remove Method] 'createbeaver.spec.parser.GrammarScanner()' of type 'beaver.spec.parser.GrammarScanner'
  - [27.534403][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.506257][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.439177][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.432469][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.426347][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.398201][Make Class Abstract] beaver.comp.Action
  - [27.396288][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.380344][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [27.378543][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.377025][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.373624][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.372000][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$2'
  - [27.367627][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.363255][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.363110][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.347805][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.321911][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [27.321345][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.306041][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.304128][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.302403][Introduce Factory] for beaver.Symbol.<init>()
  - [27.293658][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [27.287536][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.285623][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.278915][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.268712][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.267381][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.263422][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.248118][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [27.237915][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.227712][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [27.218129][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.202824][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [27.199423][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.184119][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.182241][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.180550][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [27.176723][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.161571][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.158170][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.152048][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.275032][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [27.284455][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [27.306443][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [27.313254][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [27.324247][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [27.335241][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.336572][Decrease Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.340211][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [27.324906][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.326022][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [27.328209][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.328209][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [27.326296][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.319995][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [27.329418][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [27.342610][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.349207][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [27.367866][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [27.367866][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.367866][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.356872][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [27.341567][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.340033][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.337136][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.334044][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.324620][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.313752][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.307156][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.296953][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.286750][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [27.281271][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.226284][Move Up Field] 'code' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [27.223991][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [27.217283][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.214413][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [27.192053][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.190139][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [27.188226][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.185207][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.183294][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.181108][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.174986][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.049365][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.046899][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [27.043740][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.040339][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.026692][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [27.003946][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.992574][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.988201][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.986288][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.932673][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.922470][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [26.907165][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.899513][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.891861][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.881658][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.876556][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.868904][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.855257][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.850155][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.867214][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.874038][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.877099][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.889955][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [26.894535][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [26.898175][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.928440][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [26.930626][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PACKAGE'
  - [26.998863][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [26.991211][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.994612][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.996964][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [27.004616][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [27.013146][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.018247][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [27.021887][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [27.040546][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [27.105630][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to static 
  - [27.111752][Decrease Method Security] 'createbeaver.spec.Grammar()' of 'beaver.spec.Grammar' to 'PROTECTED'
  - [27.115903][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.047666][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [27.044346][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.029041][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.019293][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [27.014921][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.011520][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.008119][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.000649][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.985344][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.970039][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.968428][Increase Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.945683][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.930378][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.913670][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.910578][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [26.906981][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.901879][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [26.891676][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.886051][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.880950][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.865645][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [26.831825][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.810928][Move Method] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.795623][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.733009][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.726887][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.725263][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.715060][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.699755][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.701942][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [26.711316][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [26.746033][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.749672][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [26.784389][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.788215][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.788215][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.792578][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.815722][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.816389][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [26.831694][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [26.841613][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [26.841613][Make Class Final] beaver.comp.Configuration$Set
  - [26.860272][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [26.860865][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [26.902736][Freeze Method] Convert 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to static 
  - [26.914308][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.916495][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [26.920321][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.930240][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.927747][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.920954][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [26.919330][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [26.904025][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.902112][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.867395][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [26.852090][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$2)' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [26.850981][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.847155][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.809934][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$2)' of type 'beaver.spec.GrammarBuilder$2'
  - [26.749179][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.684623][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.680797][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.678884][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.672362][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.668536][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.660884][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.637326][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.621404][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.557798][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.550145][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.546319][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [26.538667][Increase Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.531015][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.511795][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.496490][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [26.492664][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.488838][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.485244][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.481388][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.466083][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.462257][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.438699][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.424433][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.409129][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [26.405303][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.395100][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.403934][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [26.397812][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.405464][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [26.405994][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [26.407637][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.420493][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [26.422137][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.424177][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.452240][Inline Method] beaver.spec.ast.Declaration$ClassName.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$ClassName.accept(beaver.spec.ast.TreeWalker)
  - [26.459307][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.466612][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.464571][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.487732][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.489645][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.495039][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [26.503147][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [26.503147][Make Class Final] beaver.comp.Action$List
  - [26.533413][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [26.540480][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.562127][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.541686][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [26.537859][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.530115][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [26.494778][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [26.488073][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.421800][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.398242][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.396055][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.378387][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.376743][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.374830][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.351272][Increase Field Security] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.330499][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [26.323434][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.319608][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.321251][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.454750][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.456663][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.460064][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [26.461717][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.466090][Decrease Method Security] 'makeDescription(beaver.comp.Action$Shift,java.lang.String)' of 'beaver.comp.State' to 'PACKAGE'
  - [26.468131][Decrease Method Security] 'zzRefill(beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.466621][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [26.466467][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.535901][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.539728][Decrease Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.532784][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.542158][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [26.548325][Instantiate Method] Move static method 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.550126][Decrease Method Security] 'getTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.568785][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [26.564914][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.579390][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.589593][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [26.612894][Freeze Method] Convert 'start()' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.607811][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [26.606118][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.602011][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.586502][Inline Method] beaver.comp.ParsingTables.hasCollisions(beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.582184][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.579998][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.569795][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.565250][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.553678][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.548888][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.543831][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.540237][Remove Method] 'createbeaver.comp.run.AntTask()' of type 'beaver.comp.run.AntTask'
  - [26.538324][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.503607][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.498261][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.463544][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.411469][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.403830][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [26.398170][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.397664][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.385986][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.299194][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.289275][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [26.291340][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [26.300045][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.306989][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.304946][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.308007][Decrease Method Security] 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.310790][Decrease Method Security] 'removeResolvedActions()' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.317031][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.325735][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.327648][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.347545][Freeze Method] Convert 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [26.351696][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.374841][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.383545][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.385346][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.391658][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [26.401577][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [26.404360][Decrease Method Security] 'removeResolvedActions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.407142][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.390448][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.392527][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.391891][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill(beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.385651][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.381278][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.374786][Move Method] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Rule$Definition$Element' to its parameter type 'beaver.spec.GrammarBuilder'
  - [26.364583][Increase Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [26.341025][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.336653][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.326556][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [26.311252][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.299473][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.295647][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.291754][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.281551][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.292472][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.296124][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [26.303776][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [26.309171][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [26.312355][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [26.319423][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.322607][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.340710][Inline Method] beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log) into beaver.spec.GrammarBuilder.createbeaver.spec.GrammarBuilder(beaver.comp.util.Log)
  - [26.354844][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.358029][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [26.365096][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.385008][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.389159][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.412717][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.413193][Introduce Factory] for beaver.Symbol.<init>(short)
  - [26.420845][Decrease Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.427898][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [26.430959][Decrease Method Security] 'writeReduceActionCode(java.io.Writer)' of 'beaver.spec.Production' to 'PACKAGE'
  - [26.432999][Decrease Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.432999][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.425347][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.401442][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.392791][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [26.377109][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.372737][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.353007][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [26.352892][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.345239][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.331734][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.314065][Decrease Field Security] 'code' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.309967][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.294348][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.289864][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.279661][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.279661][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.281574][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.286282][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [26.290822][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [26.297890][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.307264][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.302724][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.309776][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.312327][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.317722][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [26.320002][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.324414][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.327816][Decrease Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [26.337190][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [26.338890][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.342477][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.352574][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PUBLIC'
  - [26.359626][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.355254][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.385519][Freeze Method] Convert 'start()' of 'beaver.spec.Production$List' to static 
  - [26.240629][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
====== Run Result ======

* Name: Beaver|ABC|T50|P40|I7500
  * Run Info: Artificial Bee Colony. Population Size: 40, Max Trials: 50, Iterations: 7500.
  * Time taken: 1065.85 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 601623

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.207697
  * Possible Actions: 671
  * Applied Actions: 518
  * Num Types: 94
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.0420
    * NOC: 0.4787
    * numInterf: 0.0000
    * abstractness: 0.1113
    * packagenesting: 1.5000
    * getters: 0.3511
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7872
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0213
    * staticness: 0.1637
    * numCls: 11.7500
    * numFields: 3.2021
    * NumDesc: 1.1170
    * numOpsCls: 56.2500
    * iC_Par: 2.6489
    * eC_Par: 3.1915
    * Dep_In: 5.7021
    * avrgMethodVisibility: 1.6613
    * Dep_Out: 5.6702
    * setters: 0.1383
    * iFImpl: 0.0000
    * eC_Attr: 1.0000
    * nesting: 0.6277
    * numConstants: 0.8936
    * NumAnc: 1.1170

* Applied Actions:
  - [28.967971][Instantiate Method] Move static method 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.961375][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.983362][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [28.973238][Freeze Method] Convert 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.984231][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [28.987292][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [28.977344][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [28.952894][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [28.909237][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [28.931224][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [28.938877][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [28.942278][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [28.886534][Introduce Factory] for beaver.comp.Action$Accept.<init>(beaver.spec.Grammar)
  - [28.886534][Make Class Final] beaver.comp.Action$Accept
  - [28.892656][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [28.894113][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.879612][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [28.896102][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [28.899928][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [28.898398][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.891802][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.874587][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.861277][Introduce Factory] for beaver.Symbol.<init>(short)
  - [28.847532][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [28.771382][Introduce Factory] for beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol)
  - [28.705420][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.703889][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.698318][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.632356][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [28.612327][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [28.607955][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.585967][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [28.553559][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [28.517405][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [28.513828][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [28.506175][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [28.496754][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [28.420604][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [28.417979][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.403477][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [28.337842][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [28.337410][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.333038][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.317733][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.302913][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [28.300304][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [28.278317][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [28.275256][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [28.275083][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [28.268961][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.268692][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.246704][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.245174][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.243643][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.239271][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.238224][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.235609][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [28.229013][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.218020][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [28.214009][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [28.208908][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [28.207297][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.206735][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.205204][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.200832][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.199301][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.194929][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [28.193269][Move Down Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [28.183066][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [28.176944][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.094095][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [28.063268][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [28.062674][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.995594][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.992520][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.991434][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.989823][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.988212][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.988039][Instantiate Method] Move static method 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [27.986428][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.981326][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.974618][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.967910][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.900830][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.899292][Move Down Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.892584][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.877280][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.810200][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.794895][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.781479][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.779778][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.770576][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [27.768663][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.788511][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.run.Options'
  - [27.789657][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [27.801114][Instantiate Method] Move static method 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [27.795979][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [27.797539][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.797539][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.793561][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [27.788460][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PACKAGE'
  - [27.798043][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [27.806428][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.808506][Freeze Method] Convert 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [27.798277][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [27.803379][Decrease Method Security] 'initStack()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.788074][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.794196][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [27.809539][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [27.874623][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [27.879822][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [27.890026][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [27.899608][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [27.832528][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.829720][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.824641][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.822840][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.794694][Make Class Abstract] beaver.comp.Action
  - [27.785504][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.778796][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.768593][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [27.766680][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.751375][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.703153][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.State'
  - [27.692567][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [27.690654][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.687747][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.684346][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.680945][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.658584][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [27.656671][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.646468][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.642096][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.625388][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.621987][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.619313][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.615912][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.613871][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.603668][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.601755][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.598354][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.583050][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.565850][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [27.498770][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.497495][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.496219][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.492923][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [27.492813][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [27.477508][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.467305][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PACKAGE'
  - [27.446366][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.438714][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.428511][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [27.425304][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [27.415101][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [27.413740][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [27.417141][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.422536][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [27.446407][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [27.451509][Decrease Method Security] 'initStack()' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.571832][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [27.606650][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to static 
  - [27.639091][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [27.644864][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [27.668166][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [27.689793][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [27.697903][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.705725][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [27.712306][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [27.714347][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.717408][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [27.686582][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.716847][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [27.716680][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.716680][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [27.726054][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [27.720500][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.703794][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.693992][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [27.691208][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.669581][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [27.667226][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.664097][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [27.661101][Remove Method] 'createbeaver.spec.parser.GrammarScanner()' of type 'beaver.spec.parser.GrammarScanner'
  - [27.658041][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PRIVATE'
  - [27.645735][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.640633][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.635531][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.619246][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [27.603941][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.601755][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.586450][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [27.582018][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.run.Make)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.run.Make'
  - [27.553444][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.544039][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.540638][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.535072][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [27.533032][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.522829][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [27.515130][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [27.513090][Increase Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [27.509263][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.505437][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.502376][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.500463][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.497402][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.496896][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.491795][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.476490][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.473429][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.470028][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.454723][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.446901][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [27.431597][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [27.431311][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [27.427822][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.425909][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.415706][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.411333][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.402884][Instantiate Method] Move static method 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.399483][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.384178][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.373975][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [27.358670][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [27.348467][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PACKAGE'
  - [27.344095][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.333892][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [27.318587][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [27.303282][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.300034][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.296359][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [27.289975][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.277658][Inline Method] beaver.spec.ast.Declaration$ClassName.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$ClassName.accept(beaver.spec.ast.TreeWalker)
  - [27.277466][Move Down Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.274065][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.272152][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.265229][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [27.237871][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [27.235830][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.231939][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [27.216634][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.214721][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.210348][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.200944][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.193292][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.165146][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.164609][Move Up Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [27.132692][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.117387][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [27.105612][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [27.099490][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.097577][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.089925][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [27.079722][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [27.077809][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.958846][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.955019][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.948531][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.940879][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.930676][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [26.934077][Decrease Method Security] 'removeResolvedActions()' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.934077][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [26.923874][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PACKAGE'
  - [26.930370][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.928214][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.928214][Make Class Final] beaver.comp.Action$Reduce
  - [26.949841][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.960763][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [26.932488][Remove Method] 'createbeaver.spec.parser.GrammarParser$Terminals()' of type 'beaver.spec.parser.GrammarParser$Terminals'
  - [26.935889][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to 'PACKAGE'
  - [26.938665][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.954008][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.951968][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.952990][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [26.960731][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [26.980959][Inline Method] beaver.comp.ParserGenerator.<init>() into beaver.comp.ParserGenerator.createbeaver.comp.ParserGenerator()
  - [26.986354][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [27.014416][Inline Method] beaver.spec.ast.Declaration$Header.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Header.accept(beaver.spec.ast.TreeWalker)
  - [27.023685][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [27.039905][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.018959][Remove Method] 'visit(beaver.spec.ast.Declaration$Terminals,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [27.003654][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.003644][Move Down Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.001731][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.986427][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.977158][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [26.972785][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.962582][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PRIVATE'
  - [26.959181][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.957557][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.952093][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.941890][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.937517][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.915890][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.913977][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.898673][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.894936][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.888814][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.886901][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.879441][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [26.864136][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.862436][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.852233][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.842030][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [26.841421][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.837048][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.832963][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.822760][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [26.818387][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.808184][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.803812][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.796656][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [26.792283][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.783538][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [26.781497][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.759870][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.757957][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.756333][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [26.754420][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.753413][Move Down Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [26.738108][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.733736][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.717515][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.715602][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.707057][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [26.702684][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.698312][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.698298][Move Up Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.672404][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [26.662201][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PACKAGE'
  - [26.660288][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.650085][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PRIVATE'
  - [26.653724][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.654956][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.667782][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [26.671609][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PUBLIC'
  - [26.680877][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [26.696182][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [26.697882][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.697882][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [26.700659][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [26.707399][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [26.707399][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.710259][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [26.713443][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.718545][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.760416][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.761961][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.768449][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.770490][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.773634][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.838515][Decrease Field Security] 'state' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [26.836602][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.836541][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.771660][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [26.769747][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.754443][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [26.744240][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [26.742327][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.740782][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.725477][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [26.723677][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.719304][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.709101][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [26.707188][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.705785][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [26.703871][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.699878][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.690610][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.686613][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.684700][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.669395][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.647768][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.643396][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.632970][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [26.617666][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [26.615753][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.605550][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.595347][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [26.593434][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.589061][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.575348][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.449370][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.441718][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.433972][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.430575][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.408215][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.403842][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.401802][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.399888][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.397975][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.391854][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.385732][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.381359][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.371156][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.366783][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.339222][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.323917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.313714][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [26.337016][Freeze Method] Convert 'size()' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.342117][Decrease Method Security] 'makeDescription(beaver.comp.Action$Shift,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [26.354973][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [26.374363][Inline Method] beaver.spec.ast.Declaration$TypeOf.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$TypeOf.accept(beaver.spec.ast.TreeWalker)
  - [26.382394][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [26.409093][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [26.412494][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.420146][Decrease Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.422332][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.424133][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.446120][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.447821][Decrease Method Security] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to 'PROTECTED'
  - [26.476208][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.523302][Inline Method] beaver.spec.ast.GrammarTreeRoot.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.GrammarTreeRoot.accept(beaver.spec.ast.TreeWalker)
  - [26.536828][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.547750][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [26.561166][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.584939][Remove Method] 'syntaxError(beaver.Symbol)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.620806][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [26.622606][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.620420][Increase Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.612768][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.585336][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.583536][Increase Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [26.578434][Increase Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.576521][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.574189][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [26.574099][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.549085][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.526725][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [26.516522][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.500628][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.485323][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.480222][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.455385][Remove Method] 'printUsage()' of type 'beaver.comp.run.Make'
  - [26.397888][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.337197][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.331407][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.325285][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.317633][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.311511][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.284359][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [26.282446][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.280533][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.347613][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [26.352715][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Rule$Definition$Element' to 'PUBLIC'
  - [26.355069][Decrease Method Security] 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.349968][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.355021][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [26.365658][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [26.373797][Inline Method] beaver.comp.util.Log.<init>() into beaver.comp.util.Log.createbeaver.comp.util.Log()
  - [26.380505][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.382418][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [26.415958][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.424066][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [26.460249][Introduce Factory] for beaver.comp.util.Log$Record.<init>(int,int,java.lang.String)
  - [26.460249][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.470937][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.480311][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [26.483094][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.546435][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.557615][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.604040][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to static 
  - [26.618850][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [26.608850][Move Method] 'makeDescription(beaver.comp.Action$Shift,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.562237][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.430668][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.430482][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [26.429975][Remove Method] 'missingTokenInserted(beaver.Symbol)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.426660][Instantiate Method] Move static method 'compile(beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [26.419638][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.354075][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.345879][Remove Method] 'compile(beaver.comp.run.Options)' of type 'beaver.comp.io.SrcReader'
  - [26.338070][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.303353][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.280208][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.278295][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.276382][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.266179][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.261259][Inline Method] beaver.spec.ast.Declaration$ListType.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$ListType.accept(beaver.spec.ast.TreeWalker)
  - [26.323550][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [26.328048][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [26.329701][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.343588][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PUBLIC'
  - [26.349709][Decrease Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [26.378960][Instantiate Method] Move static method 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.380613][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.407881][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[]) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])
  - [26.407881][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [26.426540][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [26.430691][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.432344][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.442547][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [26.472813][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.509704][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of type 'beaver.spec.GrammarBuilder$4'
  - [26.532440][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [26.537288][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.560590][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.583734][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.679632][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [26.678445][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [26.648770][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.645676][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PRIVATE'
  - [26.644023][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.619755][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [26.565536][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.559349][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.549036][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.535822][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.533660][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [26.531726][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.520154][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.250875][Remove Class] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.250181][Remove Method] 'visit(beaver.spec.ast.Declaration$Imports)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.245025][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.241557][Remove Method] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.241154][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.230841][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.207697][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
====== Run Result ======

* Name: Beaver|ABC|T50|P40|I7500
  * Run Info: Artificial Bee Colony. Population Size: 40, Max Trials: 50, Iterations: 7500.
  * Time taken: 1062.32 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 601513

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.243905
  * Possible Actions: 658
  * Applied Actions: 366
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9640
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3579
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7895
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.1398
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 56.8750
    * iC_Par: 2.6526
    * eC_Par: 3.1684
    * Dep_In: 5.5474
    * avrgMethodVisibility: 1.7957
    * Dep_Out: 5.6526
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [29.003430][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.929239][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to static 
  - [28.896831][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [28.962793][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [28.964017][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.957054][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.946851][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [28.948568][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [28.948568][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.950102][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.953928][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [28.957329][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [28.973820][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [28.983243][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [28.955388][Freeze Method] Convert 'getId()' of 'beaver.comp.Action' to static 
  - [29.063853][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [29.085480][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [29.011289][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [28.978881][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [28.963576][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [28.946638][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [28.932941][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [28.931411][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.927863][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.920899][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.900871][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [28.875286][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [28.862874][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.835828][Instantiate Method] Move static method 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [28.805464][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [28.793580][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.776366][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.754403][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [28.741093][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [28.730968][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.703203][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [28.676700][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [28.648554][Make Class Abstract] beaver.comp.Action
  - [28.584720][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.578885][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [28.550007][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.548477][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.542093][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.540563][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.540201][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [28.538671][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.534298][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.529197][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [28.525796][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.521423][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.518334][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.454500][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.390665][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [28.384544][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.383752][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [28.382177][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [28.366872][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [28.357753][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [28.293918][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [28.182469][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.174288][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [28.169915][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.169469][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [28.169346][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.164244][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.136098][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [28.132361][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.117057][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [28.016027][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [28.005824][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [28.003041][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.995085][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.991869][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.987496][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.982395][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.975799][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.965595][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.962194][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.958793][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.925812][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [27.920711][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.919010][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.908807][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.875826][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.809864][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [27.755768][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.754437][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.751036][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.740833][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [27.735731][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.734031][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.718726][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.703422][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.693839][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [27.687131][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.680423][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.678722][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.677022][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.673621][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.669248][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.667547][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.659455][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [27.652747][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.651845][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.647473][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.640764][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.607224][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.573684][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [27.568583][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.567098][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.566436][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.564636][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.549331][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.548569][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.544196][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.543274][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Shift'
  - [27.527969][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.523596][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.513393][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [27.507272][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.491967][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [27.478551][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.476850][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.470142][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.403062][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PRIVATE'
  - [27.387757][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.372453][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.364512][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [27.349207][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.347876][Increase Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.346583][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.340461][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.325157][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.323532][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [27.313329][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [27.308228][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.303855][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.303806][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.293603][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [27.288004][Move Down Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [27.283427][Move Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [27.268123][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.263169][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.259768][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.244464][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.242200][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.240640][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.173560][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.169694][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.167508][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.157305][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [27.142000][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.135178][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [27.129056][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.127355][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.123954][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.113751][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [27.109379][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.105978][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.105254][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.038174][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.036473][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.030351][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.020148][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PACKAGE'
  - [27.010565][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.009205][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [27.007292][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.002919][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.999518][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.968692][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [26.942797][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [26.941406][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.926101][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.915898][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PACKAGE'
  - [26.913985][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.911631][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.902048][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.891845][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [26.881642][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.878572][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.876659][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.809578][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [26.807209][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [26.807078][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.791774][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [26.781571][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.780748][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.778835][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.711755][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.710358][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.708445][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.704072][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.700501][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [26.697100][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.681795][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.671592][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [26.649232][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.641580][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.640447][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.633739][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.602913][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [26.602069][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [26.586765][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.583944][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.568640][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.566285][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.583055][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.594445][Introduce Factory] for beaver.comp.Action$Type.<init>(int,java.lang.String)
  - [26.636316][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [26.653016][Introduce Factory] for beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol)
  - [26.655799][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.651426][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.648486][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.715567][Decrease Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [26.725149][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.739952][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.createbeaver.comp.Action$Type()
  - [26.745347][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [26.752999][Decrease Method Security] 'countStates()' of 'beaver.comp.State' to 'PROTECTED'
  - [26.756826][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.773596][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.781981][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.789034][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [26.789034][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [26.800214][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.802127][Decrease Method Security] 'getTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.815795][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [26.808143][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.792838][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.790484][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.782832][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.773427][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [26.739887][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.733896][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.724313][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [26.721235][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.692618][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.682415][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.679418][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.677505][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.610425][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.603717][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.537008][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of type 'beaver.comp.Action$List$1'
  - [26.530300][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.529710][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.519507][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PACKAGE'
  - [26.517594][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.484054][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.472874][Increase Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.466752][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.452595][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.449355][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.448977][Remove Method] 'visit(beaver.spec.ast.Declaration$Implements)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.446790][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.421198][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.416825][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.406622][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [26.403192][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [26.418535][Freeze Method] Convert 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [26.418535][Make Class Final] beaver.comp.Action$Shift
  - [26.420336][Decrease Method Security] 'newSymbol(short,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.427044][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.556113][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.562709][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.566133][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [26.567667][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.589654][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.599858][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [26.610061][Decrease Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.613887][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.660312][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [26.671305][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.686975][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.688888][Decrease Method Security] 'getTerminals()' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [26.699091][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [26.711947][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [26.734683][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [26.718192][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.707989][Increase Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.704344][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.702663][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.695010][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.678869][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.673146][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.657842][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.592961][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.582758][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PRIVATE'
  - [26.571533][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.560452][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.465575][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.450270][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.444149][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.433946][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [26.418131][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.413700][Remove Method] 'printVersion()' of type 'beaver.comp.run.Make'
  - [26.398396][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.396862][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.392489][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.362407][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.360367][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.374490][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [26.376290][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.379351][Decrease Method Security] 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.382990][Freeze Method] Convert 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [26.382990][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [26.388385][Freeze Method] Convert 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.398588][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PACKAGE'
  - [26.405641][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [26.411763][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [26.420008][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.422785][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [26.428180][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [26.443523][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [26.451631][Freeze Method] Convert 'readToken()' of 'beaver.Parser$TokenStream' to static 
  - [26.458227][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.467601][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [26.522818][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [26.523186][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [26.435237][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.438019][Decrease Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [26.436219][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.430097][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PACKAGE'
  - [26.378693][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of type 'beaver.spec.Production$2'
  - [26.356706][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.346503][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [26.342130][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.341339][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.346441][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [26.351172][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.353955][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.353955][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [26.377257][Freeze Method] Convert 'size()' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.379057][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.409322][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule' to static 
  - [26.409652][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [26.411452][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.441718][Freeze Method] Convert 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [26.505739][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.509565][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.522541][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.533355][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.536137][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.552837][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [26.558364][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.573707][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [26.581359][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.592493][Instantiate Method] Move static method 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.584497][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.578733][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.576932][Increase Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.573276][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.568904][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.555928][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.553168][Remove Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.429961][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.413470][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.398166][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.396253][Increase Method Security] 'newSymbol(short,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.395947][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.393519][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.391332][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.386960][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.382587][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.380232][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.378194][Inline Method] beaver.Parser$TokenStream.readToken(beaver.Parser$TokenStream) into beaver.Parser$TokenStream.nextToken(beaver.Parser$TokenStream)
  - [26.248295][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.243905][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
====== Run Result ======

* Name: Beaver|ABC|T50|P40|I7500
  * Run Info: Artificial Bee Colony. Population Size: 40, Max Trials: 50, Iterations: 7500.
  * Time taken: 1078.73 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 602132

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.148631
  * Possible Actions: 613
  * Applied Actions: 531
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9765
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3579
    * NumAssEl_ssc: 0.0000
    * numOps: 4.6737
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 2.9895
    * staticness: 0.1517
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 55.5000
    * iC_Par: 2.6526
    * eC_Par: 3.2737
    * Dep_In: 5.7158
    * avrgMethodVisibility: 1.7134
    * Dep_Out: 5.6421
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [28.984868][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [28.977905][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.966719][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.969780][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [28.969320][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.929948][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [28.909920][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [28.906519][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.908505][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.905104][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.869317][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [28.792244][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [28.792244][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.796742][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [28.798442][Decrease Method Security] 'getTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [28.801843][Decrease Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [28.804398][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [28.806752][Decrease Method Security] 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.810345][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [28.795843][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [28.788191][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [28.781227][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.737570][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [28.726052][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.725942][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [28.719345][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.697358][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.654143][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [28.652613][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.628163][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [28.610948][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.559969][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [28.527561][Freeze Method] Convert 'size()' of 'beaver.comp.util.Log$Record$List' to static 
  - [28.451411][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [28.412039][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [28.396734][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [28.379831][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [28.364526][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [28.361125][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [28.354529][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.352999][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.349598][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [28.349287][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [28.333983][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [28.311995][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [28.302400][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [28.298027][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.232065][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [28.230534][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.229004][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.218010][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [28.216480][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.214949][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.214388][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.210015][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.208404][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.204808][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [28.204163][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [28.188858][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.187882][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [28.071883][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.061680][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [28.060150][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.058619][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.048416][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [28.045015][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.041492][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.038582][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [28.011662][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.945700][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.939104][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.932507][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.928135][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.921538][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.906234][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [27.900112][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.896042][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [27.895583][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.890482][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.888951][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.887340][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.872036][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.869485][Increase Method Security] 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.867563][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.866652][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [27.835826][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.832671][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.828403][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.818200][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.790054][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.781836][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [27.768644][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.702682][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.701071][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.700136][Move Down Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.684832][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [27.659324][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.644020][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.642106][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.638705][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.628502][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [27.622381][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.614543][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.604340][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PACKAGE'
  - [27.596688][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.581383][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [27.566079][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.559957][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.558333][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [27.556708][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [27.549167][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [27.545766][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.530461][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.528548][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.513071][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [27.502868][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.495716][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [27.493803][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.483600][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [27.480530][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.480098][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.478058][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.475111][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.409149][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [27.378323][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.368120][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.366206][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.300244][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.234282][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.201301][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.199260][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.194159][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.178854][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.174357][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [27.175891][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.165688][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [27.173345][Inline Method] beaver.spec.ast.Declaration$ClassName.visit(beaver.spec.GrammarBuilder) into beaver.spec.ast.Declaration$ClassName.accept(beaver.spec.ast.TreeWalker)
  - [27.189835][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.205140][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [27.211168][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [27.213354][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.220094][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [27.223733][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [27.195464][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [27.202060][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.268022][Decrease Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PUBLIC'
  - [27.278944][Freeze Method] Convert 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to static 
  - [27.294248][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PUBLIC'
  - [27.336842][Instantiate Method] Move static method 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [27.343439][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [27.373704][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [27.373704][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [27.392363][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [27.394163][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.384250][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.369282][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.365014][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.299051][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.291833][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [27.289920][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.287588][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [27.285764][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.270459][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.249297][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [27.240082][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.236507][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.232134][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.230221][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.227160][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.213003][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.211090][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.195785][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.188133][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.172828][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.170915][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.157821][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [27.147618][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [27.141496][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.135374][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.131001][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.129088][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.126734][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.124820][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.109516][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [27.107161][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.105121][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.103208][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.097795][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.091307][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [27.089394][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.089062][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [27.086708][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.081173][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [27.079260][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.074887][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.072974][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.056729][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.053032][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.037826][Move Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [27.022521][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.021747][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.898491][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [26.871167][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.State'
  - [26.866036][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.856613][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [26.855159][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.853246][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.850695][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.848782][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.844889][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [26.834686][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.832773][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.825120][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.821000][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.818449][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.803145][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [26.798772][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.794399][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.779095][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.777182][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.761877][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [26.751674][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PACKAGE'
  - [26.718693][Increase Field Security] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to 'PROTECTED'
  - [26.729686][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.740680][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.752286][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.785268][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [26.800572][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.805304][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [26.814727][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [26.829177][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.836829][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule' to 'PUBLIC'
  - [26.842224][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [26.872489][Freeze Method] Convert 'start()' of 'beaver.spec.Production$List' to static 
  - [26.869417][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.870987][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.872558][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.905539][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [26.908940][Decrease Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.919861][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.925256][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [26.927667][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.974761][Inline Method] beaver.spec.ast.Declaration$Imports.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Imports.accept(beaver.spec.ast.TreeWalker)
  - [26.972429][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [26.961317][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.959786][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.948792][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.943691][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.938868][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [26.934495][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.924292][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PRIVATE'
  - [26.922761][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.919914][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.914813][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.905390][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.903819][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.888515][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.884337][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.879875][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [26.851730][Make Class Abstract] beaver.comp.Action
  - [26.841527][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [26.831323][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [26.821120][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.819705][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [26.814909][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.811508][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.808726][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.793421][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [26.792783][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill(beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.791240][Remove Method] 'parseOptions(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.788462][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.785680][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.785513][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.775310][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PACKAGE'
  - [26.772527][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.769330][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [26.767417][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.757214][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.751092][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.739486][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.728492][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.695511][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [26.691138][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.683486][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.673283][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.667488][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.663662][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.660601][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.656228][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.652231][Remove Method] 'printVersion()' of type 'beaver.comp.run.Make'
  - [26.649170][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.645344][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.630040][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.597059][Increase Field Security] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [26.593045][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [26.577741][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.567538][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.551757][Remove Method] 'printUsage()' of type 'beaver.comp.run.Make'
  - [26.550132][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$2'
  - [26.484170][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.497363][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.519058][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [26.530052][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [26.508356][Move Method] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.526510][Inline Method] beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log) into beaver.spec.GrammarBuilder.createbeaver.spec.GrammarBuilder(beaver.comp.util.Log)
  - [26.526437][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.537359][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [26.547562][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [26.549603][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.551516][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.572288][Instantiate Method] Move static method 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [26.577390][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.576774][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [26.593474][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [26.597625][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.599812][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [26.616523][Inline Method] beaver.spec.ast.Declaration$PackageName.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$PackageName.accept(beaver.spec.ast.TreeWalker)
  - [26.618094][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.625746][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [26.628660][Introduce Factory] for beaver.comp.run.AntTask.<init>()
  - [26.615468][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.615085][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.597012][Remove Method] 'createbeaver.spec.parser.GrammarParser$Terminals()' of type 'beaver.spec.parser.GrammarParser$Terminals'
  - [26.593186][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.576967][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.576565][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.572192][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.570151][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.544257][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [26.539156][Increase Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.537243][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [26.532320][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.517015][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [26.506812][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [26.496609][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [26.487186][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [26.479534][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.471881][Increase Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.467509][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.457306][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.447103][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [26.414121][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [26.430612][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.460877][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser$Simulator' to static 
  - [26.467492][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [26.489480][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.491129][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.495280][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.508473][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.521665][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.541893][Inline Method] beaver.comp.ParserGenerator.<init>() into beaver.comp.ParserGenerator.createbeaver.comp.ParserGenerator()
  - [26.555573][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [26.575971][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [26.600335][Inline Method] beaver.spec.ast.Declaration$ListType.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$ListType.accept(beaver.spec.ast.TreeWalker)
  - [26.604162][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.633379][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.638239][Remove Method] 'scannerError(beaver.Scanner$Exception)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.638239][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.648876][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.659798][Freeze Method] Convert 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.692779][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [26.816178][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.794551][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.761174][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.754963][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.747310][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.745397][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.684707][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.674503][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [26.609623][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [26.599419][Increase Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.589216][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.584844][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.552403][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [26.545434][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.529213][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.513909][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.513402][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.511489][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.509576][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.487433][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.465746][Inline Method] beaver.Parser$Simulator.reduce(int,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.463833][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.398952][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [26.394580][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.391283][Remove Method] 'createbeaver.comp.run.AntTask()' of type 'beaver.comp.run.AntTask'
  - [26.389370][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.381717][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.379804][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.381605][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [26.390890][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.396016][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.406830][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.408493][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.423798][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.426982][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [26.430043][Decrease Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.435438][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [26.448414][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.471716][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.473516][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.488859][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.499673][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.501586][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.502766][Move Method] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.506592][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.517406][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.513033][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.635388][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.632327][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.574853][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.573673][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.558368][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.556455][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.545641][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.480761][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.448320][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.446656][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.426574][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.424661][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.420288][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.410085][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.405713][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.377139][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.366146][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.358493][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.325512][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.323599][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.319226][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.314555][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.310182][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.309108][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.322300][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.327402][Decrease Method Security] 'makeProductionDescriptors()' of 'beaver.spec.Grammar' to 'PACKAGE'
  - [26.329756][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.351744][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.375045][Freeze Method] Convert 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [26.379418][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.445380][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [26.467893][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.489881][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.489881][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.503389][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.503856][Introduce Factory] for beaver.Symbol.<init>(short)
  - [26.517627][Remove Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.524607][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.528980][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.util.Log)' of 'beaver.comp.State' to 'PACKAGE'
  - [26.528980][Make Class Non-Final] beaver.ParsingTables
  - [26.532381][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.545573][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.555776][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PACKAGE'
  - [26.561898][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.478632][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.476591][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.463175][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.458803][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.456577][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.430599][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.408239][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.403866][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.271620][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.267248][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.262875][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.251502][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.254285][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.265658][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.269809][Freeze Method] Convert 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.280012][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PUBLIC'
  - [26.286836][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.309581][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.325016][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.325817][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.325817][Make Class Final] beaver.comp.ParsingTables
  - [26.330919][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to 'PROTECTED'
  - [26.347978][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.354100][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PUBLIC'
  - [26.365473][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.375221][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [26.390526][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.401447][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [26.435566][Decrease Field Security] 'type' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.446487][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [26.453311][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.454223][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.452631][Remove Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.444979][Increase Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.433606][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.410860][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.401112][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.374305][Move Down Field] 'defs' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [26.362932][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.310105][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.258030][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.255479][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.238706][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.224571][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.214368][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.195806][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [26.194182][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [26.170624][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.152956][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.168299][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [26.170713][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [26.194271][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.201324][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.211527][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [26.211940][Introduce Factory] for beaver.Symbol.<init>()
  - [26.223719][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.241388][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.244789][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.247973][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.252705][Freeze Method] Convert 'yycharat(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.257806][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.293143][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [26.309337][Move Down Field] 'defs' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule'
  - [26.318016][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.326696][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.331797][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PUBLIC'
  - [26.345684][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [26.352627][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.369786][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [26.362347][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.352144][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [26.282710][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PRIVATE'
  - [26.277608][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.242891][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [26.241361][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.223851][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.200706][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.183348][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.148631][Increase Field Security] 'type' of 'beaver.spec.ast.Node' to 'PACKAGE'
