====== Run Result ======

* Name: Beaver|ABC|T50|P100|I7500
  * Run Info: Artificial Bee Colony. Population Size: 100, Max Trials: 50, Iterations: 7500.
  * Time taken: 2734.76 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1504639

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.182550
  * Possible Actions: 620
  * Applied Actions: 511
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9078
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3684
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7789
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 2.9895
    * staticness: 0.1751
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 56.7500
    * iC_Par: 2.6526
    * eC_Par: 3.3158
    * Dep_In: 5.7895
    * avrgMethodVisibility: 1.7195
    * Dep_Out: 5.6421
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [29.006831][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [29.009186][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [29.011540][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [29.012765][Decrease Method Security] 'zzUnpackRowMap(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [29.034752][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [29.038395][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [29.031799][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [29.011771][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [28.983625][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [28.961662][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [28.941634][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [28.954826][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.942080][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [28.891102][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [28.882563][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [28.866208][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [28.864678][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.866136][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.867003][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.862630][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.830222][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [28.821549][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [28.819938][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.784151][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [28.771130][Inline Method] beaver.comp.run.Make.<init>() into beaver.comp.run.Make.createbeaver.comp.run.Make()
  - [28.694979][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [28.684776][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PACKAGE'
  - [28.669510][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [28.657626][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.640411][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.638800][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.634427][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.567558][Introduce Factory] for beaver.comp.util.Log$Record.<init>(int,int,java.lang.String)
  - [28.555549][Instantiate Method] Move static method 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [28.524723][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [28.492315][Freeze Method] Convert 'isRemovable()' of 'beaver.comp.Action$Type' to static 
  - [28.479005][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [28.439632][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [28.432302][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.428254][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [28.392100][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [28.384654][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [28.369350][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.368817][Move Down Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [28.364444][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.360389][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [28.356988][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.346785][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [28.340189][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.312043][Make Class Abstract] beaver.comp.Action
  - [28.301840][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [28.290847][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [28.289656][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.287730][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [28.285929][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.281557][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.259569][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.256168][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.253617][Increase Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.251917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.247518][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.243646][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [28.237049][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.236003][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.231630][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.228229][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.220537][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [28.217136][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.151174][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.121964][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.118563][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [28.115781][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.114804][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [28.049923][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.047462][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [28.047338][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.045537][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.039416][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.035043][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [28.033242][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.030460][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [28.024756][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.024195][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.022394][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.957513][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [27.953140][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.951340][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.949225][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.933920][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.869039][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.862917][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.855583][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [27.790702][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [27.725821][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.724545][Increase Method Security] 'zzUnpackRowMap(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.718057][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.713685][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.710161][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.705060][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.640179][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.638378][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.634005][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.612378][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [27.608006][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.597803][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [27.590150][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.574846][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.574046][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.555992][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.555753][Introduce Factory] for beaver.comp.run.AntTask.<init>()
  - [27.545549][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PRIVATE'
  - [27.535346][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [27.529906][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.523418][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.519045][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.513944][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.506292][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.504105][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.493292][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.483089][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Header' to 'PACKAGE'
  - [27.481176][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.479845][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.473357][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.468984][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.442723][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [27.377842][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [27.362537][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.347232][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.345319][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.344045][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.328741][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.327410][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.312105][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [27.296801][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.296401][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.296223][Move Down Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.292822][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.277518][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [27.275477][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.260172][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.258132][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.247929][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [27.232624][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.230711][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.199885][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.199738][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.184433][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [27.177945][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.176032][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.154405][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.146753][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [27.145036][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [27.141635][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.137262][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [27.130774][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.127373][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.117170][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.106967][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [27.104906][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.072466][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.071416][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.093043][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [27.102417][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [27.119117][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [27.076968][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [27.065787][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [27.065787][Make Class Final] beaver.comp.Action$Shift
  - [27.130668][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [27.132469][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.143282][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.150934][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.181200][Freeze Method] Convert 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [27.246284][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to static 
  - [27.226838][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.236107][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [27.239933][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [27.237892][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.248706][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [27.266235][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [27.331116][Decrease Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.352743][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [27.351118][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.346017][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.328465][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.313161][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.298278][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [27.290149][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.277173][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.212292][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.210252][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.194524][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [27.177817][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.176894][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Shift'
  - [27.166691][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.164505][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.149200][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [27.147287][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.143461][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [27.078580][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PRIVATE'
  - [27.076667][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.075336][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.066067][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.061694][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [27.055573][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.053660][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.051746][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.042767][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.977886][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.962582][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.944191][Move Up Field] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.933988][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [26.931802][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.916497][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [26.914584][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.912398][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.897093][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.881789][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.871586][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.865464][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.844186][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.840583][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.825239][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [26.761405][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.746100][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.720206][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [26.716941][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [26.701637][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.686332][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [26.676129][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [26.665926][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.658756][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [26.654965][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.644762][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.640755][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.636929][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.631827][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.625444][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.621185][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.616812][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.614899][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.603272][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.593069][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [26.595846][Freeze Method] Convert 'yycharat(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.642271][Freeze Method] Convert 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Implements' to static 
  - [26.660930][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [26.665081][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.678762][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.682401][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [26.686552][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.684639][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.686250][Decrease Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.689311][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.699950][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.709324][Freeze Method] Convert 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to static 
  - [26.709324][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [26.699121][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.701034][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [26.718968][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.721751][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.723664][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.710879][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.725328][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.721991][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.714339][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.704136][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.696484][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.690100][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.684999][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.679897][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.669694][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [26.654390][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.650335][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.645995][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.643213][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.633010][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [26.617705][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.585700][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [26.580599][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.557939][Move Method] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Implements' to its parameter type 'beaver.spec.GrammarBuilder'
  - [26.552838][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.550925][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.548142][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.546229][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.544316][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [26.541255][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.549363][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [26.560284][Freeze Method] Convert 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to static 
  - [26.576984][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [26.592943][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.594856][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.599958][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [26.598157][Increase Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.640029][Freeze Method] Convert 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to static 
  - [26.652796][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.660448][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.679107][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [26.691874][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.691874][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.691874][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [26.810906][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.815279][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.816979][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.829543][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [26.838383][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.840296][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.827529][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.825616][Increase Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.823703][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.819498][Remove Method] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.804194][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.796541][Increase Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.792151][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.787778][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.780126][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.778213][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.768010][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.762908][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.760867][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.745563][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.724790][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [26.660955][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PROTECTED'
  - [26.597121][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PACKAGE'
  - [26.595080][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.493996][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.488555][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.484182][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.487821][Freeze Method] Convert 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [26.497090][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [26.515749][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [26.534408][Freeze Method] Convert 'findNextState(int,short)' of 'beaver.ParsingTables' to static 
  - [26.561648][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.580971][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.586365][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [26.569875][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.572061][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [26.613933][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [26.617028][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.625136][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [26.496499][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.501893][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [26.524629][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [26.538045][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.547419][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [26.550603][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.558256][Decrease Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.568459][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [26.566835][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.561625][Remove Method] 'createbeaver.comp.run.AntTask()' of type 'beaver.comp.run.AntTask'
  - [26.560745][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.538385][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.528182][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.505822][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.505699][Instantiate Method] Move static method 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[],beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [26.480946][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.476573][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.474533][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.465110][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [26.463485][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.458467][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [26.453365][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.443162][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.441312][Instantiate Method] Move static method 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [26.431109][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.426007][Increase Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [26.418355][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.405163][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.414586][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [26.451692][Introduce Factory] for beaver.comp.Action$Accept.<init>(beaver.spec.Grammar)
  - [26.464884][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.500127][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal) into beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.506723][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.518394][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.520435][Decrease Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.531429][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.529388][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.538811][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [26.547056][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.557770][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.599649][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of type 'beaver.spec.GrammarBuilder$4'
  - [26.602432][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.725745][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.733397][Decrease Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.733397][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.739885][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.746386][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [26.781948][Instantiate Method] Move static method 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.766409][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [26.764077][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [26.640873][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.618885][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.616123][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.594135][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.592094][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.574777][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.551609][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.543956][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.530764][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.521938][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.511735][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.457547][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of type 'beaver.spec.GrammarBuilder$RuleWalker'
  - [26.455506][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.451861][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.429874][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.407886][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.400234][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.393638][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.389857][Remove Method] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.367870][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.345883][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.345883][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [26.354128][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.356314][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [26.356314][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.358015][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.366260][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.371808][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [26.377930][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [26.390786][Freeze Method] Convert 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [26.384664][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [26.387019][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.403509][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.408075][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.410116][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.413942][Decrease Method Security] 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.420064][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to 'PROTECTED'
  - [26.430267][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [26.432724][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.465705][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [26.468059][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.335548][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.331175][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.326802][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.324616][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.315827][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.319228][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.321414][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.344716][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.371844][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [26.374627][Decrease Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.388307][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.455387][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [26.459760][Decrease Method Security] 'writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.469134][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [26.474236][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.483819][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [26.493401][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [26.494961][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.505164][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Header' to 'PACKAGE'
  - [26.636213][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.654060][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [26.654060][Make Class Final] beaver.comp.Action$Reduce
  - [26.669365][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.674759][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.681356][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.550419][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.542767][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [26.541207][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.539583][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [26.537396][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.530688][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.508328][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.506517][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.496314][Increase Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.491213][Increase Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.424132][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.411355][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.409315][Increase Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.404213][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [26.403945][Remove Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.392765][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.333138][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.328765][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.324393][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.257312][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.252520][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.242937][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [26.209397][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [26.205024][Increase Method Security] 'writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.204371][Instantiate Method] Move static method 'makeDescription(beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.199998][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.203182][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [26.207253][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.220669][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.222229][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.225652][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [26.229821][Move Method] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.243762][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.run.AntTask)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.run.AntTask'
  - [26.262421][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [26.279191][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.284292][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [26.314558][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [26.381638][Decrease Field Security] 'elements' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.403835][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.403835][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.407019][Freeze Method] Convert 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [26.407019][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.430063][Remove Method] 'syntaxError(beaver.Symbol)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.448722][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [26.458670][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [26.463043][Decrease Method Security] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.433209][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.430877][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [26.414107][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.409734][Increase Method Security] 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.405361][Increase Method Security] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.403320][Increase Method Security] 'getOutputFileName()' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.336240][Increase Field Security] 'elements' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.322824][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.250611][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.244721][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [26.182550][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
====== Run Result ======

* Name: Beaver|ABC|T50|P100|I7500
  * Run Info: Artificial Bee Colony. Population Size: 100, Max Trials: 50, Iterations: 7500.
  * Time taken: 2732.73 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1503639

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.796227
  * Possible Actions: 623
  * Applied Actions: 775
  * Num Types: 93
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9389
    * NOC: 0.4731
    * numInterf: 0.0000
    * abstractness: 0.1068
    * packagenesting: 1.5000
    * getters: 0.3548
    * NumAssEl_ssc: 0.0000
    * numOps: 4.8280
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0430
    * staticness: 0.2092
    * numCls: 11.6250
    * numFields: 3.2366
    * NumDesc: 1.1075
    * numOpsCls: 56.1250
    * iC_Par: 2.6452
    * eC_Par: 3.4516
    * Dep_In: 6.1720
    * avrgMethodVisibility: 1.5796
    * Dep_Out: 5.6882
    * setters: 0.1398
    * iFImpl: 0.0000
    * eC_Attr: 1.0108
    * nesting: 0.6022
    * numConstants: 0.9032
    * NumAnc: 1.1075

* Applied Actions:
  - [29.023322][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [28.946249][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [28.932991][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [28.940294][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [28.949718][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [28.944147][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.916381][Freeze Method] Convert 'initStack()' of 'beaver.Parser$Simulator' to static 
  - [28.822365][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.run.Options'
  - [28.782993][Freeze Method] Convert 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to static 
  - [28.783788][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.778686][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [28.777156][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.788149][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [28.770829][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [28.792817][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [28.786695][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.769480][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [28.754176][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [28.770666][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [28.803647][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [28.752669][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [28.713809][Instantiate Method] Move static method 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.709436][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.696126][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [28.658493][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [28.636530][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [28.619315][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.608345][Introduce Factory] for beaver.spec.ast.TreeWalker.<init>()
  - [28.593040][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [28.580294][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [28.560266][Freeze Method] Convert 'findNextState(int,short)' of 'beaver.ParsingTables' to static 
  - [28.535483][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [28.503075][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [28.492081][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [28.487406][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [28.485948][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.419986][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [28.419087][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.417629][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.417068][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.414007][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.412464][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [28.408638][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.402570][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.400481][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.398951][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.395550][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.380245][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [28.378126][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.run.Options'
  - [28.376595][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.373534][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.345389][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [28.342532][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [28.340346][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [28.325042][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [28.211849][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [28.206748][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log,beaver.comp.run.Make)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [28.203476][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.199104][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.192982][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.192902][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [28.192291][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [28.187190][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.180482][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.179024][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.168821][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [28.167424][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.164023][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.162566][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.160954][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.155853][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [28.138256][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [28.104716][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [28.073890][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [28.058585][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.991505][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.986403][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.969460][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.964881][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.954678][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.951277][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.950439][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.946434][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.880471][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.873875][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.867279][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.851974][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.836670][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.830073][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.797092][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.790970][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.790957][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.784360][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.783142][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.780377][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.765072][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.755131][Freeze Method] Convert 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [27.751730][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.745134][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.743434][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.740373][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.725068][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [27.723677][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.713474][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PRIVATE'
  - [27.709101][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.693796][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.687675][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.686054][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.657908][Make Class Abstract] beaver.comp.Action
  - [27.656973][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [27.591011][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.525049][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.492068][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.484970][Move Down Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$RuleWalker'
  - [27.479868][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.475553][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.453565][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [27.437075][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [27.435161][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.428164][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [27.417961][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.GrammarBuilder$RuleWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [27.414938][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [27.413327][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.398022][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.396411][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.391310][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.389699][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.388088][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.382986][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.381375][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.368183][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.366572][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.344584][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.328094][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [27.312789][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.297485][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.282180][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.281867][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.274215][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [27.269114][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.266568][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.251264][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.250983][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.246810][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.241709][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.239553][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.237942][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.222638][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [27.221027][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.214430][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.203437][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.194267][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [27.192567][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.126604][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.116401][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [27.101097][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.090894][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.080691][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.063140][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.047836][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [27.046035][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.042443][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.035846][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.033933][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.033323][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.023283][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [27.012289][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.010759][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.005657][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.004716][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.994513][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.985655][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [26.976990][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [26.975813][Move Down Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [26.975243][Move Down Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [26.959939][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.929112][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [26.913808][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.898631][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [26.898593][Move Up Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.888390][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PACKAGE'
  - [26.881138][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [26.875016][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.864813][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.862900][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.847595][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.845682][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.835479][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PACKAGE'
  - [26.830377][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.824256][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.822342][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.822011][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.821134][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.813481][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.811245][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.806144][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.799548][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.797635][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.795084][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.784881][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [26.782968][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.767663][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [26.757460][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.754909][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.751262][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.743610][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.741059][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.730856][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.728305][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.726677][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.722162][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.715566][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.713941][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.705489][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [26.697837][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.691715][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.681512][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.678329][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [26.676416][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.673633][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.665253][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [26.662192][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.657820][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.653447][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.651534][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.647708][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.637505][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [26.648499][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.707745][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.698789][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [26.680308][Freeze Method] Convert 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to static 
  - [26.680308][Make Class Final] beaver.comp.Configuration
  - [26.700007][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.657648][Introduce Factory] for beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol)
  - [26.659408][Inline Method] beaver.Parser$Simulator.initStack(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.661321][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.676626][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.659476][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [26.663974][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.673348][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [26.684342][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [26.684342][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.699685][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.633722][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.633722][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.637123][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.640763][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [26.630559][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PRIVATE'
  - [26.624933][Move Method] 'compile(beaver.comp.util.Log,beaver.comp.run.Make,beaver.comp.run.Options)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [26.620527][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [26.610324][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PACKAGE'
  - [26.595020][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.584817][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [26.579715][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to 'PRIVATE'
  - [26.572658][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.578779][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [26.588983][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.614610][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.616144][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.626347][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [26.632943][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.643146][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.659637][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.663463][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.665163][Decrease Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.651905][Freeze Method] Convert 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [26.640394][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [26.644766][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [26.667502][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [26.669912][Freeze Method] Convert 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [26.697803][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Shift'
  - [26.668824][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.695512][Inline Method] beaver.spec.ast.Declaration$Header.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Header.accept(beaver.spec.ast.TreeWalker)
  - [26.687197][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [26.703687][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.684037][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.679664][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.675292][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.549529][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.535308][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [26.533395][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.525743][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.508529][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.504907][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.502994][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.501081][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.499168][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.488965][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [26.460216][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [26.450013][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.439810][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.436409][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [26.433114][Instantiate Method] Move static method 'makeDescription(beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.429346][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)
  - [26.427433][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.425732][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.415529][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [26.410428][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to 'PRIVATE'
  - [26.408727][Increase Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.404354][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.387584][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.377381][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [26.367178][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.390480][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.394631][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.398270][Freeze Method] Convert 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.404392][Decrease Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [26.437932][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.471472][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.493832][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.497472][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [26.499032][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.508797][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.518380][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.531796][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.541170][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [26.544231][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.546782][Decrease Method Security] 'compile(beaver.comp.run.Make,beaver.comp.run.Options,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [26.556985][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PACKAGE'
  - [26.573755][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.576109][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.606711][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [26.606711][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.601329][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.599415][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.592793][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [26.592262][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.583121][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.574105][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.565049][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.531509][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [26.521926][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [26.510746][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.508833][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.498630][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [26.490978][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.488099][Move Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [26.484579][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [26.474996][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.468874][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.462752][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.462064][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [26.451861][Increase Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [26.450772][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.444996][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.434793][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [26.432880][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.422677][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.419147][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.414775][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.404572][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PACKAGE'
  - [26.400199][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.392547][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.389996][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.389968][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.385596][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.382813][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.362964][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.352761][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.348993][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.315453][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.305250][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [26.298890][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.288853][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [26.283173][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.281260][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.276887][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.276381][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.261076][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.259163][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.249174][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.228738][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [26.228316][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.215124][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.213211][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.208838][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.201186][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.199272][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.194900][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.192987][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.177682][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.175769][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.232831][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [26.246024][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.255447][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [26.258230][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.262381][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.270033][Decrease Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.273672][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [26.278903][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.291759][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [26.298108][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [26.306232][Move Method] 'compile(beaver.comp.run.Make,beaver.comp.run.Options,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.312354][Decrease Method Security] 'compressActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [26.335656][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [26.343901][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.350023][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.356145][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.356145][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.363797][Decrease Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.364732][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [26.369105][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [26.367192][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.359540][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.358734][Remove Method] 'visit(beaver.spec.ast.Declaration$Imports)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.356693][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.341389][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.213473][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.209100][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.198897][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PRIVATE'
  - [26.194524][Increase Method Security] 'compile(beaver.comp.run.Make,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [26.193449][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.183867][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [26.173664][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [26.172693][Remove Method] 'compile(beaver.comp.run.Make,beaver.comp.run.Options,beaver.comp.util.Log)' of type 'beaver.comp.io.SrcReader'
  - [26.166571][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.188931][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.225968][Instantiate Method] Move static method 'writeListsCode(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.NonTerminal'
  - [26.221595][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.218432][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.235202][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.239575][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [26.250755][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.250755][Make Class Final] beaver.comp.Action$Shift
  - [26.264171][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.284210][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.287271][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.288662][Decrease Method Security] 'syntaxError(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Symbol' to 'PUBLIC'
  - [26.315172][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.383925][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of type 'beaver.comp.Action$Reduce'
  - [26.389320][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [26.411680][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [26.416733][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [26.449926][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.543009][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [26.545807][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [26.526660][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.518236][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [26.495128][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [26.490708][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.484395][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [26.473441][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.467253][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [26.456073][Increase Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.453911][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [26.451098][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.405622][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.398914][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.397379][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.395316][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.372956][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.117005][Remove Class] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [26.114942][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.112880][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.106692][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.100255][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.067422][Move Method] 'writeListsCode(beaver.spec.GrammarBuilder)' of 'beaver.spec.NonTerminal' to its parameter type 'beaver.spec.GrammarBuilder'
  - [26.060125][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.060069][Remove Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.062278][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.062278][Make Class Final] beaver.comp.ParsingTables
  - [26.075695][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.098055][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.114825][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.116887][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.123595][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.132082][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [26.133718][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.133718][Make Class Final] beaver.comp.Configuration$Set
  - [26.140453][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [26.154757][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [26.162492][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule' to 'PUBLIC'
  - [26.169621][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.171257][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.171608][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.182788][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.195430][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [26.208846][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.211940][Decrease Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.204206][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.181845][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.179636][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.169323][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [26.154158][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.131798][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.130200][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.124013][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.123623][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.092717][Remove Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [26.074376][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.073967][Move Up Field] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.067779][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.065569][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.058203][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [26.047023][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.069383][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.073803][Decrease Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.076013][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.098869][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [26.100546][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.105999][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [26.119831][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$2'
  - [26.126960][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.130398][Decrease Method Security] 'makeStates(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.158833][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.286919][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.298099][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.313568][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.335928][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.344894][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.367640][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.366122][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.400241][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [26.400241][Make Class Non-Final] beaver.comp.Configuration
  - [26.418276][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [26.411452][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.409242][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.404823][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.397088][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PRIVATE'
  - [26.292851][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.291213][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [26.268069][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.244924][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.227565][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.158131][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PROTECTED'
  - [26.123414][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [26.095541][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.081894][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.077474][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.073054][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.004817][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PACKAGE'
  - [26.000398][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.999298][Remove Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of type 'beaver.spec.GrammarBuilder$3'
  - [25.996918][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.996525][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.992105][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.996525][Decrease Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.009519][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.017254][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.040543][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.051916][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.074661][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.082396][Decrease Method Security] 'shift(short)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.084974][Decrease Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.100482][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [26.100482][Make Class Final] beaver.comp.Action$Accept
  - [26.114130][Decrease Field Security] 'zzCurrentPos' of 'beaver.Scanner' to 'PROTECTED'
  - [26.115926][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.138671][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [26.150044][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.159519][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [26.161899][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.172595][Move Down Field] 'yycolumn' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.162282][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [26.164662][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.177670][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.109433][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PRIVATE'
  - [26.105013][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.093058][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.085323][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.056748][Remove Method] 'createbeaver.spec.parser.GrammarParser$Terminals()' of type 'beaver.spec.parser.GrammarParser$Terminals'
  - [26.045000][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.042937][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.038323][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.015578][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.013828][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.009408][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.002124][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.992173][Remove Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [25.969427][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [25.978872][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [26.002249][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [26.007032][Freeze Method] Convert 'yycharat(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.138365][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.144516][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [26.147355][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.157668][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PACKAGE'
  - [26.158908][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [26.165095][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.195687][Freeze Method] Convert 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to static 
  - [26.229462][Move Method] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [26.263002][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.278510][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.406247][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [26.408853][Decrease Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [26.410447][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [26.420075][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [26.421840][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.469275][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to static 
  - [26.473567][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.467349][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.464943][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.448235][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [26.414093][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.412138][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.396501][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.385321][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.254404][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.238447][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [25.955991][Remove Class] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [25.947725][Instantiate Method] Move static method 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [25.937300][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PRIVATE'
  - [25.932314][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.930470][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.928064][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.970847][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [25.980426][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [25.982380][Decrease Method Security] 'getNonTerminals(beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [25.999440][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.035015][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to static 
  - [26.052075][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.058329][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.091149][Inline Method] beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Implements.createbeaver.spec.ast.Declaration$Implements(beaver.Symbol[])
  - [26.091149][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [26.093274][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [26.104647][Decrease Field Security] 'yycolumn' of 'beaver.Scanner' to 'PROTECTED'
  - [26.116019][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.123838][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [26.135211][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [26.128956][Increase Method Security] 'createbeaver.spec.ast.TreeWalker()' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.130911][Decrease Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.137206][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.168130][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to static 
  - [26.177709][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [26.179943][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [26.147691][Move Method] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.139872][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.137918][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.115172][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.109960][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.087214][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.084458][Inline Method] beaver.spec.ast.Declaration$ClassName.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$ClassName.accept(beaver.spec.ast.TreeWalker)
  - [26.082664][Move Method] 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.076409][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [26.076302][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.058813][Remove Method] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.047440][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.013322][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [25.979203][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [25.962809][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [25.956554][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [25.945181][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [25.943428][Remove Method] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of type 'beaver.spec.GrammarBuilder$5'
  - [25.926368][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [25.909309][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [25.900472][Remove Method] 'makeDescription(java.lang.String)' of type 'beaver.comp.State'
  - [25.898066][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.932185][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [25.945832][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [25.993954][Inline Method] beaver.spec.ast.Declaration$Terminals.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Terminals.accept(beaver.spec.ast.TreeWalker)
  - [26.004379][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PACKAGE'
  - [26.018027][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.027606][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [26.033901][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.050960][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [26.050960][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [26.182675][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.193855][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.224779][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [26.248971][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [26.283765][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[]) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])
  - [26.285719][Decrease Method Security] 'newSymbol(short,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.299136][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.302611][Decrease Method Security] 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.304003][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [26.311210][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [26.317465][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.315874][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [26.302458][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.287409][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [26.285456][Remove Method] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [26.279201][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.272946][Increase Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.270991][Increase Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.203911][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.192577][Move Down Field] 'yycolumn' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.175807][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [26.142267][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.108726][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.075186][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.059549][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [26.048509][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [26.035093][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.001553][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [25.956827][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [25.954422][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.951550][Remove Method] 'createbeaver.spec.parser.GrammarScanner()' of type 'beaver.spec.parser.GrammarScanner'
  - [25.939771][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [25.937686][Increase Method Security] 'newSymbol(short,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.935936][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.920299][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [25.860592][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [25.909056][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)
  - [25.924694][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [25.928169][Decrease Method Security] 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [25.962287][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [25.977924][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [25.989084][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [25.989084][Make Class Final] beaver.comp.State
  - [25.994321][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [25.996071][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.001283][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.014931][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.058652][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1) into beaver.comp.Configuration$Set.createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)
  - [26.062127][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [26.085508][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.091763][Decrease Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.125881][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.144947][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [26.155372][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [26.158499][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.161627][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.156414][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.153287][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [26.153128][Introduce Factory] for beaver.Symbol.<init>()
  - [26.137491][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [26.114110][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.112360][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.097859][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [26.087289][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [26.087140][Introduce Factory] for beaver.Symbol.<init>(short)
  - [26.071502][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [26.069116][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [26.034998][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.021350][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.021210][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [26.010785][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [25.976667][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [25.970412][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.965199][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [25.954775][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [25.950667][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [25.916549][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [25.864832][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [25.862426][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.862058][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.851633][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [25.845378][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [25.855803][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [25.857599][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.861508][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [25.861508][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [25.892432][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to static 
  - [25.893480][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [25.893802][Move Down Field] 'zzStartRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [25.895552][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [25.963788][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [25.982854][Freeze Method] Convert 'start()' of 'beaver.comp.util.Log$Record$List' to static 
  - [25.982854][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [25.988067][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [25.994890][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.001185][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.008009][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [25.890817][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [25.933600][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [25.933600][Make Class Final] beaver.comp.State$Factory
  - [25.940544][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [25.942949][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.927445][Inline Method] beaver.Parser$Simulator.increaseStackCapacity(beaver.Parser$Simulator) into beaver.Parser$Simulator.shift(short)
  - [25.915873][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [25.881156][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [25.874901][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [25.864476][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [25.864344][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [25.863309][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [25.852884][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [25.847671][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [25.837247][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [25.835466][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.830729][Remove Method] 'makeDescription(beaver.comp.Action$Reduce,java.lang.String)' of type 'beaver.comp.State'
  - [25.828324][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.817899][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [25.807474][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [25.804087][Remove Method] 'visit(beaver.spec.ast.Declaration$Terminals,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [25.796227][Introduce Factory] for beaver.Parser$Simulator.<init>(beaver.Parser)
====== Run Result ======

* Name: Beaver|ABC|T50|P100|I7500
  * Run Info: Artificial Bee Colony. Population Size: 100, Max Trials: 50, Iterations: 7500.
  * Time taken: 2627.76 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1503032

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.981410
  * Possible Actions: 624
  * Applied Actions: 468
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.8832
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3474
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7684
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 2.9895
    * staticness: 0.1453
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 56.6250
    * iC_Par: 2.6526
    * eC_Par: 3.2632
    * Dep_In: 5.7053
    * avrgMethodVisibility: 1.8025
    * Dep_Out: 5.6421
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [28.999867][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.988874][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [29.099050][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [29.108319][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [29.108319][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [29.104918][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [29.098430][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [29.112333][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [29.116706][Decrease Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [29.103396][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [29.057137][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [29.070113][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [29.063149][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.986076][Introduce Factory] for beaver.spec.ast.Declaration$Error.<init>()
  - [28.953668][Freeze Method] Convert 'isRemovable()' of 'beaver.comp.Action$Type' to static 
  - [28.960156][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [28.963217][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [28.946862][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [28.953350][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.951819][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.947447][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.945916][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.934265][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [28.915784][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [28.850903][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [28.794934][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [28.780433][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [28.767175][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [28.728314][Instantiate Method] Move static method 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.672570][Introduce Factory] for beaver.comp.Action$Accept.<init>(beaver.spec.Grammar)
  - [28.644805][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [28.623178][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [28.595412][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to static 
  - [28.578197][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [28.467289][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [28.450074][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.447013][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.425026][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.409721][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [28.397430][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [28.387146][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [28.377021][Freeze Method] Convert 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.370425][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.360222][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [28.357161][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [28.310736][Freeze Method] Convert 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to static 
  - [28.306363][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.305687][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [28.304156][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.302626][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.299225][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.297971][Move Down Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [28.293201][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.277681][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [28.274280][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.272669][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.206707][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.203119][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [28.198746][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.195345][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.194907][Move Down Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [28.188310][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.187743][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [28.172438][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [28.170738][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.155433][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [28.149312][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [28.083349][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [28.078977][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [28.078065][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [28.067072][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [28.049056][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [28.020910][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [28.015809][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [28.011436][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.004840][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.003039][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.992836][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.991036][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.984914][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.974711][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [27.959406][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.957606][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.954205][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.950804][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.949579][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.939376][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.935004][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.930631][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.928830][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.922708][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.920908][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.914786][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.911385][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.904789][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.889484][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.887684][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.881213][Move Down Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [27.875614][Move Down Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$RuleWalker'
  - [27.871241][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.866140][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.835313][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.820009][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.819279][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.817238][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.801933][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.800723][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.796350][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.794948][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [27.792907][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.787831][Introduce Factory] for beaver.Symbol.<init>(short)
  - [27.783459][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.779086][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.776572][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [27.774871][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.770499][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.760296][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$RuleWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [27.758595][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.757456][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.742151][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.734732][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [27.712745][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.710518][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.700315][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [27.685010][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.681609][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.615647][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.600343][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.592893][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [27.577589][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.511627][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [27.509272][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.507241][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [27.491937][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.487564][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.485209][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.482855][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.476259][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.475697][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.474822][Move Down Method] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Accept'
  - [27.459517][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.426536][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [27.426335][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [27.420213][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.404908][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [27.402210][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.402043][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [27.401998][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [27.391004][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.383674][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [27.383466][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.352640][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.350839][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.325711][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [27.310406][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.310028][Move Up Method] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [27.305356][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.298715][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [27.297532][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [27.295908][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [27.293995][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.239274][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.237650][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [27.211756][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [27.201552][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PACKAGE'
  - [27.193900][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [27.183697][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PACKAGE'
  - [27.116617][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.083077][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [27.072874][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [27.066166][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.999085][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [26.988882][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PRIVATE'
  - [26.975466][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.965263][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.973878][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.976064][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [26.977163][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.983285][Decrease Method Security] 'compressActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [27.006586][Freeze Method] Convert 'start()' of 'beaver.comp.util.Log$Record$List' to static 
  - [27.006586][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [27.007917][Decrease Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.007917][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.024017][Instantiate Method] Move static method 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [27.027418][Decrease Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [27.034518][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [27.037578][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [27.084003][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [27.087188][Freeze Method] Convert 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [27.083921][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.093295][Freeze Method] Convert 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to static 
  - [27.100003][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.108388][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.113490][Decrease Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.117641][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [27.102221][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.097340][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.051705][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.State'
  - [27.044997][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.011457][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.988316][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [26.986131][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.982730][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.976608][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.974142][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.907061][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [26.921200][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.924488][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [26.935409][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [26.946331][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [26.955914][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [26.967520][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.967520][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.972988][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.978833][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [26.977649][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [26.980833][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [26.986405][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [26.986405][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [26.994790][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.018475][Introduce Factory] for beaver.spec.Grammar$Exception.<init>(java.lang.String)
  - [27.028058][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [27.031459][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [27.034860][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [27.036773][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.046147][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [27.044234][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.041960][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [27.032624][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.030711][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.017481][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [27.014152][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.012238][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.010398][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.981378][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.979023][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [26.968820][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PRIVATE'
  - [26.966907][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.964994][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.963081][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.864137][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.860608][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.855146][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.849269][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.843147][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.839379][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [26.835325][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.820020][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.754058][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.738753][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [26.723449][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [26.713246][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.707124][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.705211][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.689906][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.559611][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.550996][Move Method] 'compile(beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [26.547935][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.550712][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [26.573072][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.589842][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.592903][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.608246][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [26.656402][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.659586][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [26.670507][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [26.673568][Decrease Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.688873][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.704216][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.713590][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [26.700349][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.State'
  - [26.708958][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [26.732260][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [26.729199][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.729199][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.595085][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.647828][Instantiate Method] Move static method 'compile(beaver.comp.run.Options,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.run.Options'
  - [26.645788][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.616282][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.610160][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [26.588393][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.571334][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.569421][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.565048][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.554845][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PACKAGE'
  - [26.546247][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.527444][Inline Method] beaver.Parser$Simulator.increaseStackCapacity(beaver.Parser$Simulator) into beaver.Parser$Simulator.shift(short)
  - [26.515200][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.492454][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.486308][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [26.472661][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.462458][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.462458][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.466830][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.476579][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [26.485137][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.486748][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.496951][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.565188][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [26.587933][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.604858][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [26.602817][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.614190][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.629495][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.647071][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.658444][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.666096][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [26.731943][Move Down Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its child class 'beaver.spec.ast.Declaration$TypeOf'
  - [26.726152][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action'
  - [26.718643][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [26.721704][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.721712][Move Method] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [26.695693][Move Method] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.694069][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.689696][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.688072][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [26.685838][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.680622][Remove Method] 'createbeaver.spec.parser.GrammarScanner()' of type 'beaver.spec.parser.GrammarScanner'
  - [26.668994][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.659411][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [26.592331][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [26.590418][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.588505][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.578302][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.578302][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.562997][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.559171][Increase Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.545261][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.539908][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [26.538284][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.471203][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [26.334642][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.329309][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.314004][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PROTECTED'
  - [26.309523][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [26.301871][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.299324][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [26.289576][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [26.286515][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.283859][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.279486][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.135387][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.133474][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.123271][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.121358][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.118985][Move Down Method] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Accept'
  - [26.118977][Move Method] 'indexOfLastReferencedSymbol(beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Production$RHS' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [26.114433][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.112520][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.117915][Freeze Method] Convert 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.123310][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.132144][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.133788][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.147923][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.158019][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.192838][Freeze Method] Convert 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassCode' to static 
  - [26.202212][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [26.202212][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [26.208708][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [26.218672][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [26.218672][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.239937][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.310610][Decrease Field Security] 'terminals' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [26.325915][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [26.343583][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.345227][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.347140][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.344335][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [26.362003][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [26.346699][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PROTECTED'
  - [26.344786][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.321228][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.315446][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [26.300669][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.293016][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PROTECTED'
  - [26.288644][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.284321][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [26.270187][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.268274][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.240128][Make Class Abstract] beaver.comp.Action
  - [26.224823][Increase Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.217171][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PACKAGE'
  - [26.203946][Move Method] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassCode' to its parameter type 'beaver.spec.GrammarBuilder'
  - [26.171716][Remove Method] 'createbeaver.Scanner$Exception()' of type 'beaver.Scanner$Exception'
  - [26.159937][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.132219][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.108232][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.089264][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.073959][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PACKAGE'
  - [26.066307][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.051002][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PRIVATE'
  - [26.050728][Move Method] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [26.043075][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.040015][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [26.046136][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.081473][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.086868][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [26.098647][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.098647][Make Class Final] beaver.comp.Action$Reduce
  - [26.129949][Inline Method] beaver.spec.ast.Declaration$Goal.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Goal.accept(beaver.spec.ast.TreeWalker)
  - [26.136071][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.144179][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.152609][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [26.159356][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [26.169452][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [26.169452][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [26.169726][Move Method] 'indexOfLastReferencedSymbol(beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Production$RHS' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [26.193028][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.228365][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.229976][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.247644][Decrease Field Security] 'txt' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [26.247644][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.250705][Decrease Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.260908][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.245604][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PACKAGE'
  - [26.210267][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.198488][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.180819][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.165515][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PRIVATE'
  - [26.160073][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.159799][Move Method] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [26.152147][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.146025][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.128356][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.126745][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [26.116542][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.106446][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.035772][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.029650][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.028007][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.023634][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.021990][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.057327][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.072632][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [26.089977][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.093647][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [26.102481][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.105032][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.135446][Remove Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of type 'beaver.spec.GrammarBuilder$1'
  - [26.138223][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [26.144345][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.147984][Freeze Method] Convert 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.171285][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [26.178938][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [26.190544][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.234672][Instantiate Method] Move static method 'compile(beaver.comp.run.Options)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.run.Options'
  - [26.234672][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [26.270009][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [26.276131][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [26.276660][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [26.280486][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.286769][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.284855][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.262953][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.261678][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.257852][Increase Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.255301][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.219964][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.218051][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.202746][Increase Method Security] 'compile()' of 'beaver.comp.run.Options' to 'PRIVATE'
  - [26.132072][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.129522][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.126461][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.091124][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.089211][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.077432][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.006758][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [25.981410][Remove Method] 'compile()' of type 'beaver.comp.run.Options'
====== Run Result ======

* Name: Beaver|ABC|T50|P100|I7500
  * Run Info: Artificial Bee Colony. Population Size: 100, Max Trials: 50, Iterations: 7500.
  * Time taken: 2642.44 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1503057

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.860024
  * Possible Actions: 660
  * Applied Actions: 687
  * Num Types: 94
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9098
    * NOC: 0.4787
    * numInterf: 0.0000
    * abstractness: 0.1063
    * packagenesting: 1.5000
    * getters: 0.3617
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7766
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0213
    * staticness: 0.1771
    * numCls: 11.7500
    * numFields: 3.2021
    * NumDesc: 1.1170
    * numOpsCls: 56.1250
    * iC_Par: 2.6489
    * eC_Par: 3.3085
    * Dep_In: 5.9043
    * avrgMethodVisibility: 1.6790
    * Dep_Out: 5.6702
    * setters: 0.1383
    * iFImpl: 0.0000
    * eC_Attr: 1.0000
    * nesting: 0.6277
    * numConstants: 0.8936
    * NumAnc: 1.1170

* Applied Actions:
  - [28.988350][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [29.021331][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [29.018706][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [29.008503][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [28.932353][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [28.934054][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [29.039953][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [29.025451][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [29.022050][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [29.023851][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [29.026401][Decrease Method Security] 'makeStates(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [29.028952][Decrease Method Security] 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [29.035333][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [29.038394][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [29.042892][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [29.035928][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [29.025216][Introduce Factory] for beaver.spec.ast.TreeWalker.<init>()
  - [29.005188][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [28.972779][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to static 
  - [28.955565][Freeze Method] Convert 'findOffset(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [28.954334][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [28.941588][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [28.895163][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [28.893705][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.889332][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.885931][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.884540][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.807467][Introduce Factory] for beaver.spec.ast.Declaration$Error.<init>()
  - [28.785780][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.779397][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.769273][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.768048][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [28.663710][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.run.Options'
  - [28.662318][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.647817][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [28.571667][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [28.549584][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.run.Options'
  - [28.545211][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.520761][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [28.506260][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [28.492253][Freeze Method] Convert 'start()' of 'beaver.spec.Production$List' to static 
  - [28.487880][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.484479][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.483022][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.481564][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.470925][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [28.465824][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.455974][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [28.449590][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.447392][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [28.383557][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.379887][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [28.375515][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [28.373984][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.372454][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.366430][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log,beaver.comp.run.Make)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [28.334512][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.328129][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.325103][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [28.322993][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.307688][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.306158][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.284879][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [28.256734][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [28.247489][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [28.236850][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [28.224083][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [28.160249][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [28.132103][Make Class Abstract] beaver.comp.Action
  - [28.127002][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.125777][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.117463][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [28.115762][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.083845][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [28.083799][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [28.082852][Move Down Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [28.082807][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [28.081006][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.077922][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.076370][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [28.061065][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [28.044722][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [28.040868][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [28.035767][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.029645][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.965811][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.962808][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.952605][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.937300][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.921996][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [27.920083][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.915710][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.914486][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.899181][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.890435][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [27.859609][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.844305][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.834102][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.834057][Introduce Factory] for beaver.Symbol.<init>(short)
  - [27.827674][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.827508][Move Down Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.825595][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.823554][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.816081][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [27.814168][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.810767][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.804645][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.740810][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.740767][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [27.737602][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.735562][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.733444][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.733321][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.729327][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.726035][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.722597][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.707292][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.643458][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [27.641545][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.630906][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.626855][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.623454][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.613251][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [27.606867][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.543033][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.511116][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.447281][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.360957][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.345653][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.339164][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.323860][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.313657][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.311744][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.309703][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.308079][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [27.292774][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.290734][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.286400][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.255573][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.254043][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.247921][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.237718][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [27.233149][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.227028][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.233083][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.243286][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PUBLIC'
  - [27.245327][Decrease Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [27.246857][Decrease Method Security] 'writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.256126][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [27.264234][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [27.306105][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [27.307436][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.312168][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.328388][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.331789][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.348009][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.343187][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.343187][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.352472][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.357867][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [27.387018][Instantiate Method] Move static method 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [27.389205][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [27.400126][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [27.384822][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.380676][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.363968][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.358870][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.354498][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.354166][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [27.232257][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.228856][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.223368][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.220101][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [27.181435][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.176189][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.172788][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.106825][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.096622][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [27.092090][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.088111][Move Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [27.083738][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.081697][Increase Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [27.079784][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.064480][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.056019][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [27.049325][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.041673][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.038272][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.038229][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [27.035206][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [27.030104][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.028191][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.024790][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.022877][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.020964][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.017563][Increase Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.012462][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.009061][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.007669][Increase Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.007669][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [27.018663][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.020603][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.026725][Decrease Method Security] 'reduce(int)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.032157][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [27.045350][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.061840][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [27.131478][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to static 
  - [27.139130][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [27.143109][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [27.151217][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [27.273510][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [27.262696][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [27.264474][Freeze Method] Convert 'yycharat(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.263378][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.263378][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [27.271380][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [27.279032][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Error' to 'PUBLIC'
  - [27.275631][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.265428][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PROTECTED'
  - [27.232987][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [27.217683][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.201738][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.190840][Instantiate Method] Move static method 'compile(beaver.comp.util.Log,beaver.comp.run.Make)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.run.Make'
  - [27.187953][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.172649][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.164996][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [27.161017][Move Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [27.154895][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.122455][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [27.107150][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [27.103854][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [27.099909][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [27.093420][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.090233][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [27.025352][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [27.025067][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.011253][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.003601][Increase Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [26.997479][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.982175][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.917294][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.909824][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [26.899621][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.884316][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.874113][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.863910][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.857788][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.731697][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.724478][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [26.706893][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [26.703549][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [26.697427][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [26.694090][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.710790][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [26.713201][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [26.697896][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [26.697896][Make Class Final] beaver.comp.Action$Accept
  - [26.701701][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.699347][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.701147][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.704786][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.704786][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.706827][Decrease Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.712949][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [26.722372][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [26.726011][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.732758][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [26.736247][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.758234][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.760147][Decrease Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.760147][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [26.853226][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.857377][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.853004][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.837700][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [26.835787][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.835434][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.819213][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.817300][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.813868][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.807612][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.799960][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.799772][Introduce Factory] for beaver.Symbol.<init>()
  - [26.792785][Instantiate Method] Move static method 'compile(beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [26.788412][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.778209][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PACKAGE'
  - [26.770557][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.768644][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.764271][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.637884][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.633511][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.625859][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.623505][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.622937][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.612734][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.603594][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.599221][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.595892][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.593851][Increase Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.578547][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.574369][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.554719][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.529590][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [26.531589][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.578014][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [26.594505][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.613164][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [26.627155][Introduce Factory] for beaver.Parser$Events.<init>()
  - [26.629154][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.633526][Decrease Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.639780][Inline Method] beaver.comp.run.Make.compile(beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.642134][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.642024][Introduce Factory] for beaver.Parser$Simulator.<init>(beaver.Parser)
  - [26.650269][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.668928][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.668754][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [26.679748][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.684120][Decrease Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.679748][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.681661][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.714642][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.714642][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.779359][Inline Method] beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ConstructorCode.createbeaver.spec.ast.Declaration$ConstructorCode(beaver.Symbol)
  - [26.775223][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.773769][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.768668][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [26.735687][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.731014][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.715710][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.714774][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.699469][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [26.695940][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.685736][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.678084][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.677010][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.672637][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.670724][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.665622][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.663561][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.653358][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.648985][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.646631][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.642863][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.640949][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.604630][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [26.588139][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.585589][Increase Method Security] 'createbeaver.spec.ast.TreeWalker()' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.583038][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.561051][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.559010][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.493048][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PROTECTED'
  - [26.418166][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.416253][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.404685][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.397033][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.391931][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.389381][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.378201][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.375650][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.360345][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.345041][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.342490][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.347305][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.360721][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.343951][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.276871][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PACKAGE'
  - [26.276871][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [26.276871][Make Class Final] beaver.comp.Configuration
  - [26.292214][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.287841][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.287841][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.289946][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [26.321248][Inline Method] beaver.spec.ast.Declaration$Goal.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Goal.accept(beaver.spec.ast.TreeWalker)
  - [26.316875][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.321026][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.336110][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [26.358470][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.360383][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.393923][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.403506][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.403506][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [26.411891][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.411275][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [26.405398][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.401630][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.379270][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.365854][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.363303][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.360752][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.327212][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.317009][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.312636][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.310085][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.294781][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.281962][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.275747][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [26.272965][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.262762][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PACKAGE'
  - [26.286063][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [26.291165][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [26.304581][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.310703][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.320906][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [26.337116][Inline Method] beaver.comp.Action$List.<init>(beaver.comp.State) into beaver.comp.Action$List.createbeaver.comp.Action$List(beaver.comp.State)
  - [26.352459][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [26.349654][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [26.351750][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.353937][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [26.363311][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [26.373294][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [26.375390][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.383042][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.380259][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.397103][Inline Method] beaver.Parser$Events.<init>() into beaver.Parser$Events.createbeaver.Parser$Events()
  - [26.419463][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.423614][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.426397][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.435980][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [26.430627][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [26.421044][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [26.410841][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.410678][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [26.406616][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.391311][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.386938][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.375965][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.366382][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.310425][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.304452][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [26.294249][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [26.277797][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.274736][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.251991][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.244169][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [26.228864][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PROTECTED'
  - [26.226951][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.222578][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.217986][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.205810][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [26.203897][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.200156][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [26.198243][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.189714][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [26.187800][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.174153][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.158849][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PACKAGE'
  - [26.157759][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.163881][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [26.163881][Make Class Final] beaver.comp.State$Factory
  - [26.165794][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [26.177167][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.245404][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [26.247605][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.252198][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.253791][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [26.263994][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PROTECTED'
  - [26.272524][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.277625][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to 'PACKAGE'
  - [26.262321][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PROTECTED'
  - [26.277113][Remove Method] 'visit(beaver.spec.ast.Declaration$Goal)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.277113][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.290760][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.299290][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.310256][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.313317][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.319439][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.321640][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.306336][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.298683][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.296482][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.286701][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.284660][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.279500][Move Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [26.275127][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.259823][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PACKAGE'
  - [26.257782][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.253409][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.249036][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.246254][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.236051][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [26.167814][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [26.086236][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.081863][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.093236][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.102610][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [26.125912][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.145808][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.148163][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.150349][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [26.150349][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [26.150349][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.167408][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.197673][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [26.206609][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.209670][Decrease Method Security] 'insert(beaver.Symbol,beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [26.213697][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [26.206667][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.214642][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.199337][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PRIVATE'
  - [26.208422][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.213671][Decrease Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PROTECTED'
  - [26.236417][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.245791][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [26.243087][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [26.235435][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.233968][Instantiate Method] Move static method 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.State'
  - [26.222595][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.218815][Remove Method] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.211098][Move Method] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.188352][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.186077][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.183891][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.044631][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.034428][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [26.032241][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.030053][Move Method] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.027867][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.022145][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.009439][Remove Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.003654][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [26.001104][Increase Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [25.990901][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [25.982823][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [25.982231][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [25.981312][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [25.978766][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action$2'
  - [25.967193][Increase Field Security] 'elements' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [25.949835][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [25.942183][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [25.957704][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String)
  - [25.968634][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [25.987294][Freeze Method] Convert 'shift(short)' of 'beaver.Parser$Simulator' to static 
  - [25.998215][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [26.004337][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule' to 'PUBLIC'
  - [26.002883][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.004683][Decrease Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.022042][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.027002][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.096436][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [26.155161][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [26.152974][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.158076][Decrease Method Security] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.186623][Remove Method] 'scannerError(beaver.Scanner$Exception)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.186623][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [26.209924][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.224101][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.244140][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.246326][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.250152][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.244228][Move Down Field] 'defs' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [26.227015][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.225100][Remove Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [26.219999][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.209796][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PACKAGE'
  - [26.207464][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [26.205132][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [26.192962][Remove Method] 'createbeaver.ParsingTables()' of type 'beaver.ParsingTables'
  - [26.178450][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [26.164991][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [26.155399][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.153213][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.118496][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.114772][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [26.109670][Increase Method Security] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.079913][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.010479][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.008292][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.000355][Inline Method] beaver.Parser$Simulator.shift(short,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [25.930921][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PRIVATE'
  - [25.939029][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [25.941811][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [25.957116][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [25.958727][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [25.970299][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [25.983155][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [25.986556][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [25.993609][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [25.999731][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.002514][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.009579][Inline Method] beaver.comp.util.BitSet.<init>(int) into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [26.021151][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.032724][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.038119][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [26.038119][Make Class Non-Final] beaver.comp.Action$Accept
  - [26.076716][Inline Method] beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser(beaver.comp.util.Log)
  - [26.078516][Decrease Method Security] 'newSymbol(short,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.080703][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.086627][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.069268][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.064167][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.059794][Increase Method Security] 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [25.990360][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [25.980157][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PRIVATE'
  - [25.977970][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.970001][Inline Method] beaver.comp.State.createbeaver.comp.Action$List() into beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [25.965629][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [25.962823][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [25.956582][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [25.954395][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.942616][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [25.938244][Increase Method Security] 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [25.936369][Remove Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of type 'beaver.spec.GrammarBuilder$3'
  - [25.931997][Increase Method Security] 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [25.930235][Remove Method] 'visit(beaver.spec.ast.Declaration$Header)' of type 'beaver.spec.GrammarBuilder$3'
  - [25.920138][Increase Field Security] 'elements' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [25.915037][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.910090][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [25.927449][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [25.948101][Inline Method] beaver.comp.ParserGenerator.<init>() into beaver.comp.ParserGenerator.createbeaver.comp.ParserGenerator()
  - [26.012819][Inline Method] beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Terminals.createbeaver.spec.ast.Declaration$Terminals(beaver.Symbol[])
  - [26.026705][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.030345][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.037398][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.034847][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.057991][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.071878][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.075704][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.078019][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.080802][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.115519][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [26.130730][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.135831][Decrease Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.233548][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [26.244636][Freeze Method] Convert 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.263544][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.261725][Increase Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.293458][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.270313][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.235596][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [26.233972][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [26.220085][Increase Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.208709][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [26.199953][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [26.184578][Move Method] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.173006][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.171273][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int,beaver.comp.util.BitSet) into beaver.comp.util.BitSet.add(int)
  - [26.166705][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [26.157381][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.152225][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.151740][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.134382][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.133477][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.130571][Move Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.128751][Increase Method Security] 'newSymbol(short,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.872260][Remove Class] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [25.883832][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [25.888988][Decrease Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [25.902875][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [25.905270][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.908077][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [25.910889][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [25.907490][Instantiate Method] Move static method 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [25.922998][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to static 
  - [25.925576][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [25.929014][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [25.931826][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [25.920254][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [25.928933][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [25.935121][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [25.937934][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [25.947853][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [25.957772][Decrease Field Security] 'elements' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [25.965218][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [25.977567][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [25.986811][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [25.974462][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [25.971218][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [25.969275][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [25.964961][Inline Method] beaver.spec.ast.Declaration$Terminals.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Terminals.accept(beaver.spec.ast.TreeWalker)
  - [25.958773][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [25.953617][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [25.947693][Move Down Field] 'defs' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [25.945115][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [25.935871][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.925558][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [25.919370][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [25.909730][Move Method] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [25.907152][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.904574][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.899014][Remove Method] 'visit(beaver.spec.ast.Declaration$PackageName,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [25.894594][Increase Method Security] 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [25.889437][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [25.885018][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.880598][Increase Method Security] 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [25.872178][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.864443][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [25.860024][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
====== Run Result ======

* Name: Beaver|ABC|T50|P100|I7500
  * Run Info: Artificial Bee Colony. Population Size: 100, Max Trials: 50, Iterations: 7500.
  * Time taken: 2732.23 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1504322

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.193881
  * Possible Actions: 630
  * Applied Actions: 377
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9307
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3474
    * NumAssEl_ssc: 0.0000
    * numOps: 4.8105
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.1513
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 57.1250
    * iC_Par: 2.6737
    * eC_Par: 3.2000
    * Dep_In: 5.7053
    * avrgMethodVisibility: 1.7748
    * Dep_Out: 5.6737
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [29.000709][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [29.017200][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [29.017072][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [29.017072][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [29.033563][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [29.016348][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.940198][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [28.945299][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [28.946833][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.948634][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [28.953735][Decrease Method Security] 'shift(short)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [28.923895][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.846822][Introduce Factory] for beaver.spec.ast.Declaration$Error.<init>()
  - [28.832321][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [28.854308][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [28.780117][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to static 
  - [28.796608][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [28.783862][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [28.771215][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [28.787706][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [28.777503][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [28.775972][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.701781][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to static 
  - [28.693243][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [28.627281][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.614535][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [28.604410][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.597447][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.558074][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [28.542807][Freeze Method] Convert 'hasCollisions()' of 'beaver.comp.ParsingTables' to static 
  - [28.509715][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [28.473561][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [28.466965][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.465434][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.450933][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [28.437094][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [28.430498][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.420374][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.403029][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [28.401805][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [28.400274][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.398305][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [28.383000][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.382059][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.378997][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [28.378873][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.378269][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [28.362965][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [28.361434][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.295472][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [28.293861][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.292327][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [28.292282][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [28.283734][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [28.283728][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.282117][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.278716][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.273477][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [28.258172][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [28.247969][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [28.246850][Move Down Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [28.233658][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [28.229285][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.227585][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.224184][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.221670][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.218269][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.200146][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.174252][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [28.169879][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [28.166478][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.164778][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.160405][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.157004][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.141699][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [28.140088][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.124784][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [28.108563][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [28.093259][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [28.083990][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [28.077868][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.077612][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [28.076336][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.074725][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.074164][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.073708][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [28.072097][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.068573][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [28.003692][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.938811][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.937111][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.932738][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.928365][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.863484][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.856996][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.852623][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.787742][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.784865][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.774662][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.774618][Introduce Factory] for beaver.Symbol.<init>()
  - [27.774576][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [27.770073][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.754768][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.749113][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.745712][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.680831][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.615950][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [27.614253][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [27.608131][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.487308][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.465321][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.458724][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.452603][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.448230][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.443857][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.433654][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.431741][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.398760][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.383455][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.380054][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.364750][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.349445][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [27.347532][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.345831][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.339235][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.280242][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.278541][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.250396][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.248482][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.246782][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.236579][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.220411][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.210208][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PACKAGE'
  - [27.179381][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.177468][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.143928][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.128624][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.126710][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.111406][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.107033][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.106213][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.101840][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.079480][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [27.064175][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [27.054592][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.046940][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.045316][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$2'
  - [27.040943][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.050526][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [27.049015][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action'
  - [27.064319][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to 'PACKAGE'
  - [27.065930][Decrease Method Security] 'getTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.078786][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [27.082187][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [27.090095][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [27.112456][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [27.114369][Decrease Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.123743][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [27.128115][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [27.253630][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [27.254858][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.254858][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [27.260980][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [27.262781][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.265558][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [27.140043][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [27.143945][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [27.151636][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [27.148235][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.144834][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.134631][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [27.131230][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.064150][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.063822][Move Method] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action$Shift,beaver.comp.State)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.Action$Shift'
  - [27.060421][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.047073][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [27.046006][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [27.025564][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [27.024115][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [27.023706][Introduce Factory] for beaver.Symbol.<init>(short)
  - [26.995560][Make Class Abstract] beaver.comp.Action
  - [26.980255][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.943672][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.939134][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [26.936012][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [26.928360][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.920707][Increase Method Security] 'resolveConflict(beaver.comp.util.Log,beaver.comp.State,beaver.comp.Action)' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [26.906550][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.899305][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [26.889102][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [26.882394][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.880694][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.870491][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.866118][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.862847][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [26.852644][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.845936][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.830631][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [26.826258][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.819550][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.786010][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.770705][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.766333][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.766156][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.759448][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.749245][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.748169][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.747796][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [26.732491][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [26.730466][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.730466][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.731473][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.733033][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.735444][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.737004][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.741376][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.757230][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [26.824310][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.839615][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.861624][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [26.880284][Freeze Method] Convert 'get(int)' of 'beaver.comp.util.IntArray' to static 
  - [26.886405][Decrease Method Security] 'reduce(int)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.886537][Remove Method] 'visit(beaver.spec.ast.Declaration$Header)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.884505][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [26.899848][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.916618][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.930993][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.935365][Decrease Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.953213][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [26.969983][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.936443][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.902903][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.897025][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.890381][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.856840][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.853762][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.842682][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [26.840641][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.836644][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.819874][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [26.818250][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.816210][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.808557][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [26.804185][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.797298][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.781993][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.778400][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [26.768817][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [26.735277][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.668197][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.601117][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.623853][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [26.646213][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.647734][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [26.661150][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.645846][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.679386][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.681086][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.682646][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.689699][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.704073][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [26.727758][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [26.705398][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.724057][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.737473][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.780869][Inline Method] beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$RightAssoc.createbeaver.spec.ast.Declaration$RightAssoc(beaver.Symbol[])
  - [26.783930][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.781598][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [26.804241][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.813615][Freeze Method] Convert 'readToken()' of 'beaver.Parser$TokenStream' to static 
  - [26.815175][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.812843][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [26.809603][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.787243][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.785683][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.770378][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.767573][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.761447][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Shift'
  - [26.753794][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.738490][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [26.734664][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.719359][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [26.713474][Move Method] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.705345][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.691929][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.682346][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [26.667041][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.660011][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.656185][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.652755][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.552134][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.529329][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.527742][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.527410][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.519565][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.513443][Increase Method Security] 'reduce(int)' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.509787][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.503665][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.499293][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [26.489090][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.437686][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of type 'beaver.spec.Production$1'
  - [26.427925][Inline Method] beaver.comp.ParsingTables.hasCollisions(beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.418761][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.414388][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.412801][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.410888][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.410511][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [26.328933][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.325106][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.325106][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [26.338754][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.345577][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.356950][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.356950][Make Class Final] beaver.comp.Configuration
  - [26.361995][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [26.429035][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.442451][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [26.444011][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.450133][Decrease Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [26.456255][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.439485][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.445607][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [26.456537][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [26.461932][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [26.463492][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.466686][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.465126][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.532187][Inline Method] beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol) into beaver.spec.ast.Rule$Definition$Element.createbeaver.spec.ast.Rule$Definition$Element(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.534374][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.522732][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [26.518809][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.506634][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.493442][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.491908][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.360888][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.357062][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.287324][Move Down Field] 'type' of 'beaver.spec.ast.Declaration' to its child class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [26.283497][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.282575][Instantiate Method] Move static method 'makeDescription(beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.274922][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PROTECTED'
  - [26.271096][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.267270][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.263444][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.229326][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [26.227701][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.215735][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.200774][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.210148][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [26.179321][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [26.183147][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.186332][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.189392][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.212138][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.217240][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.223400][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.230958][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.244627][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [26.261327][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [26.266428][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to 'PROTECTED'
  - [26.270254][Decrease Method Security] 'findOffset(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.273894][Freeze Method] Convert 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [26.275474][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.345404][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.356326][Freeze Method] Convert 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to static 
  - [26.386591][Freeze Method] Convert 'start()' of 'beaver.spec.Production$List' to static 
  - [26.388151][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.396943][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [26.260698][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.243639][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.235986][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PACKAGE'
  - [26.213241][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.211195][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [26.209608][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.207505][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [26.203679][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.201533][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.193881][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
====== Run Result ======

* Name: Beaver|ABC|T50|P100|I7500
  * Run Info: Artificial Bee Colony. Population Size: 100, Max Trials: 50, Iterations: 7500.
  * Time taken: 2683.12 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1504003

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.071335
  * Possible Actions: 616
  * Applied Actions: 547
  * Num Types: 94
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9184
    * NOC: 0.4787
    * numInterf: 0.0000
    * abstractness: 0.1113
    * packagenesting: 1.5000
    * getters: 0.3511
    * NumAssEl_ssc: 0.0000
    * numOps: 4.8298
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0213
    * staticness: 0.1888
    * numCls: 11.7500
    * numFields: 3.2021
    * NumDesc: 1.1170
    * numOpsCls: 56.7500
    * iC_Par: 2.6702
    * eC_Par: 3.2979
    * Dep_In: 5.9149
    * avrgMethodVisibility: 1.6860
    * Dep_Out: 5.6915
    * setters: 0.1383
    * iFImpl: 0.0000
    * eC_Attr: 1.0000
    * nesting: 0.6277
    * numConstants: 0.8936
    * NumAnc: 1.1170

* Applied Actions:
  - [28.979527][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [28.977996][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.977996][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.912034][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.892006][Freeze Method] Convert 'findNextState(int,short)' of 'beaver.ParsingTables' to static 
  - [28.893463][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.865697][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [28.851890][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [28.850359][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.810987][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [28.804023][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.786809][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.803299][Decrease Field Security] 'txt' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [28.807672][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [28.809206][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.773052][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [28.760761][Freeze Method] Convert 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [28.745457][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [28.748518][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [28.672368][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [28.670834][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [28.652353][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [28.633398][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.623274][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.618901][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.562932][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [28.511954][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [28.507581][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.496395][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.471945][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [28.470488][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.455221][Freeze Method] Convert 'findOffset(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [28.450781][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [28.407566][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [28.331415][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [28.218445][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.211849][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.209755][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [28.208173][Move Up Method] '<init>(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [28.204657][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.203127][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.201596][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.195474][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.192335][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.187542][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [28.184141][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.180442][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.175341][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.172436][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [28.170906][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.155601][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [28.150500][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.147229][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.140632][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.139102][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.123797][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.095652][Make Class Abstract] beaver.comp.Action
  - [27.978629][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.975385][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [27.962410][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int,beaver.comp.ParsingTables)
  - [27.951230][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.935926][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.934395][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.930974][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.863894][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.852714][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.821887][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.788347][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.784946][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.783246][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.776538][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.709457][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.705085][Increase Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [27.700036][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [27.693914][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.698287][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.702784][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [27.703610][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.711718][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [27.714501][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.834803][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.833103][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.898187][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to static 
  - [27.888166][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.899381][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [27.915872][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.857147][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [27.855178][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.856955][Freeze Method] Convert 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.858489][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.855199][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.861758][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [27.894740][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [28.010262][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [28.016544][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [28.011443][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.008888][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.993584][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.983381][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.980126][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.978515][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.946074][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.913634][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.910177][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.845296][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.823721][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.State'
  - [27.809024][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [27.793719][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.788618][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.779581][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [27.685524][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [27.681876][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [27.671673][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.668891][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.667190][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.651886][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [27.646784][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.640188][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.635086][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.630718][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.624596][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.618000][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.616935][Move Down Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.615134][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.613334][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.547371][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PROTECTED'
  - [27.540444][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [27.538644][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.523339][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [27.521377][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int,beaver.comp.ParsingTables)
  - [27.455414][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PACKAGE'
  - [27.449292][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.432802][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.428308][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.425243][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.418647][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.403343][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.388038][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.385255][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.368439][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [27.353134][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [27.342931][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [27.337460][Move Down Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$RuleWalker'
  - [27.335419][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.333885][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.323682][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.313479][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$RuleWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [27.311438][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.296134][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.294093][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.291597][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.289556][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.287516][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.286894][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [27.260195][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [27.249992][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.247530][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.242006][Move Down Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$RuleWalker'
  - [27.226701][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.221600][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.216498][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.216375][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.216143][Move Down Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.209547][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.205672][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.201845][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.187542][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [27.172237][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.156932][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.152560][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.148734][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.142137][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.139076][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.133085][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.130024][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.119821][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$RuleWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [27.109618][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [27.018171][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.016470][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.015375][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.010273][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.040539][Freeze Method] Convert 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [27.033552][Instantiate Method] Move static method 'compile(beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [27.036736][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.040887][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [27.042447][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.052030][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [27.061404][Freeze Method] Convert 'readToken()' of 'beaver.Parser$TokenStream' to static 
  - [27.058854][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.092625][Inline Method] beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol) into beaver.spec.ast.Declaration$TypeOf.createbeaver.spec.ast.Declaration$TypeOf(beaver.Symbol[],beaver.Symbol)
  - [27.092625][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [27.096998][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.099184][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.116109][Introduce Factory] for beaver.spec.ast.Declaration$Error.<init>()
  - [27.183190][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.205550][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.224209][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [27.239513][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PUBLIC'
  - [27.256283][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.265866][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [27.279282][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [27.271630][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.269717][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.263595][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.261044][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.258770][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [27.253669][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.251756][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.249843][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.247930][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.244869][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.214042][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.209670][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.208533][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [27.182639][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [27.172366][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.167077][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.164393][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.160020][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.152368][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [27.137063][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.130467][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.126094][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [27.116954][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.106751][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [27.091446][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.085701][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.080672][Inline Method] beaver.Parser$TokenStream.readToken(beaver.Parser$TokenStream) into beaver.Parser$TokenStream.nextToken()
  - [27.070469][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [27.069065][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [27.066515][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.063964][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.062051][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.060427][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [27.056054][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.053271][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.051358][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.036053][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [27.032652][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.030952][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.027067][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.011762][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [26.945800][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PROTECTED'
  - [26.932608][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.930695][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.928781][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.925999][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.918347][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.915564][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.913539][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.904825][Move Method] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.876679][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [26.873897][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.857406][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.855493][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.847841][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.838267][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.836643][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$2'
  - [26.832476][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.817171][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.809519][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.806736][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.796533][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.792160][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.776856][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.710893][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PACKAGE'
  - [26.688738][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.670257][Freeze Method] Convert 'removeResolvedActions()' of 'beaver.comp.Action$List' to static 
  - [26.648269][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.638066][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.631944][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [26.631412][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [26.609425][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.607512][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.605599][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.602538][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.597436][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.582132][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.577759][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.574553][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.572640][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.557335][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.572678][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.585871][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.709389][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.741830][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [26.741830][Make Class Final] beaver.comp.Configuration$Set
  - [26.748883][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [26.759119][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.775073][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [26.767524][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [26.837161][Freeze Method] Convert 'nextToken()' of 'beaver.Scanner' to static 
  - [26.879033][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [26.943914][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [26.957594][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.963622][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.978927][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.991903][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [27.007207][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [27.015817][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [27.018308][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.026416][Freeze Method] Convert 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [27.011111][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.006738][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.997470][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.965029][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.949724][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [26.946323][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.933347][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.927225][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.911921][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [26.911382][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.909469][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.901817][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.899719][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.881080][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.878020][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.861350][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.851147][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.849234][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.844861][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.840489][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.830286][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.829211][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.819008][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.762379][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.737370][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.732528][Inline Method] beaver.comp.Action$List.removeResolvedActions(beaver.comp.Action$List) into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)
  - [26.718218][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.671876][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.657719][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.647516][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.632211][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.612476][Remove Method] 'printVersion()' of type 'beaver.comp.run.Make'
  - [26.601103][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.599479][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [26.589276][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PRIVATE'
  - [26.584903][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.517063][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.447629][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.437426][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.417911][Move Method] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.417027][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of type 'beaver.spec.GrammarBuilder$2'
  - [26.412654][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.406455][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.391150][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.389237][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.387324][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.364179][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.359807][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.349887][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [26.342235][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.326930][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.322558][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.332477][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [26.343398][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [26.350342][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.380496][Inline Method] beaver.spec.ast.Declaration$LeftAssoc.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$LeftAssoc.accept(beaver.spec.ast.TreeWalker)
  - [26.387243][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [26.326552][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.335727][Introduce Factory] for beaver.Parser$Simulator.<init>(beaver.Parser)
  - [26.338510][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.343611][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.355183][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.357966][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.369538][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.384843][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.393522][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.405095][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.399993][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [26.399993][Move Up Field] 'name' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.406936][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.415626][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [26.418687][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.415626][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.392481][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.369337][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.361433][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.355051][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.339747][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.323805][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.308500][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.304127][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.281382][Increase Field Security] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.272852][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [26.287226][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [26.294279][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.307926][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.315579][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PUBLIC'
  - [26.329226][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.335348][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [26.346270][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [26.409196][Move Down Field] 'type' of 'beaver.spec.ast.Declaration' to its child class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [26.424539][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [26.426452][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.429853][Decrease Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [26.437505][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [26.459734][Remove Method] 'errorPhraseRemoved(beaver.Symbol)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.472245][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [26.498811][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.474895][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.535278][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [26.540673][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [26.568764][Inline Method] beaver.spec.ast.Declaration$ClassCode.visit(beaver.spec.GrammarBuilder) into beaver.spec.ast.Declaration$ClassCode.accept(beaver.spec.ast.TreeWalker)
  - [26.588435][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.557141][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.523600][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [26.521013][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [26.515911][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.513579][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [26.508478][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.390384][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.367638][Increase Field Security] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.362536][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.348889][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.335242][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.310221][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.240360][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.238552][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [26.227179][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.227179][Make Class Final] beaver.comp.State$Factory
  - [26.237382][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [26.239295][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.251360][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.292865][Inline Method] beaver.spec.ast.Declaration$PackageName.visit(beaver.spec.GrammarBuilder) into beaver.spec.ast.Declaration$PackageName.accept(beaver.spec.ast.TreeWalker)
  - [26.302239][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.302239][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [26.312095][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.335780][Introduce Factory] for beaver.spec.Grammar$Exception.<init>(java.lang.String)
  - [26.338563][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.340476][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.370047][Inline Method] beaver.Parser$Simulator.<init>(beaver.Parser) into beaver.Parser$Simulator.createbeaver.Parser$Simulator(beaver.Parser)
  - [26.374198][Freeze Method] Convert 'getTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.376111][Decrease Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.377736][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.384559][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.393264][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.400088][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.408617][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.408617][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [26.408181][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.386279][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.386113][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.384200][Increase Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.370552][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.237034][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.221039][Move Down Field] 'name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [26.223225][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [26.246370][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.247012][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [26.247012][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [26.248712][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.252113][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.293985][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to static 
  - [26.299086][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.303785][Remove Method] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.313705][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [26.327591][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.337510][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [26.347714][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PROTECTED'
  - [26.444922][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [26.451865][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PUBLIC'
  - [26.463437][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.487039][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.505947][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [26.528639][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.529082][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.518927][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [26.507973][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.201771][Remove Class] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.196615][Increase Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.194961][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.193028][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.191094][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.179522][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.176180][Move Up Field] 'state' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [26.171148][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$4)' of type 'beaver.spec.GrammarBuilder$4'
  - [26.168789][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [26.158693][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [26.156759][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.151603][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.137468][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.135534][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.138628][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.140347][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.145787][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.148224][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [26.151661][Decrease Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.169330][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.169330][Make Class Final] beaver.comp.ParsingTables
  - [26.164173][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.233316][Inline Method] beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol) into beaver.spec.ast.Rule$Definition$Element.createbeaver.spec.ast.Rule$Definition$Element(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.234999][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.234999][Move Down Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its child class 'beaver.spec.ast.Declaration$TypeOf'
  - [26.235442][Introduce Factory] for beaver.Symbol.<init>(short)
  - [26.235442][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [26.244918][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [26.248355][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.256090][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [26.259309][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [26.276977][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.307568][Freeze Method] Convert 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to static 
  - [26.309692][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [26.295730][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [26.267128][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.256815][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [26.186141][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [26.175828][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [26.174009][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.162230][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.156922][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.146609][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.123051][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.137186][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.145039][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [26.168597][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.194620][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [26.197433][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.239997][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)
  - [26.246184][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.276312][Instantiate Method] Move static method 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.286625][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [26.286625][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.292078][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [26.327415][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.346275][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.358054][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PUBLIC'
  - [26.354616][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.378174][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.387650][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [26.387650][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.395845][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to static 
  - [26.416190][Remove Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.391533][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [26.367975][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.353864][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.351505][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [26.347044][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.329376][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.317513][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [26.282176][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.280576][Move Down Field] 'zzEndRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.256590][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.249394][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.231404][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.221125][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.071335][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
====== Run Result ======

* Name: Beaver|ABC|T50|P100|I7500
  * Run Info: Artificial Bee Colony. Population Size: 100, Max Trials: 50, Iterations: 7500.
  * Time taken: 2851.23 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1507261

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.333201
  * Possible Actions: 587
  * Applied Actions: 497
  * Num Types: 94
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9283
    * NOC: 0.4787
    * numInterf: 0.0000
    * abstractness: 0.1113
    * packagenesting: 1.5000
    * getters: 0.3617
    * NumAssEl_ssc: 0.0000
    * numOps: 4.8191
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0213
    * staticness: 0.1795
    * numCls: 11.7500
    * numFields: 3.2021
    * NumDesc: 1.1170
    * numOpsCls: 56.6250
    * iC_Par: 2.6596
    * eC_Par: 3.3404
    * Dep_In: 5.8617
    * avrgMethodVisibility: 1.8129
    * Dep_Out: 5.6809
    * setters: 0.1383
    * iFImpl: 0.0000
    * eC_Attr: 1.0000
    * nesting: 0.6277
    * numConstants: 0.8936
    * NumAnc: 1.1170

* Applied Actions:
  - [28.971600][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [28.971600][Make Class Final] beaver.comp.Action$Accept
  - [28.975426][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [28.966172][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [28.968527][Decrease Method Security] 'findOffset(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.929666][Instantiate Method] Move static method 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.901521][Make Class Abstract] beaver.comp.Action
  - [28.905113][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.862603][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [28.873597][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [28.878698][Decrease Method Security] 'reduce(int)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [28.847872][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [28.800261][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String)
  - [28.779296][Instantiate Method] Move static method 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.795786][Decrease Field Security] 'txt' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [28.806780][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [28.782330][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [28.787848][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [28.770633][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [28.731261][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [28.711233][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [28.709702][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.640065][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to static 
  - [28.615615][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to static 
  - [28.600310][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [28.578323][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.566806][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.560210][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.483137][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [28.470846][Freeze Method] Convert 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [28.459584][Instantiate Method] Move static method 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.393622][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.375421][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [28.372787][Freeze Method] Convert 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to static 
  - [28.366665][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.365135][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.354141][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [28.349768][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.336576][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [28.314589][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.311065][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [28.306272][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [28.302262][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [28.286957][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [28.285427][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.282366][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.277993][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.276463][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.266259][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PROTECTED'
  - [28.235433][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [28.205593][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.195390][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [28.129428][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [28.127897][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.124201][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.108896][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [28.070751][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.069220][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.065372][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.063842][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.048537][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [28.047007][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.042634][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.036146][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.031773][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.966892][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [27.964950][Move Down Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.960577][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.895696][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.880391][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.854497][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [27.844294][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PACKAGE'
  - [27.840288][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [27.831019][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.824531][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.818409][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.816798][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.751917][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [27.687036][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.684705][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.683094][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.677993][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.676080][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.674167][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.675675][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.669554][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.666493][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.677414][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [27.694114][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [27.698822][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [27.702223][Decrease Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [27.704774][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.710896][Decrease Method Security] 'createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [27.705989][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.709390][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [27.712574][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [27.709173][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.719810][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [27.715916][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.717603][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [27.719214][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.720495][Introduce Factory] for beaver.Symbol.<init>()
  - [27.736715][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [27.736715][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.731614][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.644428][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.642817][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.627512][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.612208][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.607106][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.541144][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.536043][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.532642][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.521273][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [27.517872][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [27.513500][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.498195][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.496584][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.455299][Remove Method] 'createbeaver.Scanner$Exception()' of type 'beaver.Scanner$Exception'
  - [27.414680][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.410307][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.406906][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.399337][Introduce Factory] for beaver.Symbol.<init>(short)
  - [27.396901][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.395201][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.391800][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.390099][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.386420][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.385759][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.384765][Freeze Method] Convert 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [27.318803][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [27.312206][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.308086][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.306285][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.310186][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.311797][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [27.306695][Increase Method Security] 'createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [27.327354][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.328888][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.330422][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.331956][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.342714][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [27.342714][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [27.334601][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [27.351092][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [27.367582][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.367489][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [27.367489][Make Class Final] beaver.comp.ParsingTables
  - [27.369100][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [27.388033][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [27.393428][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [27.394962][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.405956][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.415330][Freeze Method] Convert 'removeResolvedActions()' of 'beaver.comp.Action$List' to static 
  - [27.400025][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [27.384721][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.383110][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.377668][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [27.376134][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.366711][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.343570][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [27.342606][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [27.338450][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.336410][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.333009][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.317704][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.305324][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [27.295901][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.292500][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.289099][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.287475][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [27.283102][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.267797][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.262864][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [27.247559][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [27.242864][Inline Method] beaver.comp.Action$List.removeResolvedActions(beaver.comp.Action$List) into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [27.227896][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.219308][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.215482][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.212081][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.209020][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.193716][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [27.192105][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.183429][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.168124][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [27.159320][Move Method] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [27.151667][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.145546][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.137893][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.137554][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.135943][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.117232][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [27.112859][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [27.112509][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.084363][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.082739][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [27.076355][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.070234][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.065861][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.033944][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [27.027560][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.019908][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [27.013524][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.007403][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.005362][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.990057][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.974753][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.972712][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.968886][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [26.979525][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.981056][Decrease Method Security] 'zzUnpackAttribute(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.990175][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [27.023367][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.028705][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [27.030316][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.024402][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [27.033522][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [27.035562][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [27.043214][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.054136][Freeze Method] Convert 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to static 
  - [27.038831][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.042143][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [27.045204][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [27.163557][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [27.174479][Freeze Method] Convert 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [27.176665][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.176665][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [27.176665][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [27.199646][Inline Method] beaver.comp.Action$List.<init>(beaver.comp.State) into beaver.comp.Action$List.createbeaver.comp.Action$List(beaver.comp.State)
  - [27.191994][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.176289][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [27.173957][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [27.165145][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [27.164089][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [27.159399][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.149196][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.086375][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [27.071070][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.066697][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.066276][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int,beaver.comp.util.BitSet) into beaver.comp.util.BitSet.add(int)
  - [27.060533][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [27.054013][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [26.934393][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.925274][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [26.922277][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.912074][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Goal' to 'PACKAGE'
  - [26.894886][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.892973][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.882293][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.879511][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PRIVATE'
  - [26.849459][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.843709][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [26.838658][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.833359][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [26.818055][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.796777][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.791298][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.784914][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.797770][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [26.854833][Introduce Factory] for beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [26.856873][Decrease Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.898745][Freeze Method] Convert 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to static 
  - [26.898745][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.908948][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [26.939213][Freeze Method] Convert 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [26.939213][Make Class Final] beaver.comp.State
  - [26.945597][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.948658][Decrease Method Security] 'insert(beaver.Symbol,beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.952484][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.954095][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.938790][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [26.939028][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.943179][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.947330][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.957970][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [26.970826][Freeze Method] Convert 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to static 
  - [26.974465][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.972749][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.962546][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.962414][Inline Method] beaver.comp.State.findLookaheads(beaver.comp.State) into beaver.comp.State.findLookaheads()
  - [26.959353][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.948714][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.916796][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.915201][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.884803][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.882959][Instantiate Method] Move static method 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[],beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [26.759030][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.754657][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.684969][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.669664][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.667623][Increase Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.660294][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.660294][Make Class Final] beaver.comp.Action$Shift
  - [26.666454][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.675828][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [26.683936][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [26.684338][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.685949][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.688148][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.677945][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.680300][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.693492][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.697643][Freeze Method] Convert 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.714343][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [26.720465][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.753446][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.755633][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [26.775189][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [26.776800][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.779861][Decrease Method Security] 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.782922][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.784531][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.769226][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.767615][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.765971][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [26.762910][Increase Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.757164][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.749078][Move Up Field] 'name' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.747847][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.747290][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [26.745377][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.743277][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [26.740216][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.723784][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.716960][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.703313][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.642622][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.636419][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.628767][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.627156][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.625545][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.491562][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.489376][Increase Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.488995][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.487384][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.484601][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.478870][Move Method] 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.State'
  - [26.489073][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.493224][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [26.523980][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.529766][Decrease Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.545071][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.552124][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.554037][Decrease Method Security] 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.574046][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.577107][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.578887][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.589809][Freeze Method] Convert 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to static 
  - [26.596752][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.604532][Inline Method] beaver.spec.Production$RHS.<init>() into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS()
  - [26.615453][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [26.617064][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.615284][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.622227][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.637642][Move Method] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [26.644694][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to static 
  - [26.634775][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [26.619471][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [26.563514][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.553310][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.541227][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.526266][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.520480][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.518869][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.517645][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal,beaver.comp.ParserGenerator$CompiledParser)
  - [26.486669][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [26.471365][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.468560][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [26.458357][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.427601][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.425501][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [26.422100][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.411897][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Goal' to 'PRIVATE'
  - [26.403906][Inline Method] beaver.comp.State.createbeaver.comp.Action$List(beaver.comp.Action$List) into beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [26.398120][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.387917][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.386306][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.371001][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.369390][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.371576][Decrease Method Security] 'init()' of 'beaver.Parser' to 'PACKAGE'
  - [26.375216][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [26.409933][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [26.412715][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [26.426602][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.437524][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [26.439710][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PROTECTED'
  - [26.504794][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [26.521494][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [26.524895][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.547512][Introduce Factory] for beaver.Parser$Simulator.<init>(beaver.Parser)
  - [26.553298][Decrease Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [26.686381][Move Down Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition'
  - [26.686381][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.692503][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [26.695280][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.702103][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.702103][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [26.705743][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [26.716664][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [26.712292][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.576172][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.574259][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.572015][Instantiate Method] Move static method 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [26.570101][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.432333][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.427961][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.423588][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.372184][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of type 'beaver.spec.Production$2'
  - [26.367812][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.374864][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.376475][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.384583][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to static 
  - [26.391914][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.415215][Freeze Method] Convert 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to static 
  - [26.418276][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.422412][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.453717][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.453717][Make Class Non-Final] beaver.ParsingTables
  - [26.467398][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [26.471983][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [26.436646][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.450781][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.461702][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [26.467824][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [26.478010][Instantiate Method] Move static method 'renumberSymbols(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.ParsingTables'
  - [26.485340][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.499475][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.499475][Make Class Final] beaver.comp.Configuration$Set
  - [26.502258][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [26.490479][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.482827][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.451522][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.437387][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.437123][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [26.422988][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.422380][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.421972][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.386635][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [26.367559][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.374646][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [26.376832][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PUBLIC'
  - [26.385537][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.388702][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.392528][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [26.416649][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.422770][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [26.453852][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [26.461182][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.467304][Decrease Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [26.467259][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [26.470444][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.520129][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift,beaver.comp.State)' of type 'beaver.comp.State'
  - [26.566554][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [26.572443][Decrease Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.673486][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [26.691155][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.694593][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.702185][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.713964][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.711802][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [26.658879][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [26.627574][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.625412][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [26.355658][Remove Class] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.355610][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [26.355202][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.378760][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.392895][Move Down Field] 'n_terms' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [26.408403][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.419443][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.437111][Decrease Field Security] 'zzReader' of 'beaver.Scanner' to 'PROTECTED'
  - [26.447207][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [26.447207][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.465903][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.468997][Decrease Method Security] 'compressActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [26.470809][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.484943][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.503804][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [26.505432][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.523024][Inline Method] beaver.comp.util.BitSet.<init>(int) into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [26.524836][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.548389][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.562523][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.633197][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.633197][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.640553][Instantiate Method] Move static method 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.637459][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.631272][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [26.621175][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [26.619242][Increase Method Security] 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.475366][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.460974][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.442984][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.418998][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.347039][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.335046][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.333201][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
====== Run Result ======

* Name: Beaver|ABC|T50|P100|I7500
  * Run Info: Artificial Bee Colony. Population Size: 100, Max Trials: 50, Iterations: 7500.
  * Time taken: 2732.48 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1504415

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.931962
  * Possible Actions: 631
  * Applied Actions: 598
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.8849
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3579
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7895
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 2.9684
    * staticness: 0.1758
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 56.8750
    * iC_Par: 2.6526
    * eC_Par: 3.2421
    * Dep_In: 5.8211
    * avrgMethodVisibility: 1.6444
    * Dep_Out: 5.6211
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [29.008055][Decrease Method Security] 'zzUnpackTrans(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [29.118052][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [29.104794][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [29.065422][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [29.050155][Freeze Method] Convert 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [29.115036][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [29.118096][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [29.105350][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [29.010412][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.run.Options'
  - [29.011921][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [29.024897][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [29.029999][Decrease Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [29.071547][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.State'
  - [29.027890][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [29.014580][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [29.011179][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [29.011974][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.999228][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [28.989103][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.938125][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [28.918097][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [28.890331][Freeze Method] Convert 'shift(short)' of 'beaver.Parser$Simulator' to static 
  - [28.875026][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [28.853399][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [28.838094][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [28.831606][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.820089][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.813125][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.811922][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [28.735772][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [28.703364][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [28.656939][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [28.655408][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.619255][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [28.605416][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [28.597072][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [28.582396][Freeze Method] Convert 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to static 
  - [28.581327][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.run.Options'
  - [28.578239][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.564998][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.561482][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [28.558081][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.554865][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [28.551464][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.538488][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [28.535087][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [28.530348][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [28.528817][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.506979][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.502606][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.487302][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [28.485917][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [28.484387][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.477260][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [28.446434][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [28.443074][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.442453][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.440922][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.439542][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [28.435716][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.434185][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.423982][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [28.422452][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.418079][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.417797][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [28.417496][Freeze Method] Convert 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.353661][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [28.347278][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.342935][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.339926][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [28.338395][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.329687][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [28.328076][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.327412][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.325711][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.323012][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)
  - [28.307707][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [28.198632][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [28.133752][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PROTECTED'
  - [28.129379][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.125006][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.118884][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.115483][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.110382][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.106009][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [28.099521][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.093497][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [28.003224][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [27.937262][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.927058][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [27.925447][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.859485][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.855112][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.844909][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [27.778947][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.772351][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.706389][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.691084][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.684488][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.683389][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.679988][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.678377][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.674004][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.673415][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [27.672450][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.665119][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.663508][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.597546][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.531584][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.523931][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.522320][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.520929][Increase Method Security] 'zzUnpackTrans(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.505624][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.495421][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.480117][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.478204][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.450058][Make Class Abstract] beaver.comp.Action
  - [27.441359][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [27.431156][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [27.400329][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.398629][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.392507][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.377202][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.375113][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.371712][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.338731][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.323427][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [27.314934][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [27.314664][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.313085][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.297780][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.290128][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.284006][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.268702][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.253397][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [27.238092][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.234915][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [27.232623][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.204477][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.138515][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.123211][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [27.121953][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [27.118197][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.116284][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.100979][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.071139][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [27.061716][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.065702][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.075125][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [27.080184][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [27.075082][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.067301][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.069655][Decrease Method Security] 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [27.076734][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [27.083330][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.083330][Make Class Final] beaver.comp.Configuration
  - [27.092035][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.125016][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [27.125016][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.141716][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [27.206800][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to static 
  - [27.220468][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [27.216423][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.206220][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [27.214089][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [27.209716][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.225370][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [27.159408][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PACKAGE'
  - [27.149205][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PRIVATE'
  - [27.106397][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.090944][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.089031][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.078828][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.074455][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.072542][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.021138][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of type 'beaver.spec.GrammarSymbol$1'
  - [27.014277][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [26.997569][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.997269][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.964288][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [26.954085][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [26.938780][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [26.934407][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.919103][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [26.908900][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [26.904527][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.890126][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [26.874821][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [26.864618][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [26.860359][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.855986][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.846563][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.879544][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.883183][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.885370][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.004920][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.989958][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.992145][Decrease Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.111302][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.119422][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short,beaver.Parser$Simulator)
  - [27.124466][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.147768][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser$Simulator' to static 
  - [27.263143][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [27.268119][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [27.152744][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [27.216579][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [27.273641][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [27.275827][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.291604][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [27.312003][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [27.305881][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.309282][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.305685][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.302052][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.298177][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.296620][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.294433][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.290580][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.288394][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.281889][Move Method] 'compile(beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [27.279703][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.277516][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.271898][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)
  - [27.265776][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [27.263589][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.260188][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.228437][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [27.226250][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.214644][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [27.212731][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.180291][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [27.176659][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.161355][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.159168][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.143864][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [27.139746][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.135412][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.132011][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.121808][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [27.111605][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [27.096301][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [27.088648][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.978201][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.967891][Inline Method] beaver.Parser$Simulator.reduce(int,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.952586][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.950673][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.936187][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [26.925984][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.921844][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.914192][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.906942][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [26.905371][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.897719][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.882414][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.879387][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.879234][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.869031][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.861378][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.851175][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [26.849691][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.834386][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.812399][Increase Field Security] 'type' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.810486][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.792414][Remove Method] 'createbeaver.spec.parser.GrammarParser$Terminals()' of type 'beaver.spec.parser.GrammarParser$Terminals'
  - [26.767263][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.762540][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.758167][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.742863][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.732660][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.727674][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.712369][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.710456][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.708543][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.692158][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.663883][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.661332][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.653663][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.627769][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [26.612464][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.530886][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.528335][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.506348][Increase Field Security] 'type' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.504435][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.502522][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.492319][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.490406][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.457425][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.447222][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.437018][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PACKAGE'
  - [26.426815][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.421633][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.417178][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.406975][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.396772][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.398657][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.417316][Freeze Method] Convert 'get(int)' of 'beaver.comp.util.IntArray' to static 
  - [26.434023][Move Method] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [26.467005][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.482348][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [26.488944][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.504248][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.504248][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.509643][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [26.524948][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.524948][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [26.526832][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.532954][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.548476][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [26.556128][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [26.558041][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.564638][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [26.581128][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.584312][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [26.606300][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.580723][Inline Method] beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser() into beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.564568][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.562655][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.540969][Inline Method] beaver.Parser$Simulator.shift(short,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.534847][Increase Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.530728][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.523075][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.520721][Increase Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.505416][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.490112][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.457131][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.454689][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [26.447037][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [26.439384][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.429961][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [26.425588][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.423314][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [26.318600][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.314227][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.309374][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.296556][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.292183][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.275475][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.265272][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PRIVATE'
  - [26.268673][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.271224][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.272924][Decrease Method Security] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [26.279046][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.285206][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.288390][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [26.334815][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [26.343200][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.346261][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.357441][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.368621][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.373468][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.379348][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.385470][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [26.391568][Decrease Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PROTECTED'
  - [26.402266][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [26.408974][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.404128][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.415049][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.418450][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.410035][Remove Method] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.403327][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.388420][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.383656][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.361296][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.359383][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.357470][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.346289][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.344376][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.339023][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [26.323719][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PROTECTED'
  - [26.284961][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.268191][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.262069][Increase Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.270454][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.272155][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.278315][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.270662][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.277715][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.286420][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.303120][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [26.314041][Freeze Method] Convert 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [26.316592][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.316592][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.322714][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.325775][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.327688][Decrease Method Security] 'zzRefill(beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.329852][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.336732][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [26.355514][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.362222][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.403726][Inline Method] beaver.spec.ast.Declaration$Imports.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Imports.accept(beaver.spec.ast.TreeWalker)
  - [26.439038][Move Method] 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.455808][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.454958][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.432598][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.397287][Move Method] 'splitActions(beaver.comp.ParserGenerator)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParserGenerator'
  - [26.374926][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.364723][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [26.349419][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PACKAGE'
  - [26.339216][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.337222][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill(beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.327019][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.325106][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.323193][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.320132][Increase Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.313424][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.291064][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.288003][Increase Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.265643][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.263729][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.130127][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.111565][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [26.104741][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.089436][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PROTECTED'
  - [26.074132][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PRIVATE'
  - [26.083506][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [26.093709][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [26.116566][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [26.114234][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [26.120394][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.109282][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.110982][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.114166][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [26.135402][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.138463][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.140664][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.159323][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [26.170245][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.178774][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.186354][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [26.188267][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.195320][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.200029][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.194627][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.199338][Inline Method] beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log) into beaver.spec.GrammarBuilder.createbeaver.spec.GrammarBuilder(beaver.comp.util.Log)
  - [26.176593][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.166390][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.160714][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [26.153270][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.130525][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.107779][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.105647][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.102246][Increase Method Security] 'insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.096124][Increase Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [26.073378][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.096124][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.096124][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.107496][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [26.113657][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.119051][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [26.125875][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.137248][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.146467][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.149018][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.153902][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.155702][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.171007][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.194309][Freeze Method] Convert 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to static 
  - [26.197493][Freeze Method] Convert 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [26.199679][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [26.202741][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.206897][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.212292][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.248991][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.259912][Freeze Method] Convert 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [26.118404][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.092850][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [26.072346][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.070632][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.055327][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PACKAGE'
  - [26.051264][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.051181][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [26.047026][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.042164][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.026860][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.024947][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.034866][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [26.039727][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.044829][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.086245][Instantiate Method] Move static method 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.109353][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration$1) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration$1)
  - [26.106802][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.113745][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.123665][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.125834][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.125834][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.128004][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.138207][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [26.140758][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.143819][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.147220][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.145307][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [26.214741][Decrease Field Security] 'elements' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.212190][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.216214][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.209271][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.205247][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.204847][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [26.135413][Increase Field Security] 'elements' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.125494][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [26.110189][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PRIVATE'
  - [26.108276][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.105944][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [26.103814][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.095504][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.093591][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.086776][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)
  - [26.063218][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.063140][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [26.056072][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.048420][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.040768][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.038559][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.026463][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.019395][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.011743][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.004676][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.004410][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [25.993750][Move Up Field] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.988649][Increase Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [25.984300][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.984225][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [25.984153][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [25.979052][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [25.973950][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.973881][Introduce Factory] for beaver.Symbol.<init>(short)
  - [25.963785][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [26.107098][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.114042][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.040457][Move Down Field] 'type' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [26.046578][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [26.053522][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [26.067409][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.077778][Introduce Factory] for beaver.comp.Action$Type.<init>(int,java.lang.String)
  - [26.080838][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.111104][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [26.133301][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.137673][Decrease Method Security] 'hasCollisions()' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.139860][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [26.157218][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.159131][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [26.161236][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [26.106635][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.118208][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.183292][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to static 
  - [26.195000][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [26.196913][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.184917][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [26.177413][Remove Method] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [26.172312][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.165368][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.151482][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.151415][Introduce Factory] for beaver.Symbol.<init>()
  - [26.149502][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.146632][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.144377][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.139837][Remove Method] 'compile(beaver.comp.io.SrcReader)' of type 'beaver.comp.util.Log'
  - [26.125950][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.091233][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.086131][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.074559][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.062803][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.060252][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.048473][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.046560][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.011223][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [25.959820][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of type 'beaver.comp.Action$1'
  - [25.954718][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [25.940583][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [25.946414][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [25.958193][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [25.988459][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [26.002593][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [26.012690][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.020342][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [26.023125][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.033221][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [26.035658][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.045533][Remove Method] 'visit(beaver.spec.ast.Rule)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.047178][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [26.050239][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.054507][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.097903][Inline Method] beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Implements.createbeaver.spec.ast.Declaration$Implements(beaver.Symbol[])
  - [26.106512][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [26.106512][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.106512][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [26.125171][Freeze Method] Convert 'isRemovable()' of 'beaver.comp.Action$Type' to static 
  - [26.149746][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.152101][Decrease Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.140322][Increase Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.140285][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [26.069611][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.047644][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.037441][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.027238][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.013103][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [25.998580][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [25.988484][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [25.931962][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
====== Run Result ======

* Name: Beaver|ABC|T50|P100|I7500
  * Run Info: Artificial Bee Colony. Population Size: 100, Max Trials: 50, Iterations: 7500.
  * Time taken: 2672.68 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1503356

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.819772
  * Possible Actions: 653
  * Applied Actions: 580
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.8964
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1049
    * packagenesting: 1.5000
    * getters: 0.3474
    * NumAssEl_ssc: 0.0000
    * numOps: 4.6947
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 2.9895
    * staticness: 0.1810
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 55.7500
    * iC_Par: 2.6526
    * eC_Par: 3.2526
    * Dep_In: 5.7579
    * avrgMethodVisibility: 1.5608
    * Dep_Out: 5.6421
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [29.010423][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [29.016545][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [29.023141][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [29.043301][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [29.033098][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [29.042521][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [29.044055][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.977185][Introduce Factory] for beaver.spec.GrammarBuilder$DeclarationWalker.<init>()
  - [28.966829][Freeze Method] Convert 'yycharat(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.973425][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.978527][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [28.961312][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [28.966820][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.950660][Freeze Method] Convert 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [28.950061][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [28.910689][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [28.912146][Decrease Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.894931][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.852422][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String)
  - [28.824567][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to static 
  - [28.773588][Freeze Method] Convert 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to static 
  - [28.762980][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.754613][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [28.732626][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [28.705196][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [28.703665][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.685185][Freeze Method] Convert 'removeResolvedActions()' of 'beaver.comp.Action$List' to static 
  - [28.571496][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [28.570039][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.559430][Freeze Method] Convert 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.537467][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [28.513017][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [28.499707][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [28.481226][Freeze Method] Convert 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to static 
  - [28.465066][Freeze Method] Convert 'findOffset(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [28.463536][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.447376][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.443975][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.388231][Introduce Factory] for beaver.comp.Action$Accept.<init>(beaver.spec.Grammar)
  - [28.368203][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [28.362450][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [28.347446][Freeze Method] Convert 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [28.329209][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.313905][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [28.312574][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [28.310552][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [28.309094][Increase Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [28.305693][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.305535][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [28.304004][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.238042][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.236868][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [28.230272][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.227616][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [28.226086][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.219489][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.209043][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [28.207513][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.204112][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.188807][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [28.183706][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.180952][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.175850][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.171478][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.168335][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [28.166805][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.160208][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.158678][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.157147][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.150551][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.141315][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [28.123683][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [28.120282][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.119236][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.115835][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [28.106932][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [28.100336][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.070496][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.066123][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.064323][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.998360][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.970215][Make Class Abstract] beaver.comp.Action
  - [27.965842][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.961469][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.948277][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.920131][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.915029][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.914868][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.913067][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.909666][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.908310][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.906610][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.901508][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.899808][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.896941][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.893540][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.884117][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.880291][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.875189][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.869067][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.863966][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.798003][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.732041][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.731479][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.724883][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.691902][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.681699][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PRIVATE'
  - [27.650873][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.649072][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.647272][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.642170][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.637797][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.571835][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.556530][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.554730][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.545939][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [27.479977][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.493169][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [27.482966][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.495822][Freeze Method] Convert 'findNextState(int,short)' of 'beaver.ParsingTables' to static 
  - [27.484159][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [27.495153][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [27.506074][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [27.536339][Freeze Method] Convert 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to static 
  - [27.538040][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.603124][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to static 
  - [27.617391][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.619432][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.628855][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [27.637100][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.635187][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.653846][Freeze Method] Convert 'initStack()' of 'beaver.Parser$Simulator' to static 
  - [27.656907][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [27.654867][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.687848][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [27.676854][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [27.669632][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [27.665103][Move Down Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [27.663975][Move Down Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.648671][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.642075][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.626770][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.624327][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [27.623566][Move Down Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [27.621942][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$2'
  - [27.620029][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.617247][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.601942][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.601576][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.593923][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.570782][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.569486][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [27.563364][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.557064][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.541759][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [27.535163][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.529629][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [27.529218][Move Down Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [27.513914][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [27.509412][Inline Method] beaver.comp.Action$List.removeResolvedActions(beaver.comp.Action$List) into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [27.499208][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [27.492612][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.477308][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.411345][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.407735][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.404143][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.388838][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.385841][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.382440][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.367135][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.351326][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.318345][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.313243][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.310093][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.306358][Introduce Factory] for beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol)
  - [27.303152][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [27.299822][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.293887][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [27.290486][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.283833][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.273630][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PACKAGE'
  - [27.263099][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [27.261186][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.259273][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.251621][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [27.248811][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.238608][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.232486][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.232461][Move Up Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its super class 'beaver.spec.ast.TreeWalker'
  - [27.230548][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.228991][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [27.218788][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PACKAGE'
  - [27.213049][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.205762][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.203849][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.199476][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.191823][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [27.176519][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.161214][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.144507][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.142593][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.134941][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [27.132756][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.116554][Inline Method] beaver.Parser$Simulator.initStack(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [27.107754][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [27.105841][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.103928][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.100385][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.097324][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.087629][Move Method] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.072324][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [27.064672][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [27.062605][Move Down Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [27.059204][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.054424][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.045001][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.033650][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.023447][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.013244][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [27.003041][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [26.999640][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.996239][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.994326][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.989953][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.987142][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [26.982041][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [26.978640][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.976174][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.965971][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.950666][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [26.948753][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.933449][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.931535][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.928134][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.895153][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [26.893240][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.883037][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.850056][Increase Field Security] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to 'PROTECTED'
  - [26.848432][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.846519][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.842146][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.840233][Increase Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.830030][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PRIVATE'
  - [26.828435][Move Down Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [26.820783][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.810580][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [26.804458][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.796806][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.789154][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [26.784781][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.782868][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.773445][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [26.769618][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.767705][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.763779][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.748474][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.744648][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.734445][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PACKAGE'
  - [26.726793][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.723392][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.719566][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.708215][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [26.706302][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.690997][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.680794][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [26.670591][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [26.666765][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.662939][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.655287][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.652992][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [26.641740][Move Down Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [26.634499][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.626846][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.610461][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.608548][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.602427][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.596268][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [26.586065][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.584152][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.573359][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.568987][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.562865][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.547560][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.545647][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.543734][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.541821][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.535699][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.534075][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [26.523872][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PRIVATE'
  - [26.519332][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [26.517418][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.508150][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.500497][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.500337][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition$Element' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.496511][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.494887][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [26.488765][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.462871][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [26.460958][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.458917][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.452795][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.446673][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.436470][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.404030][Increase Field Security] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [26.402117][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.391914][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PACKAGE'
  - [26.393954][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.402191][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.437009][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [26.439050][Decrease Method Security] 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.452026][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.454213][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [26.458944][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder' to static 
  - [26.455267][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.458668][Decrease Method Security] 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.469590][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [26.470253][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.481603][Move Method] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$Error' to its parameter type 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [26.505288][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [26.511613][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.522607][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.533528][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [26.539688][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.543089][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.545130][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.554553][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [26.548431][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.535239][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.531413][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.529500][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.514195][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [26.498891][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [26.496977][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.486774][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PACKAGE'
  - [26.479122][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.471470][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.467644][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.456293][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [26.455972][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.445769][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [26.436605][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.421301][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.409221][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.401568][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.397196][Increase Method Security] 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.395282][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.391456][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.389416][Increase Method Security] 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.304512][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.289208][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.287167][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.302510][Freeze Method] Convert 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to static 
  - [26.425829][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.431951][Decrease Method Security] 'reduce(int)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.437345][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [26.447549][Decrease Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.463769][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.471879][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.472402][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.476868][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.476868][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.486153][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.486153][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.518594][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.572888][Introduce Factory] for beaver.Parser$Exception.<init>(java.lang.String)
  - [26.589108][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [26.615531][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [26.618680][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.622081][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.627183][Decrease Method Security] 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.640159][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.632049][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [26.629119][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.618916][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.615090][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.604887][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.594684][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.581708][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.580742][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.548302][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.547504][Remove Method] 'visit(beaver.spec.ast.Declaration$Implements)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.537301][Increase Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.535115][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.534592][Move Method] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.524388][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.511412][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.511012][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [26.510315][Remove Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.409308][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.407013][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [26.405389][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.401563][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.393710][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.391356][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.345487][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.217624][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.216000][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [26.149292][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.154024][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.159014][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [26.159014][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.178716][Inline Method] beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log) into beaver.spec.GrammarBuilder.createbeaver.spec.GrammarBuilder(beaver.comp.util.Log)
  - [26.178716][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.194059][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.224324][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [26.228697][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.235653][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [26.240309][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.250057][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [26.252243][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [26.252766][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.254953][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [26.259104][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.262288][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.277299][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [26.278321][Introduce Factory] for beaver.Symbol.<init>(short)
  - [26.280508][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PROTECTED'
  - [26.286668][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.284446][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.147668][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.145313][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.127645][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.123272][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.133475][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PROTECTED'
  - [26.138908][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.144490][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.144490][Make Class Final] beaver.comp.Action$Accept
  - [26.150611][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.167930][Instantiate Method] Move static method 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [26.170116][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.174848][Freeze Method] Convert 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.311936][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.314122][Decrease Method Security] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.355994][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.361905][Move Method] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [26.381944][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.367806][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.370990][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [26.378642][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.380257][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.382612][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.385796][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.403154][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.333720][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PROTECTED'
  - [26.331366][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.228714][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.218617][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [26.208414][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.203530][Instantiate Method] Move static method 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[],beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [26.199704][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.164367][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.160541][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.150444][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [26.146618][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.136415][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.134061][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.131706][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.129351][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.094014][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.079526][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.069323][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PRIVATE'
  - [26.054019][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [26.048444][Move Method] 'writeReduceActionCode(java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Production' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [26.042220][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.038394][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.177357][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.190716][Remove Method] 'visit(beaver.spec.ast.Declaration$Header)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.196837][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.207040][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.212435][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [26.212435][Make Class Final] beaver.comp.Action$List
  - [26.224008][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.244935][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.244935][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.247122][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PACKAGE'
  - [26.270423][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.235706][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.260144][Inline Method] beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser$Events.createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)
  - [26.261511][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [26.264293][Decrease Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.283305][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder)
  - [26.287677][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.298599][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.306314][Decrease Field Security] 'declarations' of 'beaver.Symbol' to 'PROTECTED'
  - [26.437086][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.412923][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.378805][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.374432][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.305680][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.295477][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PACKAGE'
  - [26.291651][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.155344][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.143804][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.142140][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.133722][Move Method] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.105592][Move Method] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.103173][Remove Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.098800][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.064682][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.000249][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [25.932012][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [25.921556][Remove Method] 'createbeaver.ParsingTables()' of type 'beaver.ParsingTables'
  - [25.899495][Inline Method] beaver.spec.ast.Declaration$TypeOf.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$TypeOf.accept(beaver.spec.ast.TreeWalker)
  - [25.901681][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PUBLIC'
  - [25.909372][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [25.943491][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [25.977609][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [26.022730][Remove Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.run.Make)' of type 'beaver.comp.util.Log'
  - [26.052995][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [26.054620][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.058021][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.084792][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.101851][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.104037][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.127723][Introduce Factory] for beaver.spec.Grammar$Exception.<init>(java.lang.String)
  - [26.130783][Decrease Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.096665][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [26.100066][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.107145][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [26.115674][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.159174][Inline Method] beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables) into beaver.comp.ParserGenerator$CompiledParser.createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.206268][Inline Method] beaver.spec.ast.Declaration$ClassCode.visit(beaver.spec.GrammarBuilder$DeclarationWalker) into beaver.spec.ast.Declaration$ClassCode.accept(beaver.spec.ast.TreeWalker)
  - [26.223193][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [26.221569][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.218190][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [26.149953][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.115835][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.113503][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [26.011147][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [25.994404][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [25.964898][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [25.896662][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [25.891152][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [25.888091][Increase Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [25.881970][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [25.878206][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [25.875423][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [25.848857][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [25.838937][Increase Field Security] 'elements' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [25.845059][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [25.847842][Decrease Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [25.872950][Inline Method] beaver.spec.Grammar.<init>() into beaver.spec.Grammar.createbeaver.spec.Grammar()
  - [25.875727][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [25.891032][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [25.906336][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [25.907003][Remove Method] 'visit(beaver.spec.ast.Declaration$Goal)' of type 'beaver.spec.GrammarBuilder$3'
  - [25.929765][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$1'
  - [25.923643][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [25.923643][Make Class Non-Final] beaver.comp.Action$List
  - [25.933562][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [25.975851][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [25.965648][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [25.975567][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [25.986488][Freeze Method] Convert 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to static 
  - [25.986488][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [25.971184][Increase Method Security] 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [25.977344][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [25.980745][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [25.990664][Decrease Field Security] 'elements' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [25.962212][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [25.946908][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [25.927453][Inline Method] beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser() into beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [25.922352][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [25.912433][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [25.912354][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [25.897049][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [25.894572][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [25.891511][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [25.876206][Increase Method Security] 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [25.871834][Increase Method Security] 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [25.865712][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [25.862311][Increase Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [25.858326][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [25.858251][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [25.858180][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [25.848639][Remove Method] 'visit(beaver.spec.ast.Declaration$TypeOf,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [25.844267][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [25.834064][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [25.824144][Increase Field Security] 'elements' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [25.819772][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
====== Run Result ======

* Name: Beaver|ABC|T50|P100|I7500
  * Run Info: Artificial Bee Colony. Population Size: 100, Max Trials: 50, Iterations: 7500.
  * Time taken: 2685.17 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1504138

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.996991
  * Possible Actions: 619
  * Applied Actions: 531
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9207
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3158
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7053
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 2.9895
    * staticness: 0.1451
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 55.8750
    * iC_Par: 2.6632
    * eC_Par: 3.3053
    * Dep_In: 5.7263
    * avrgMethodVisibility: 1.7530
    * Dep_Out: 5.6526
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [29.008365][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [29.013467][Decrease Method Security] 'shift(short)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [28.997243][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [29.004947][Move Up Method] '<init>(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [29.003416][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [29.014410][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [29.001664][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [28.950686][Freeze Method] Convert 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to static 
  - [28.935381][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.928417][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.852267][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [28.776117][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [28.787111][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [28.798105][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [28.801697][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.834678][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [28.837739][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [28.840290][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [28.843350][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [28.845901][Decrease Method Security] 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [28.838937][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.769300][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to static 
  - [28.768025][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [28.663686][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.run.Options'
  - [28.651395][Freeze Method] Convert 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [28.644799][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.638203][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.623701][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [28.608434][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [28.557456][Freeze Method] Convert 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to static 
  - [28.553015][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.546419][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.544889][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.527611][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [28.495007][Move Method] 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.491946][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.481589][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.415627][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.411254][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.404159][Introduce Factory] for beaver.Symbol.<init>()
  - [28.372749][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.366627][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.363566][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.341579][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.334982][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.329881][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [28.328347][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [28.324362][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [28.319989][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.318459][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.290313][Make Class Abstract] beaver.comp.Action
  - [28.283717][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.282441][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.278069][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.276793][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [28.273392][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.207430][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [28.200834][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.199861][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.196800][Increase Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [28.165973][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [28.159852][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.158321][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.143017][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [28.077054][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [28.076855][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.072483][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [28.069082][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.066527][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [28.064916][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.063292][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [28.061761][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.051558][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.985596][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.979474][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.966282][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.961909][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.939922][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.924617][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.922311][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.856349][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.825522][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.810218][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.794913][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.791512][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.787140][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.785609][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.782548][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.747582][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.682701][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.672498][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.607617][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.604216][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.588911][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.587381][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.581259][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.563239][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [27.559838][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.558137][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.556437][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.554826][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.558465][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [27.564953][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [27.575874][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [27.586796][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [27.588046][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.589555][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.589555][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.589555][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.620228][Instantiate Method] Move static method 'propagateTypes(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.NonTerminal'
  - [27.631177][Move Up Field] 'state' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [27.631177][Make Class Final] beaver.comp.Action$Accept
  - [27.640600][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [27.650804][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [27.639269][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.639269][Make Class Final] beaver.comp.Configuration$Set
  - [27.639269][Make Class Non-Final] beaver.ParsingTables
  - [27.643641][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.646825][Freeze Method] Convert 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [27.652398][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [27.637093][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.632720][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.596137][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.585323][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [27.574510][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [27.571577][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.568176][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.552871][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [27.548694][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [27.522938][Instantiate Method] Move static method 'buildActions(beaver.spec.Grammar,beaver.comp.ParserGenerator)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParserGenerator'
  - [27.513670][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [27.510637][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [27.389295][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.386243][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.370938][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.369371][Move Down Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.359948][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.355575][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.352387][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.350474][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.340271][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PRIVATE'
  - [27.332619][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.317314][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.316483][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.307060][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.214825][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.215464][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.211091][Increase Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [27.226396][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PUBLIC'
  - [27.245952][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [27.256874][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [27.252501][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.254414][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.241439][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.238378][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.251794][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [27.253391][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.258702][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [27.282003][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser$Simulator' to static 
  - [27.282003][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.278602][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.283704][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [27.286765][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [27.296539][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [27.293195][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.303398][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [27.255115][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.248993][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [27.243689][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [27.241989][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.235867][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.216983][Instantiate Method] Move static method 'propagateTypes(beaver.spec.GrammarBuilder)' of 'beaver.spec.NonTerminal' to its parameter type 'beaver.spec.GrammarBuilder'
  - [27.213157][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.211456][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.211060][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [27.204352][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.200807][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.198304][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.170158][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.163450][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.163285][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.153082][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.119542][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [27.117944][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.116244][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.986131][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.983815][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [26.982191][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.996570][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [27.003394][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.997272][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.014331][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [27.016032][Decrease Method Security] 'propagateTypes()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.019093][Decrease Method Security] 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [27.019093][Make Class Non-Final] beaver.comp.Configuration$Set
  - [27.020793][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.025895][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [27.027595][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.026222][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.026222][Make Class Final] beaver.comp.Configuration
  - [27.033045][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.042793][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [27.054166][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.055867][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.185101][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [27.190496][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [27.205579][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [27.207280][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.191732][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [27.181529][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.177157][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.160387][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [27.154265][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.150864][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.147534][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.145621][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.132503][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [27.131751][Move Down Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.121548][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [27.115426][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [27.105843][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [27.098867][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [27.091355][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.089442][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.085912][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.018832][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.003527][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.997405][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [26.993032][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.982829][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [26.971357][Inline Method] beaver.Parser$Simulator.reduce(int,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.968177][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.952872][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [26.950118][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.946717][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.936514][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PACKAGE'
  - [26.869434][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.867608][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.864953][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [26.860580][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.856307][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [26.856012][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.855466][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.841282][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.825978][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.824065][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.827249][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder' to static 
  - [26.829162][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [26.833728][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.837879][Freeze Method] Convert 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.837879][Make Class Non-Final] beaver.comp.Configuration
  - [26.904959][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.938499][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.949679][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.954723][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.956321][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.978681][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.989602][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [26.997472][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [27.004180][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.019484][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PUBLIC'
  - [27.022545][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.031239][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Shift'
  - [27.042161][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [27.084032][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [27.095212][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [27.092100][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [27.076796][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [26.954267][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.944519][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [26.815205][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.806987][Instantiate Method] Move static method 'makeDescription(beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.791682][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [26.789528][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [26.777956][Increase Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.774895][Increase Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.767229][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.751925][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [26.743796][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.736144][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.730022][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.706877][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.693544][Inline Method] beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser() into beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.678240][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.677796][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.673424][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.658119][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.653985][Inline Method] beaver.spec.GrammarBuilder.propagateTypes() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder)
  - [26.651315][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)
  - [26.639743][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.609805][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.607891][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.601770][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.598002][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.587798][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [26.577595][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [26.551701][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [26.547329][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.532024][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.536175][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [26.528523][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.629073][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.645773][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [26.676038][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [26.677703][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.693007][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.694920][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [26.729039][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [26.729039][Make Class Final] beaver.comp.Action$Shift
  - [26.736691][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PROTECTED'
  - [26.753750][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.784016][Freeze Method] Convert 'start()' of 'beaver.spec.Production$List' to static 
  - [26.768711][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.771494][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.774270][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [26.776183][Decrease Method Security] 'zzUnpackRowMap(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.798929][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.812576][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.806901][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [26.800779][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.785475][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.781102][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.775078][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.764875][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Header' to 'PACKAGE'
  - [26.759773][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PACKAGE'
  - [26.757733][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.747530][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.730470][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.720267][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.706620][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.607097][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.575686][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.560381][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [26.485770][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.475566][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.466162][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.460040][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.453919][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.442291][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.432088][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [26.431657][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.421454][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [26.420039][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [26.418126][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.407923][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.406009][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.404096][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.402056][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.396954][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [26.381650][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [26.375528][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.344818][Move Down Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition'
  - [26.334615][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.312319][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.308454][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.252497][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.250873][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$2'
  - [26.244751][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.242838][Increase Method Security] 'zzUnpackRowMap(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.256973][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.293156][Introduce Factory] for beaver.comp.util.Log$Record.<init>(int,int,java.lang.String)
  - [26.316458][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.338258][Inline Method] beaver.comp.Action$List.<init>(beaver.comp.State) into beaver.comp.Action$List.createbeaver.comp.Action$List(beaver.comp.State)
  - [26.302921][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.305107][Decrease Method Security] 'shift(beaver.Symbol,short,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [26.316886][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.340049][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [26.341815][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.347255][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [26.358427][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [26.368392][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [26.391693][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [26.322001][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.324187][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [26.288850][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [26.298947][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [26.317441][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder)
  - [26.317441][Make Class Final] beaver.comp.Configuration
  - [26.326815][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [26.320375][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.296219][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.294306][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.293250][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.279115][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.274742][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.269526][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.265154][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.264746][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.252967][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.233109][Remove Method] 'createbeaver.ParsingTables()' of type 'beaver.ParsingTables'
  - [26.231068][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.164795][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.154592][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [26.148470][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.129908][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [26.114603][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.118243][Freeze Method] Convert 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [26.141898][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.144119][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.179456][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [26.188630][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [26.190442][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.155105][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [26.176204][Remove Method] 'scannerError(beaver.Scanner$Exception)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.177186][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.187389][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [26.196674][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.197495][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [26.199535][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.210457][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [26.224592][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.239896][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PUBLIC'
  - [26.248004][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [26.272172][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.275999][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.290133][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.274829][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.266849][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.252715][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.242511][Increase Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [26.240471][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.234539][Instantiate Method] Move static method 'compile(beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [26.210371][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.205269][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.200168][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.055358][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.031372][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.013864][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.019986][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [26.025381][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [26.030112][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.042327][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.053249][Freeze Method] Convert 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to static 
  - [26.054860][Decrease Method Security] 'syntaxError(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Symbol' to 'PROTECTED'
  - [26.060982][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.066977][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [26.071128][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.073910][Decrease Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.075521][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.078298][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [26.095907][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder)
  - [26.098968][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PROTECTED'
  - [26.105089][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [26.106339][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.109400][Decrease Method Security] 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PROTECTED'
  - [26.119870][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [26.117829][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.127203][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [26.112545][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.100330][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.089860][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [26.074555][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.072642][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.068608][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.065826][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.062249][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.046945][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.031640][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [26.029727][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.018827][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.016914][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.009262][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.004160][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.019830][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.030300][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [26.030676][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.033737][Decrease Method Security] 'writeReduceActionCode(java.io.Writer)' of 'beaver.spec.Production' to 'PACKAGE'
  - [26.048395][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.085542][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)
  - [26.087374][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.088985][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.094086][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [26.097147][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [26.107618][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.105705][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.107235][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [26.108219][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.117593][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [26.120375][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.125477][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.123645][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.125256][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.106208][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.095738][Increase Field Security] 'id' of 'beaver.comp.State' to 'PACKAGE'
  - [26.088086][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.087710][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.082775][Move Method] 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.067470][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [26.052165][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.037507][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.032623][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.017318][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.015439][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.010337][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.008424][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.003039][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.016372][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [26.016372][Make Class Final] beaver.comp.State$Factory
  - [26.036659][Move Method] 'setPrecedence(int,beaver.spec.Terminal,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [26.036659][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [26.040795][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.053229][Move Method] 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.056289][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.058476][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [26.056928][Move Method] 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.State'
  - [26.075597][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.077510][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.104844][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [26.129735][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.132796][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.134407][Decrease Method Security] 'misspelledTokenReplaced(beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [26.137184][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [26.139966][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.157204][Move Down Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition'
  - [26.157204][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [26.167152][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [26.161030][Increase Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.139821][Instantiate Method] Move static method 'setPrecedence(int,beaver.spec.Terminal,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.134353][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.123883][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [26.119510][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.116036][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.114123][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.040832][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.035730][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.028078][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.023530][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [26.003808][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [26.001895][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.997522][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [25.996991][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
